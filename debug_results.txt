üîç === V√ÅROS ELEMZ√âS SIGNAL CHAIN HIBAKERES√âS ===
üîó 1. SIGNAL CONNECTION keres√©se...
src/gui/workers/analysis_worker.py:73:    - analysis_completed(dict): Sikeres elemz√©s eredm√©nye
src/gui/workers/analysis_worker.py:85:    analysis_completed = Signal(dict)      # Eredm√©ny dictionary
src/gui/workers/analysis_worker.py:322:            self.analysis_completed.emit(structured_result)
src/gui/workers/analysis_worker.py:402:            self.analysis_completed.emit(result)
src/gui/workers/analysis_worker.py:518:            self.worker.analysis_completed.connect(self._on_completed)
src/gui/trend_analytics_tab.py:1126:    analysis_completed = Signal(dict)
src/gui/trend_analytics_tab.py:1465:            self.current_worker.data_received.connect(self.on_analysis_completed)
src/gui/trend_analytics_tab.py:1476:    def on_analysis_completed(self, trend_results: Dict) -> None:
src/gui/trend_analytics_tab.py:1491:            self.analysis_completed.emit(trend_results)
src/gui/analytics_view.py:28:üî• SIGNAL EMISSION JAV√çT√ÅS - multi_city_analysis_completed signal kibocs√°t√°s
src/gui/analytics_view.py:678:    analysis_completed = Signal()
src/gui/analytics_view.py:1250:            self.analysis_completed.emit()
src/gui/main_window.py:9:‚úÖ _on_analysis_completed() met√≥dus TELJES √ÅT√çR√ÅSA
src/gui/main_window.py:993:        if hasattr(self.controller, 'analysis_completed'):
src/gui/main_window.py:994:            self.controller.analysis_completed.connect(self._on_analysis_completed_with_city_fix)
src/gui/main_window.py:995:            print("üéØ ‚úÖ KRITIKUS: AppController.analysis_completed ‚Üí MainWindow._on_analysis_completed_with_city_fix CONNECTED (V√ÅROS ELEMZ√âS FIX)!")
src/gui/main_window.py:1315:    def _on_analysis_completed_with_city_fix(self, result_data: Dict[str, Any]) -> None:
src/gui/main_window.py:1324:        print(f"üéØ KRITIKUS DEBUG: _on_analysis_completed_with_city_fix called - V√ÅROS ELEMZ√âS ADATFOLYAM FIX!")
src/gui/main_window.py:1678:        <p><i>üéØ ‚úÖ _on_analysis_completed_with_city_fix() met√≥dus L√âTREHOZVA!</i></p>
src/gui/app_controller.py:60:    analysis_completed = Signal(dict)           # result_data
src/gui/app_controller.py:201:            self.active_analysis_worker.analysis_completed.connect(self._on_analysis_completed)
src/gui/app_controller.py:409:    def _on_analysis_completed(self, result_data: dict):
src/gui/app_controller.py:422:            self.analysis_completed.emit(processed_result)
src/gui/app_controller.py:516:                self.active_analysis_worker.analysis_completed.disconnect()
src/gui/main_windowold.py:15:üîß HIB√ÅS JELZ√âSEK ELT√ÅVOL√çTVA: analytics_panel.analysis_completed hib√°s bek√∂t√©sek t√∂r√∂lve!
src/gui/main_windowold.py:1157:            def debug_trend_analysis_completed(results: dict):
src/gui/main_windowold.py:1159:                print(f"üìà DEBUG [TREND_ANALYTICS‚ÜíMAIN_WINDOW]: analysis_completed: {city_name}")
src/gui/main_windowold.py:1161:            self.trend_analytics_tab.analysis_completed.connect(debug_trend_analysis_completed)
src/gui/main_windowold.py:1162:            self.trend_analytics_tab.analysis_completed.connect(self._on_trend_analysis_completed)
src/gui/main_windowold.py:1163:            print("‚úÖ DEBUG: TrendAnalyticsTab.analysis_completed ‚Üí MainWindow._on_trend_analysis_completed CONNECTED")
src/gui/main_windowold.py:1658:    def _on_trend_analysis_completed(self, results: Dict[str, Any]) -> None:

üì° 2. CONTROLLER SIGNAL EMIT keres√©se...
src/gui/workers/analysis_worker.py-320-            
src/gui/workers/analysis_worker.py-321-            self._emit_progress("Multi-city elemz√©s befejezve", 100)
src/gui/workers/analysis_worker.py:322:            self.analysis_completed.emit(structured_result)
src/gui/workers/analysis_worker.py-323-            
src/gui/workers/analysis_worker.py-324-        except Exception as e:
--
src/gui/workers/analysis_worker.py-400-            
src/gui/workers/analysis_worker.py-401-            self._emit_progress("Egyedi elemz√©s befejezve", 100)
src/gui/workers/analysis_worker.py:402:            self.analysis_completed.emit(result)
src/gui/workers/analysis_worker.py-403-            
src/gui/workers/analysis_worker.py-404-        except Exception as e:
--
src/gui/trend_analytics_tab.py-1489-            
src/gui/trend_analytics_tab.py-1490-            # Signal emission
src/gui/trend_analytics_tab.py:1491:            self.analysis_completed.emit(trend_results)
src/gui/trend_analytics_tab.py-1492-            
src/gui/trend_analytics_tab.py-1493-        except Exception as e:
--
src/gui/analytics_view.py-1248-            
src/gui/analytics_view.py-1249-            # Signal
src/gui/analytics_view.py:1250:            self.analysis_completed.emit()
src/gui/analytics_view.py-1251-            
src/gui/analytics_view.py-1252-        except Exception as e:
--
src/gui/app_controller.py-420-            
src/gui/app_controller.py-421-            # Success signalok
src/gui/app_controller.py:422:            self.analysis_completed.emit(processed_result)
src/gui/app_controller.py-423-            self.status_updated.emit(f"‚úÖ {analysis_type.replace('_', ' ').title()} elemz√©s befejezve ({duration:.1f}s)")
src/gui/app_controller.py-424-            

‚öôÔ∏è 3. ANALYSIS WORKER SIGNAL EMIT keres√©se...
src/gui/workers/analysis_worker.py-70-    
src/gui/workers/analysis_worker.py-71-    JELZ√âSEK:
src/gui/workers/analysis_worker.py-72-    - progress_updated(str, int): Progress sz√∂veg + sz√°zal√©k
src/gui/workers/analysis_worker.py:73:    - analysis_completed(dict): Sikeres elemz√©s eredm√©nye
src/gui/workers/analysis_worker.py-74-    - analysis_failed(str): Hiba √ºzenet
src/gui/workers/analysis_worker.py-75-    - analysis_cancelled(): Megszak√≠t√°s meger≈ës√≠t√©se
src/gui/workers/analysis_worker.py-76-    
--
src/gui/workers/analysis_worker.py-82-    
src/gui/workers/analysis_worker.py-83-    # === WORKER SIGNALS ===
src/gui/workers/analysis_worker.py-84-    progress_updated = Signal(str, int)    # (sz√∂veg, sz√°zal√©k)
src/gui/workers/analysis_worker.py:85:    analysis_completed = Signal(dict)      # Eredm√©ny dictionary
src/gui/workers/analysis_worker.py-86-    analysis_failed = Signal(str)          # Hiba √ºzenet
src/gui/workers/analysis_worker.py-87-    analysis_cancelled = Signal()          # Megszak√≠t√°s meger≈ës√≠t√©se
src/gui/workers/analysis_worker.py-88-    
--
src/gui/workers/analysis_worker.py-319-            }
src/gui/workers/analysis_worker.py-320-            
src/gui/workers/analysis_worker.py-321-            self._emit_progress("Multi-city elemz√©s befejezve", 100)
src/gui/workers/analysis_worker.py:322:            self.analysis_completed.emit(structured_result)
src/gui/workers/analysis_worker.py-323-            
src/gui/workers/analysis_worker.py-324-        except Exception as e:
src/gui/workers/analysis_worker.py-325-            self._logger.error(f"Multi-city elemz√©s hiba: {str(e)}")
--
src/gui/workers/analysis_worker.py-399-            }
src/gui/workers/analysis_worker.py-400-            
src/gui/workers/analysis_worker.py-401-            self._emit_progress("Egyedi elemz√©s befejezve", 100)
src/gui/workers/analysis_worker.py:402:            self.analysis_completed.emit(result)
src/gui/workers/analysis_worker.py-403-            
src/gui/workers/analysis_worker.py-404-        except Exception as e:
src/gui/workers/analysis_worker.py-405-            self._logger.error(f"Single location elemz√©s hiba: {str(e)}")
--
src/gui/workers/analysis_worker.py-515-            # Worker setup
src/gui/workers/analysis_worker.py-516-            self.worker = AnalysisWorker()
src/gui/workers/analysis_worker.py-517-            self.worker.progress_updated.connect(self._on_progress)
src/gui/workers/analysis_worker.py:518:            self.worker.analysis_completed.connect(self._on_completed)
src/gui/workers/analysis_worker.py-519-            self.worker.analysis_failed.connect(self._on_failed)
src/gui/workers/analysis_worker.py-520-            self.worker.analysis_cancelled.connect(self._on_cancelled)
src/gui/workers/analysis_worker.py-521-            

üéØ 4. MAINWINDOW HANDLER keres√©se...
4-"""
5-Universal Weather Research Platform - Main Window Module - V√ÅROS ELEMZ√âS SIGNAL FIX!
6-MainWindow Refaktor√°l√Ås + ANALYTICS SIGNAL FIX - UI FAGY√ÅS MEGOLDVA + ANALYTICS SIGNAL HANDLING HELYRE√ÅLL√çTVA + MAGYAR MEGY√âK AUTOMATIKUS BET√ñLT√âS + V√ÅROS ELEMZ√âS ADATFOLYAM JAV√çT√ÅS
7-
8-üéØ KRITIKUS JAV√çT√ÅS: V√ÅROS ELEMZ√âS ADATFOLYAM FIX!
9:‚úÖ _on_analysis_completed() met√≥dus TELJES √ÅT√çR√ÅSA
10-‚úÖ Single city analysis ‚Üí AnalyticsView signal connection JAV√çTVA
11-‚úÖ Weather data proper forwarding AnalyticsView-nak
12-‚úÖ Result data structure handling JAV√çTVA
13-‚úÖ Moscow lek√©rdez√©s ‚Üí AnalyticsView display M≈∞K√ñDIK
14-
--
989-            self.controller.analysis_started.connect(self._on_analysis_started)
990-            print("‚úÖ CLEAN: AppController.analysis_started ‚Üí MainWindow._on_analysis_started CONNECTED")
991-        
992-        # üéØ KRITIKUS: Elemz√©s befejez√©se (SIKER) - V√ÅROS ELEMZ√âS FIX!
993-        if hasattr(self.controller, 'analysis_completed'):
994:            self.controller.analysis_completed.connect(self._on_analysis_completed_with_city_fix)
995:            print("üéØ ‚úÖ KRITIKUS: AppController.analysis_completed ‚Üí MainWindow._on_analysis_completed_with_city_fix CONNECTED (V√ÅROS ELEMZ√âS FIX)!")
996-        
997-        # Elemz√©s hiba
998-        if hasattr(self.controller, 'analysis_failed'):
999-            self.controller.analysis_failed.connect(self._on_analysis_failed)
1000-            print("‚úÖ CLEAN: AppController.analysis_failed ‚Üí MainWindow._on_analysis_failed CONNECTED")
--
1310-        if hasattr(self, 'export_action'):
1311-            self.export_action.setEnabled(False)
1312-        
1313-        print(f"‚úÖ DEBUG: Analysis start handled: {analysis_type}")
1314-    
1315:    def _on_analysis_completed_with_city_fix(self, result_data: Dict[str, Any]) -> None:
1316-        """
1317-        üéØ KRITIKUS JAV√çT√ÅS: Elemz√©s sikeres befejez√©s√©nek kezel√©se - V√ÅROS ELEMZ√âS ADATFOLYAM FIX!
1318-        
1319-        Ez a met√≥dus v√©gre helyesen tov√°bb√≠tja a v√°ros elemz√©s eredm√©nyeit az AnalyticsView-nak!
1320-        
1321-        Args:
1322-            result_data: Elemz√©s eredm√©nye (kontextust√≥l f√ºgg≈ë strukt√∫ra)
1323-        """
1324:        print(f"üéØ KRITIKUS DEBUG: _on_analysis_completed_with_city_fix called - V√ÅROS ELEMZ√âS ADATFOLYAM FIX!")
1325-        print(f"üéØ DEBUG: Result keys: {list(result_data.keys()) if result_data else 'NO RESULT'}")
1326-        
1327-        try:
1328-            # Elemz√©s t√≠pus√°nak meghat√°roz√°sa
1329-            analysis_type = result_data.get('analysis_type', 'unknown')
--
1673-        <p><i>‚úÖ analytics_panel.multi_city_query_requested signal connection VISSZA√ÅLL√çTVA!</i></p>
1674-        <p><i>‚úÖ Analytics View ‚Üí MainWindow ‚Üí AppController ‚Üí AnalysisWorker flow HELYRE√ÅLL√çTVA!</i></p>
1675-        <p><i>‚úÖ Signal chain helyre√°ll√≠tva: AnalyticsView ‚Üí MainWindow ‚Üí MultiCityEngine</i></p>
1676-        <p><i>‚úÖ A KIT√ñR√ñLT analytics signal handling HIB√ÅTLANUL VISSZA√ÅLL√çTVA!</i></p>
1677-        <p><i>üéØ <b>V√ÅROS ELEMZ√âS ADATFOLYAM JAV√çTVA!</b></i></p>
1678:        <p><i>üéØ ‚úÖ _on_analysis_completed_with_city_fix() met√≥dus L√âTREHOZVA!</i></p>
1679-        <p><i>üéØ ‚úÖ Single city analysis ‚Üí AnalyticsView signal connection JAV√çTVA!</i></p>
1680-        <p><i>üéØ ‚úÖ Weather data proper forwarding AnalyticsView-nak!</i></p>
1681-        <p><i>üéØ ‚úÖ Result data structure handling JAV√çTVA!</i></p>
1682-        <p><i>üéØ ‚úÖ Moscow lek√©rdez√©s ‚Üí AnalyticsView display M≈∞K√ñDIK!</i></p>
1683-        <p><i>üó∫Ô∏è <b>MAGYAR MEGY√âK AUTOMATIKUS INTEGR√ÅCI√ì BEFEJEZVE!</b></i></p>

üìä 5. ANALYTICS VIEW UPDATE keres√©se...
359-        # Heatmap be√°gyaz√°sa
360-        layout.addWidget(self.temp_heatmap)
361-    
362:    def update_data(self, data: Dict[str, Any]):
363-        """üéØ H≈ëm√©rs√©klet konstans heatmap friss√≠t√©s"""
364-        try:
365-            # ‚úÖ DIREKT ADAT√ÅTAD√ÅS - aggreg√°ci√≥ a heatmap chart-ban t√∂rt√©nik
366:            self.temp_heatmap.update_data(data)
367-            
368-            logger.info("üå°Ô∏è H≈ëm√©rs√©klet KONSTANS HEATMAP tab friss√≠tve")
369-            
--
397-        # Heatmap be√°gyaz√°sa
398-        layout.addWidget(self.precip_heatmap)
399-    
400:    def update_data(self, data: Dict[str, Any]):
401-        """üéØ Csapad√©k konstans heatmap friss√≠t√©s - MINDEN T√âGLALAP KIT√ñLTVE"""
402-        try:
403-            # üé® METEOROL√ìGIAI SZ√çNSK√ÅLA BE√ÅLL√çT√ÅSA
--
406-            logger.debug(f"üé® Csapad√©k custom colormap be√°ll√≠tva: {type(self.precip_cmap)}")
407-            
408-            # ‚úÖ DIREKT ADAT√ÅTAD√ÅS - aggreg√°ci√≥ a heatmap chart-ban t√∂rt√©nik
409:            self.precip_heatmap.update_data(data)
410-            
411-            logger.info("üåßÔ∏è Csapad√©k KONSTANS HEATMAP tab friss√≠tve (0mm=feh√©r)")
412-            
--
440-        # Heatmap be√°gyaz√°sa
441-        layout.addWidget(self.wind_heatmap)
442-    
443:    def update_data(self, data: Dict[str, Any]):
444-        """üéØ Sz√©l konstans heatmap friss√≠t√©s - BEAUFORT PROGRESSZ√çV SZ√çNSK√ÅLA (√ÅTLAGOS MAX)"""
445-        try:
446-            # üîç DEBUG - Sz√©l adatok ellen≈ërz√©se
--
471-            logger.debug(f"üé® Sz√©l BEAUFORT colormap be√°ll√≠tva: {type(self.wind_cmap)}, param: {wind_param}")
472-            
473-            # ‚úÖ DIREKT ADAT√ÅTAD√ÅS - aggreg√°ci√≥ a heatmap chart-ban t√∂rt√©nik
474:            self.wind_heatmap.update_data(data)
475-            
476-            logger.info("üí® Sz√©l KONSTANS HEATMAP tab friss√≠tve (BEAUFORT 13 fokozat, √°tlagos max)")
477-            
--
505-        # Heatmap be√°gyaz√°sa
506-        layout.addWidget(self.windgust_heatmap)
507-    
508:    def update_data(self, data: Dict[str, Any]):
509-        """üéØ Max sz√©ll√∂k√©s konstans heatmap friss√≠t√©s - BEAUFORT PROGRESSZ√çV SZ√çNSK√ÅLA (SZ√âLL√ñK√âSEK)"""
510-        try:
511-            # üîç DEBUG - Sz√©ll√∂k√©s adatok ellen≈ërz√©se
--
536-            logger.debug(f"üé® Sz√©ll√∂k√©s BEAUFORT colormap be√°ll√≠tva: {type(self.windgust_cmap)}, param: {windgust_param}")
537-            
538-            # ‚úÖ DIREKT ADAT√ÅTAD√ÅS - aggreg√°ci√≥ a heatmap chart-ban t√∂rt√©nik
539:            self.windgust_heatmap.update_data(data)
540-            
541-            logger.info("üå™Ô∏è Max Sz√©ll√∂k√©s KONSTANS HEATMAP tab friss√≠tve (BEAUFORT 13 fokozat)")
542-            
--
601-            }
602-        """)
603-    
604:    def update_data(self, data: Dict[str, Any]):
605-        """üéØ KONSTANS HEATMAP Tab widget adatok friss√≠t√©se - BEAUFORT + MAX SZ√âLL√ñK√âS VERZI√ì"""
606-        try:
607-            # Adatok cache-el√©se
--
633-        
634-        try:
635-            if index == 0:  # H≈ëm√©rs√©klet tab (konstans heatmap)
636:                self.temp_tab.update_data(self.data_cache)
637-                self.tabs_initialized['temp'] = True
638-            elif index == 1:  # Csapad√©k tab (konstans heatmap, 0mm=feh√©r)
639:                self.precip_tab.update_data(self.data_cache)
640-                self.tabs_initialized['precip'] = True
641-            elif index == 2:  # Sz√©l tab (konstans heatmap, BEAUFORT, √°tlagos max)
642:                self.wind_tab.update_data(self.data_cache)
643-                self.tabs_initialized['wind'] = True
644-            elif index == 3:  # Max Sz√©ll√∂k√©s tab (konstans heatmap, BEAUFORT, max gusts)
645:                self.windgust_tab.update_data(self.data_cache)
646-                self.tabs_initialized['windgust'] = True
647-                
648-        except Exception as e:
--
1151-            
1152-            # Heatmap-ek friss√≠t√©se
1153-            if self.climate_tabs:
1154:                self.climate_tabs.update_data(fake_data)
1155-            
1156-            # Fake rekordok (Multi-City eredm√©nyekb≈ël)
1157-            fake_records = self._create_fake_records_from_multi_city(analytics_result)
--
1206-    
1207-    # === PUBLIKUS API MET√ìDUSOK ===
1208-    
1209:    def update_data(self, data: Dict[str, Any]) -> None:
1210-        """
1211-        üéØ KONSTANS HEATMAP adatok friss√≠t√©se - 365 T√âGLALAP - BEAUFORT + MAX SZ√âLL√ñK√âS VERZI√ì
1212-        
--
1241-            
1242-            # Tab widget friss√≠t√©se (konstans heatmap verzi√≥k)
1243-            if self.climate_tabs:
1244:                self.climate_tabs.update_data(data)
1245-            
1246-            # √Ållapot friss√≠t√©se
1247-            self._update_status(f"‚úÖ {total_days} nap ‚Üí 365 t√©glalap - Beaufort + Max Sz√©ll√∂k√©s Dashboard")

üåç 6. WEATHER DATA FLOW keres√©se...
src/gui/map_visualizer.py-241-    status_updated = Signal(str)          # status message
src/gui/map_visualizer.py-242-    
src/gui/map_visualizer.py:243:    def __init__(self, config: FoliumMapConfig, counties_gdf=None, weather_data=None, bridge_id=None, output_path=None):
src/gui/map_visualizer.py-244-        super().__init__()
src/gui/map_visualizer.py-245-        self.config = config
src/gui/map_visualizer.py-246-        self.counties_gdf = counties_gdf
src/gui/map_visualizer.py:247:        self.weather_data = weather_data
src/gui/map_visualizer.py-248-        self.bridge_id = bridge_id or str(uuid.uuid4())
src/gui/map_visualizer.py-249-        
--
src/gui/map_visualizer.py-280-            # === WEATHER OVERLAY ===
src/gui/map_visualizer.py-281-            
src/gui/map_visualizer.py:282:            if self.config.weather_overlay and self.weather_data:
src/gui/map_visualizer.py-283-                self.status_updated.emit("üå§Ô∏è Id≈ëj√°r√°si overlay...")
src/gui/map_visualizer.py-284-                self._add_weather_overlay(map_obj)
--
src/gui/map_visualizer.py-436-        üå§Ô∏è Id≈ëj√°r√°si adatok overlay hozz√°ad√°sa HeatMap plugin-nal.
src/gui/map_visualizer.py-437-        """
src/gui/map_visualizer.py:438:        if not self.weather_data:
src/gui/map_visualizer.py-439-            print("‚ö†Ô∏è No weather data available for overlay")
src/gui/map_visualizer.py-440-            return
src/gui/map_visualizer.py-441-        
src/gui/map_visualizer.py:442:        print(f"üå§Ô∏è Adding weather overlay with {len(self.weather_data)} data points")
src/gui/map_visualizer.py-443-        
src/gui/map_visualizer.py-444-        try:
src/gui/map_visualizer.py-445-            # === H≈êM√âRS√âKLET HEATMAP ===
src/gui/map_visualizer.py:446:            if 'temperature' in self.weather_data:
src/gui/map_visualizer.py-447-                self._add_temperature_heatmap(map_obj)
src/gui/map_visualizer.py-448-            
src/gui/map_visualizer.py-449-            # === CSAPAD√âK OVERLAY ===
src/gui/map_visualizer.py:450:            if 'precipitation' in self.weather_data:
src/gui/map_visualizer.py-451-                self._add_precipitation_overlay(map_obj)
src/gui/map_visualizer.py-452-            
src/gui/map_visualizer.py-453-            # === SZ√âL SEBESS√âG OVERLAY ===
src/gui/map_visualizer.py:454:            if 'wind_speed' in self.weather_data:
src/gui/map_visualizer.py-455-                self._add_wind_speed_overlay(map_obj)
src/gui/map_visualizer.py-456-            
--
src/gui/map_visualizer.py-472-            # H≈ëm√©rs√©klet adatok el≈ëk√©sz√≠t√©se
src/gui/map_visualizer.py-473-            temp_data = []
src/gui/map_visualizer.py:474:            for location, data in self.weather_data.get('temperature', {}).items():
src/gui/map_visualizer.py-475-                if 'coordinates' in data and 'value' in data:
src/gui/map_visualizer.py-476-                    lat, lon = data['coordinates']
--
src/gui/map_visualizer.py-581-        """
src/gui/map_visualizer.py-582-        try:
src/gui/map_visualizer.py:583:            precip_data = self.weather_data.get('precipitation', {})
src/gui/map_visualizer.py-584-            
src/gui/map_visualizer.py-585-            # Csapad√©k sz√≠nsk√°la
--
src/gui/map_visualizer.py-632-        """
src/gui/map_visualizer.py-633-        try:
src/gui/map_visualizer.py:634:            wind_data = self.weather_data.get('wind_speed', {})
src/gui/map_visualizer.py-635-            
src/gui/map_visualizer.py-636-            # Sz√©l sz√≠nsk√°la Beaufort sk√°la alapj√°n
--
src/gui/map_visualizer.py-1019-    üöÄ REAKT√çV MEGYEHAT√ÅROK v3.0:
src/gui/map_visualizer.py-1020-    - set_counties_geodataframe() AZONNALI t√©rk√©pfriss√≠t√©st ind√≠t
src/gui/map_visualizer.py:1021:    - set_weather_data() AZONNALI t√©rk√©pfriss√≠t√©st ind√≠t  
src/gui/map_visualizer.py-1022-    - A "fut√°r √©s fest≈ë" probl√©ma megoldva
src/gui/map_visualizer.py-1023-    - Magyar megy√©k automatikusan megjelennek bet√∂lt√©s ut√°n
--
src/gui/map_visualizer.py-1067-        # Adatok
src/gui/map_visualizer.py-1068-        self.counties_gdf = None
src/gui/map_visualizer.py:1069:        self.current_weather_data = None
src/gui/map_visualizer.py-1070-        
src/gui/map_visualizer.py-1071-        # üîß HTTP SZERVER VERZI√ì: Szerver objektumok
--
src/gui/map_visualizer.py-1371-            config=self.map_config,
src/gui/map_visualizer.py-1372-            counties_gdf=self.counties_gdf,
src/gui/map_visualizer.py:1373:            weather_data=self.current_weather_data,
src/gui/map_visualizer.py-1374-            bridge_id=self.js_bridge.bridge_id
src/gui/map_visualizer.py-1375-        )
--
src/gui/map_visualizer.py-1674-            print("‚ö†Ô∏è Empty or None counties data received - no map refresh triggered")
src/gui/map_visualizer.py-1675-    
src/gui/map_visualizer.py:1676:    def set_weather_data(self, weather_data: Dict):
src/gui/map_visualizer.py-1677-        """
src/gui/map_visualizer.py-1678-        üå§Ô∏è üöÄ REAKT√çV JAV√çT√ÅS: Id≈ëj√°r√°si adatok be√°ll√≠t√°sa Folium overlay-hez DINAMIKUS SZ√çNSK√ÅL√ÅVAL + AZONNALI FRISS√çT√âS - HTTP SZERVER VERZI√ì.
--
src/gui/map_visualizer.py-1686-        
src/gui/map_visualizer.py-1687-        Args:
src/gui/map_visualizer.py:1688:            weather_data: Id≈ëj√°r√°si adatok dictionary
src/gui/map_visualizer.py-1689-        """
src/gui/map_visualizer.py-1690-        print(f"üå§Ô∏è üöÄ REAKT√çV: Real weather data set for HTTP server Folium overlay with dynamic gradients:")
src/gui/map_visualizer.py-1691-        
src/gui/map_visualizer.py-1692-        # Adatok t√°rol√°sa
src/gui/map_visualizer.py:1693:        self.current_weather_data = weather_data
src/gui/map_visualizer.py-1694-        
src/gui/map_visualizer.py:1695:        if weather_data:
src/gui/map_visualizer.py:1696:            for data_type, locations in weather_data.items():
src/gui/map_visualizer.py-1697-                print(f"  üìä {data_type}: {len(locations)} locations")
src/gui/map_visualizer.py-1698-                
--
src/gui/map_visualizer.py-1852-        }
src/gui/map_visualizer.py-1853-    
src/gui/map_visualizer.py:1854:    def generate_demo_weather_data(self) -> Dict[str, Any]:
src/gui/map_visualizer.py-1855-        """
src/gui/map_visualizer.py-1856-        üß™ Demo id≈ëj√°r√°si adatok gener√°l√°sa tesztel√©shez.
--
src/gui/map_visualizer.py-1957-            "counties_loaded": self.counties_gdf is not None,
src/gui/map_visualizer.py-1958-            "counties_count": len(self.counties_gdf) if self.counties_gdf is not None else 0,
src/gui/map_visualizer.py:1959:            "weather_data_loaded": self.current_weather_data is not None,
src/gui/map_visualizer.py-1960-            "version": "v3.0"
src/gui/map_visualizer.py-1961-        }
--
src/gui/map_visualizer.py-2149-    def test_weather_reactive():
src/gui/map_visualizer.py-2150-        print("üå§Ô∏è üöÄ HTTP SZERVER Weather teszt...")
src/gui/map_visualizer.py:2151:        demo_data = map_visualizer.generate_demo_weather_data()
src/gui/map_visualizer.py-2152-        
src/gui/map_visualizer.py:2153:        print("üöÄ Testing HTTP SERVER REACTIVE set_weather_data...")
src/gui/map_visualizer.py-2154-        
src/gui/map_visualizer.py-2155-        # REAKT√çV teszt - a t√©rk√©p automatikusan friss√ºl!
src/gui/map_visualizer.py:2156:        map_visualizer.set_weather_data(demo_data)
src/gui/map_visualizer.py-2157-        
src/gui/map_visualizer.py-2158-        print("‚úÖ üöÄ HTTP SZERVER weather teszt befejezve - a t√©rk√©p automatikusan friss√ºlt!")
--
src/gui/map_visualizer.py-2178-    def test_temperature_overlay():
src/gui/map_visualizer.py-2179-        print("üå°Ô∏è H≈ëm√©rs√©klet overlay teszt...")
src/gui/map_visualizer.py:2180:        demo_data = map_visualizer.generate_demo_weather_data()
src/gui/map_visualizer.py-2181-        temp_data = {'temperature': demo_data['temperature']}
src/gui/map_visualizer.py:2182:        map_visualizer.set_weather_data(temp_data)  # REAKT√çV!
src/gui/map_visualizer.py-2183-    
src/gui/map_visualizer.py-2184-    def test_wind_overlay():
src/gui/map_visualizer.py-2185-        print("üí® Sz√©l overlay teszt...")
src/gui/map_visualizer.py:2186:        demo_data = map_visualizer.generate_demo_weather_data()
src/gui/map_visualizer.py-2187-        wind_data = {'wind_speed': demo_data['wind_speed']}
src/gui/map_visualizer.py:2188:        map_visualizer.set_weather_data(wind_data)  # REAKT√çV!
src/gui/map_visualizer.py-2189-    
src/gui/map_visualizer.py-2190-    def test_precipitation_overlay():
src/gui/map_visualizer.py-2191-        print("üåßÔ∏è Csapad√©k overlay teszt...")
src/gui/map_visualizer.py:2192:        demo_data = map_visualizer.generate_demo_weather_data()
src/gui/map_visualizer.py-2193-        precip_data = {'precipitation': demo_data['precipitation']}
src/gui/map_visualizer.py:2194:        map_visualizer.set_weather_data(precip_data)  # REAKT√çV!
src/gui/map_visualizer.py-2195-    
src/gui/map_visualizer.py-2196-    def test_clear_overlay():
--
src/gui/map_visualizer.py-2242-    print("   üöÄ REAKT√çV ID≈êJ√ÅR√ÅSI OVERLAY - Automatikus friss√≠t√©s")
src/gui/map_visualizer.py-2243-    print("   üöÄ set_counties_geodataframe() ‚Üí AZONNALI t√©rk√©pfriss√≠t√©s")
src/gui/map_visualizer.py:2244:    print("   üöÄ set_weather_data() ‚Üí AZONNALI t√©rk√©pfriss√≠t√©s")
src/gui/map_visualizer.py-2245-    print("üîß DINAMIKUS SZ√çNSK√ÅLA JAV√çT√ÅSOK v1.2:")
src/gui/map_visualizer.py-2246-    print("   ‚úÖ COLOR_SCALE_GRADIENTS mapping minden overlay t√≠pushoz")
--
src/gui/workers/analysis_worker.py-18-‚úÖ JAV√çTOTT: Abszol√∫t path-ok a projekt root alapj√°n
src/gui/workers/analysis_worker.py-19-‚úÖ Working directory f√ºggetlen m≈±k√∂d√©s
src/gui/workers/analysis_worker.py:20:‚úÖ WeatherClient.get_weather_data() KOORDIN√ÅTA PARAM√âTER FIX!
src/gui/workers/analysis_worker.py:21:‚ùå HIB√ÅS: get_weather_data(lat=..., lon=...)
src/gui/workers/analysis_worker.py:22:‚úÖ JAV√çTOTT: get_weather_data(latitude=..., longitude=...)
src/gui/workers/analysis_worker.py-23-"""
src/gui/workers/analysis_worker.py-24-
--
src/gui/workers/analysis_worker.py-377-            # ‚ùå HIB√ÅS VOLT: lat=..., lon=...
src/gui/workers/analysis_worker.py-378-            # ‚úÖ JAV√çTOTT: latitude=..., longitude=...
src/gui/workers/analysis_worker.py:379:            self._logger.info(f"üîß WeatherClient.get_weather_data() h√≠v√°s JAV√çTOTT param√©terekkel...")
src/gui/workers/analysis_worker.py-380-            
src/gui/workers/analysis_worker.py:381:            weather_data = self._weather_client.get_weather_data(
src/gui/workers/analysis_worker.py-382-                latitude=latitude,           # ‚úÖ HELYES PARAM√âTER N√âV!
src/gui/workers/analysis_worker.py-383-                longitude=longitude,         # ‚úÖ HELYES PARAM√âTER N√âV!
--
src/gui/workers/analysis_worker.py-386-            )
src/gui/workers/analysis_worker.py-387-            
src/gui/workers/analysis_worker.py:388:            self._logger.info(f"‚úÖ WeatherClient.get_weather_data() sikeresen lefutott")
src/gui/workers/analysis_worker.py-389-            
src/gui/workers/analysis_worker.py-390-            if self._check_interruption("Single location feldolgoz√°s"):
--
src/gui/workers/analysis_worker.py-394-                'analysis_type': 'single_location',
src/gui/workers/analysis_worker.py-395-                'request_params': self._request_data,
src/gui/workers/analysis_worker.py:396:                'result_data': weather_data,
src/gui/workers/analysis_worker.py-397-                'timestamp': datetime.now().isoformat(),
src/gui/workers/analysis_worker.py-398-                'success': True
--
src/gui/workers/data_fetch_worker.py-162-    
src/gui/workers/data_fetch_worker.py-163-    # Specifikus signalok
src/gui/workers/data_fetch_worker.py:164:    weather_data_completed = Signal(dict)  # API v√°lasz dictionary
src/gui/workers/data_fetch_worker.py-165-    
src/gui/workers/data_fetch_worker.py-166-    # üåç √öJ: Provider routing signalok
--
src/gui/workers/data_fetch_worker.py-180-        self.preferred_provider = preferred_provider
src/gui/workers/data_fetch_worker.py-181-        self.actual_provider: Optional[str] = None
src/gui/workers/data_fetch_worker.py:182:        self.weather_data: Optional[Dict[str, Any]] = None
src/gui/workers/data_fetch_worker.py-183-    
src/gui/workers/data_fetch_worker.py-184-    def execute(self) -> None:
--
src/gui/workers/data_fetch_worker.py-230-                        
src/gui/workers/data_fetch_worker.py-231-                        self.actual_provider = provider
src/gui/workers/data_fetch_worker.py:232:                        log_provider_usage_event(provider, "weather_data", True)
src/gui/workers/data_fetch_worker.py-233-                        break
src/gui/workers/data_fetch_worker.py-234-                    
src/gui/workers/data_fetch_worker.py-235-                except Exception as e:
src/gui/workers/data_fetch_worker.py-236-                    print(f"‚ùå DEBUG: Provider {provider} failed: {e}")
src/gui/workers/data_fetch_worker.py:237:                    log_provider_usage_event(provider, "weather_data", False)
src/gui/workers/data_fetch_worker.py-238-                    continue
src/gui/workers/data_fetch_worker.py-239-            
--
src/gui/workers/data_fetch_worker.py-245-            
src/gui/workers/data_fetch_worker.py-246-            # üå™Ô∏è WIND GUSTS VALIDATION & RESPONSE PROCESSING
src/gui/workers/data_fetch_worker.py:247:            if self.weather_data:
src/gui/workers/data_fetch_worker.py-248-                self._validate_wind_gusts_data()
src/gui/workers/data_fetch_worker.py-249-                self.progress_updated.emit(100)
src/gui/workers/data_fetch_worker.py:250:                self.weather_data_completed.emit(self.weather_data)
src/gui/workers/data_fetch_worker.py-251-            else:
src/gui/workers/data_fetch_worker.py-252-                self.emit_error("√ârv√©nytelen API v√°lasz strukt√∫ra")
--
src/gui/workers/data_fetch_worker.py-358-                    return False
src/gui/workers/data_fetch_worker.py-359-                
src/gui/workers/data_fetch_worker.py:360:                self.weather_data = response.json()
src/gui/workers/data_fetch_worker.py-361-                
src/gui/workers/data_fetch_worker.py-362-                # Provider change notification
--
src/gui/workers/data_fetch_worker.py-405-    def _validate_wind_gusts_data(self) -> None:
src/gui/workers/data_fetch_worker.py-406-        """üå™Ô∏è Wind gusts adatok valid√°l√°sa √©s debug inform√°ci√≥."""
src/gui/workers/data_fetch_worker.py:407:        if not self.weather_data:
src/gui/workers/data_fetch_worker.py-408-            return
src/gui/workers/data_fetch_worker.py-409-        
src/gui/workers/data_fetch_worker.py:410:        daily_data = self.weather_data.get("daily", {})
src/gui/workers/data_fetch_worker.py:411:        hourly_data = self.weather_data.get("hourly", {})
src/gui/workers/data_fetch_worker.py-412-        
src/gui/workers/data_fetch_worker.py-413-        daily_record_count = len(daily_data.get('time', []))
--
src/gui/workers/data_fetch_worker.py-539-    # Specifikus worker signalok
src/gui/workers/data_fetch_worker.py-540-    geocoding_completed = Signal(list)
src/gui/workers/data_fetch_worker.py:541:    weather_data_completed = Signal(dict)  # üå™Ô∏è Wind gusts data t√°mogat√°s
src/gui/workers/data_fetch_worker.py-542-    sql_query_completed = Signal(object)
src/gui/workers/data_fetch_worker.py-543-    
--
src/gui/workers/data_fetch_worker.py-592-        return worker_id
src/gui/workers/data_fetch_worker.py-593-    
src/gui/workers/data_fetch_worker.py:594:    def start_weather_data_fetch(self, worker: WeatherDataWorker) -> str:
src/gui/workers/data_fetch_worker.py-595-        """
src/gui/workers/data_fetch_worker.py-596-        üåç PROVIDER ROUTING + üå™Ô∏è WIND GUSTS: Weather data worker ind√≠t√°sa 
src/gui/workers/data_fetch_worker.py-597-        provider routing √©s wind gusts t√°mogat√°ssal.
src/gui/workers/data_fetch_worker.py-598-        """
src/gui/workers/data_fetch_worker.py:599:        worker_id = self._get_worker_id("weather_data")
src/gui/workers/data_fetch_worker.py-600-        
src/gui/workers/data_fetch_worker.py-601-        # Signal kapcsolatok
src/gui/workers/data_fetch_worker.py:602:        worker.weather_data_completed.connect(self.weather_data_completed.emit)
src/gui/workers/data_fetch_worker.py-603-        worker.error_occurred.connect(self._on_worker_error)
src/gui/workers/data_fetch_worker.py-604-        worker.finished.connect(lambda worker_id=worker_id: self._on_worker_finished(worker_id))
src/gui/workers/data_fetch_worker.py:605:        worker.progress_updated.connect(lambda p: self.progress_updated.emit("weather_data", p))
src/gui/workers/data_fetch_worker.py-606-        
src/gui/workers/data_fetch_worker.py-607-        # üåç √öJ: Provider routing signal kapcsolatok
--
src/gui/workers/data_fetch_worker.py-618-        
src/gui/workers/data_fetch_worker.py-619-        worker.start()
src/gui/workers/data_fetch_worker.py:620:        self.worker_started.emit("weather_data")
src/gui/workers/data_fetch_worker.py-621-        print(f"‚úÖ DEBUG: Weather worker ind√≠tva PROVIDER ROUTING + WIND GUSTS t√°mogat√°ssal - {worker_id}")
src/gui/workers/data_fetch_worker.py-622-        return worker_id
--
src/gui/map_view.py-268-            print(f"üé® DEBUG: MapView Folium theme set to: {theme}")
src/gui/map_view.py-269-    
src/gui/map_view.py:270:    def set_weather_data(self, weather_data: Dict[str, Any]):
src/gui/map_view.py-271-        """
src/gui/map_view.py-272-        üå§Ô∏è Id≈ëj√°r√°si adatok be√°ll√≠t√°sa Folium overlay-hez (deleg√°lt).
src/gui/map_view.py-273-        
src/gui/map_view.py-274-        Args:
src/gui/map_view.py:275:            weather_data: Id≈ëj√°r√°si adatok dictionary
src/gui/map_view.py-276-        """
src/gui/map_view.py-277-        if self.map_tab:
src/gui/map_view.py:278:            self.map_tab.set_weather_data(weather_data)
src/gui/map_view.py-279-            print("üå§Ô∏è DEBUG: Weather data set for Folium overlay via MapView")
src/gui/map_view.py-280-    
--
src/gui/trend_analytics_tab.py-30-
src/gui/trend_analytics_tab.py-31-üî• KRITIKUS JAV√çT√ÅS v4.2:
src/gui/trend_analytics_tab.py:32:- ‚úÖ weather_client.get_weather_data() EGYS√âGES API (173. sor)
src/gui/trend_analytics_tab.py-33-- ‚úÖ Tuple unpacking hiba v√©glegesen megoldva
src/gui/trend_analytics_tab.py-34-- ‚úÖ Plotly chart DatetimeIndex jav√≠t√°s (672. sor)
--
src/gui/trend_analytics_tab.py-206-            try:
src/gui/trend_analytics_tab.py-207-                # √âvenk√©nti batch-ek l√©trehoz√°sa (WeatherClient 1 √©ves limit miatt)
src/gui/trend_analytics_tab.py:208:                weather_data = []
src/gui/trend_analytics_tab.py-209-                current_start = start_date
src/gui/trend_analytics_tab.py-210-                batch_count = 0
--
src/gui/trend_analytics_tab.py-226-                    try:
src/gui/trend_analytics_tab.py-227-                        # ‚úÖ EGYSZER≈∞S√çTETT K√ìD v4.2: MINDIG List[Dict] visszat√©r√©s
src/gui/trend_analytics_tab.py:228:                        yearly_data = self.weather_client.get_weather_data(
src/gui/trend_analytics_tab.py-229-                            lat, lon, current_start_str, current_end_str
src/gui/trend_analytics_tab.py-230-                        )
--
src/gui/trend_analytics_tab.py-236-                        
src/gui/trend_analytics_tab.py-237-                        if yearly_data:
src/gui/trend_analytics_tab.py:238:                            weather_data.extend(yearly_data)
src/gui/trend_analytics_tab.py-239-                            logger.info(f"‚úÖ Batch {batch_count + 1} sikeres: {len(yearly_data)} nap ({source})")
src/gui/trend_analytics_tab.py-240-                        else:
--
src/gui/trend_analytics_tab.py-253-                    self.progress_updated.emit(progress)
src/gui/trend_analytics_tab.py-254-                
src/gui/trend_analytics_tab.py:255:                logger.info(f"‚úÖ Multi-year API h√≠v√°s befejezve: {len(weather_data)} nap √∂sszesen")
src/gui/trend_analytics_tab.py-256-                self.progress_updated.emit(60)
src/gui/trend_analytics_tab.py-257-                
--
src/gui/trend_analytics_tab.py-262-            
src/gui/trend_analytics_tab.py-263-            # 4. Adatok feldolgoz√°sa √©s trend sz√°m√≠t√°s
src/gui/trend_analytics_tab.py:264:            if not weather_data:
src/gui/trend_analytics_tab.py-265-                self.error_occurred.emit("Nincs el√©rhet≈ë adat a kiv√°lasztott id≈ëszakra")
src/gui/trend_analytics_tab.py-266-                return
--
src/gui/trend_analytics_tab.py-276-            # 5. Trend sz√°m√≠t√°s v√©grehajt√°sa
src/gui/trend_analytics_tab.py-277-            trend_results = self.calculate_trend_statistics(
src/gui/trend_analytics_tab.py:278:                weather_data, api_field, settlement_name, parameter, time_range, years
src/gui/trend_analytics_tab.py-279-            )
src/gui/trend_analytics_tab.py-280-            
--
src/gui/trend_analytics_tab.py-294-            self.error_occurred.emit(f"Kritikus hiba: {str(e)}")
src/gui/trend_analytics_tab.py-295-    
src/gui/trend_analytics_tab.py:296:    def calculate_trend_statistics(self, weather_data: List[Dict], api_field: str, 
src/gui/trend_analytics_tab.py-297-                                 settlement_name: str, parameter: str, time_range: str, years: int) -> Optional[Dict]:
src/gui/trend_analytics_tab.py-298-        """
--
src/gui/trend_analytics_tab.py-300-        
src/gui/trend_analytics_tab.py-301-        Args:
src/gui/trend_analytics_tab.py:302:            weather_data: API-b√≥l √©rkez≈ë napi adatok list√°ja
src/gui/trend_analytics_tab.py-303-            api_field: API mez≈ë neve (pl. "temperature_2m_max") 
src/gui/trend_analytics_tab.py-304-            settlement_name, parameter, time_range, years: Metaadatok
--
src/gui/trend_analytics_tab.py-308-        """
src/gui/trend_analytics_tab.py-309-        try:
src/gui/trend_analytics_tab.py:310:            logger.info(f"üìä TREND CALCULATION: {len(weather_data)} napb√≥l {api_field} feldolgoz√°sa")
src/gui/trend_analytics_tab.py-311-            
src/gui/trend_analytics_tab.py-312-            # DataFrame k√©sz√≠t√©se API adatokb√≥l
src/gui/trend_analytics_tab.py-313-            df_data = []
src/gui/trend_analytics_tab.py:314:            for record in weather_data:
src/gui/trend_analytics_tab.py-315-                if record.get('date') and record.get(api_field) is not None:
src/gui/trend_analytics_tab.py-316-                    df_data.append({
--
src/gui/trend_analytics_tab.py-441-                'api_field': api_field,
src/gui/trend_analytics_tab.py-442-                'years': years,
src/gui/trend_analytics_tab.py:443:                'data_source': weather_data[0].get('data_source', 'unknown') if weather_data else 'unknown',
src/gui/trend_analytics_tab.py-444-                
src/gui/trend_analytics_tab.py-445-                # Statisztikai eredm√©nyek
--
src/gui/trend_analytics_tab.py-1092-    
src/gui/trend_analytics_tab.py-1093-    üé® FEJLESZT√âSEK v4.2:
src/gui/trend_analytics_tab.py:1094:    - ‚úÖ KRITIKUS JAV√çT√ÅS: weather_client.get_weather_data() EGYS√âGES API
src/gui/trend_analytics_tab.py-1095-    - ‚úÖ Tuple unpacking hiba v√©glegesen megoldva
src/gui/trend_analytics_tab.py-1096-    - ‚úÖ PLOTLY INTERAKT√çV CHARTOK: Zoom, pan, hover tooltips
--
src/gui/hungarian_map_tab.py-52-
src/gui/hungarian_map_tab.py-53-# üöÄ √öJ: Weather Data Bridge integr√°ci√≥
src/gui/hungarian_map_tab.py:54:from .weather_data_bridge import WeatherDataBridge, WeatherOverlayData
src/gui/hungarian_map_tab.py-55-
src/gui/hungarian_map_tab.py-56-# üöÄ √öJ: Analytics Engine integr√°ci√≥
--
src/gui/hungarian_map_tab.py-99-    - error_occurred(message): Hiba t√∂rt√©nt
src/gui/hungarian_map_tab.py-100-    - folium_ready(): Folium t√©rk√©p bet√∂ltve
src/gui/hungarian_map_tab.py:101:    - weather_data_updated(overlay_data): Weather overlay friss√≠tve
src/gui/hungarian_map_tab.py-102-    - analytics_sync_completed(sync_type): Analytics sync befejezve
src/gui/hungarian_map_tab.py-103-    """
--
src/gui/hungarian_map_tab.py-112-    data_loading_completed = Signal()        # Adatok bet√∂lt√©se befejezve
src/gui/hungarian_map_tab.py-113-    folium_ready = Signal()                  # Folium t√©rk√©p bet√∂ltve
src/gui/hungarian_map_tab.py:114:    weather_data_updated = Signal(object)    # üå§Ô∏è Weather overlay friss√≠tve
src/gui/hungarian_map_tab.py-115-    analytics_sync_completed = Signal(str)   # üöÄ √öJ: Analytics sync befejezve
src/gui/hungarian_map_tab.py-116-    
--
src/gui/hungarian_map_tab.py-138-        self.current_analytics_result: Optional[AnalyticsResult] = None
src/gui/hungarian_map_tab.py-139-        self.current_weather_overlay: Optional[WeatherOverlayData] = None
src/gui/hungarian_map_tab.py:140:        self.weather_data_available = False
src/gui/hungarian_map_tab.py-141-        
src/gui/hungarian_map_tab.py-142-        # üîß KRITIKUS √öJ: Analytics param√©ter mem√≥ria
--
src/gui/hungarian_map_tab.py-1508-            # Weather overlay ment√©se
src/gui/hungarian_map_tab.py-1509-            self.current_weather_overlay = weather_overlay
src/gui/hungarian_map_tab.py:1510:            self.weather_data_available = True
src/gui/hungarian_map_tab.py-1511-            
src/gui/hungarian_map_tab.py-1512-            print(f"‚úÖ DEBUG: Weather overlay generated: {weather_overlay.overlay_type}, {len(weather_overlay.data)} cities")
--
src/gui/hungarian_map_tab.py-1517-                # üöÄ JAV√çTOTT: Direkt folium_format haszn√°lata convert_overlay_to_folium_format helyett
src/gui/hungarian_map_tab.py-1518-                if folium_format:
src/gui/hungarian_map_tab.py:1519:                    self.map_visualizer.set_weather_data(folium_format)
src/gui/hungarian_map_tab.py-1520-                    print("‚úÖ DEBUG: Weather data passed to Folium map visualizer (direct format)")
src/gui/hungarian_map_tab.py-1521-                    
--
src/gui/hungarian_map_tab.py-1527-                    
src/gui/hungarian_map_tab.py-1528-                    # Signal kik√ºld√©se
src/gui/hungarian_map_tab.py:1529:                    self.weather_data_updated.emit(weather_overlay)
src/gui/hungarian_map_tab.py-1530-                else:
src/gui/hungarian_map_tab.py-1531-                    print("‚ùå DEBUG: Weather data format conversion failed")
--
src/gui/hungarian_map_tab.py-1542-            self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-1543-    
src/gui/hungarian_map_tab.py:1544:    def load_weather_data_from_analytics(self, question_type: str, region: str = "HU", limit: int = 50):
src/gui/hungarian_map_tab.py-1545-        """
src/gui/hungarian_map_tab.py-1546-        üå§Ô∏è Weather adatok bet√∂lt√©se Multi-City Engine-b≈ël √©s t√©rk√©p friss√≠t√©se.
--
src/gui/hungarian_map_tab.py-1669-        return self.current_analytics_parameter
src/gui/hungarian_map_tab.py-1670-    
src/gui/hungarian_map_tab.py:1671:    def has_weather_data(self) -> bool:
src/gui/hungarian_map_tab.py-1672-        """
src/gui/hungarian_map_tab.py-1673-        üå§Ô∏è Van-e bet√∂ltve weather adat.
--
src/gui/hungarian_map_tab.py-1676-            Van-e weather overlay adat
src/gui/hungarian_map_tab.py-1677-        """
src/gui/hungarian_map_tab.py:1678:        return self.weather_data_available and self.current_weather_overlay is not None
src/gui/hungarian_map_tab.py-1679-    
src/gui/hungarian_map_tab.py-1680-    def get_current_location(self):
--
src/gui/hungarian_map_tab.py-1811-            print(f"üé® DEBUG: Folium theme set to: {theme}")
src/gui/hungarian_map_tab.py-1812-    
src/gui/hungarian_map_tab.py:1813:    def set_weather_data(self, weather_data: Dict[str, Any]):
src/gui/hungarian_map_tab.py-1814-        """
src/gui/hungarian_map_tab.py-1815-        üå§Ô∏è DEPRECATED: Id≈ëj√°r√°si adatok be√°ll√≠t√°sa Folium overlay-hez (legacy kompatibilit√°s).
--
src/gui/hungarian_map_tab.py-1818-        
src/gui/hungarian_map_tab.py-1819-        Args:
src/gui/hungarian_map_tab.py:1820:            weather_data: Id≈ëj√°r√°si adatok dictionary
src/gui/hungarian_map_tab.py-1821-        """
src/gui/hungarian_map_tab.py-1822-        if self.map_visualizer:
src/gui/hungarian_map_tab.py:1823:            self.map_visualizer.set_weather_data(weather_data)
src/gui/hungarian_map_tab.py-1824-            print("üå§Ô∏è DEBUG: Weather data set for Folium overlay (legacy method)")
src/gui/hungarian_map_tab.py-1825-    
--
src/gui/hungarian_map_tab.py-1863-        self.current_analytics_result = None
src/gui/hungarian_map_tab.py-1864-        self.current_weather_overlay = None
src/gui/hungarian_map_tab.py:1865:        self.weather_data_available = False
src/gui/hungarian_map_tab.py-1866-        
src/gui/hungarian_map_tab.py-1867-        # üß† KRITIKUS √öJ: Analytics param√©ter t√∂rl√©se
--
src/gui/hungarian_map_tab.py-1946-            "weather_bridge_available": self.weather_bridge is not None,
src/gui/hungarian_map_tab.py-1947-            "multi_city_engine_available": self.multi_city_engine is not None,
src/gui/hungarian_map_tab.py:1948:            "weather_data_available": self.weather_data_available,
src/gui/hungarian_map_tab.py-1949-            "current_location": self.current_location_data,
src/gui/hungarian_map_tab.py-1950-            "current_analytics_result": self.current_analytics_result is not None,
--
src/gui/hungarian_map_tab.py-2078-            print(f"   {key}: {value}")
src/gui/hungarian_map_tab.py-2079-    
src/gui/hungarian_map_tab.py:2080:    def on_weather_data_updated(weather_overlay):
src/gui/hungarian_map_tab.py-2081-        print(f"üå§Ô∏è DEMO: Weather data updated: {weather_overlay.overlay_type}, {len(weather_overlay.data)} cities")
src/gui/hungarian_map_tab.py-2082-        if weather_overlay.metadata:
--
src/gui/hungarian_map_tab.py-2152-        print("üå°Ô∏è DEMO: Loading hottest cities...")
src/gui/hungarian_map_tab.py-2153-        map_tab.set_analytics_parameter("H≈ëm√©rs√©klet")  # üß† Param√©ter be√°ll√≠t√°s
src/gui/hungarian_map_tab.py:2154:        map_tab.load_weather_data_from_analytics("hottest_today", "HU", 20)
src/gui/hungarian_map_tab.py-2155-    
src/gui/hungarian_map_tab.py-2156-    def load_coldest():
src/gui/hungarian_map_tab.py-2157-        print("‚ùÑÔ∏è DEMO: Loading coldest cities...")
src/gui/hungarian_map_tab.py-2158-        map_tab.set_analytics_parameter("H≈ëm√©rs√©klet")  # üß† Param√©ter be√°ll√≠t√°s
src/gui/hungarian_map_tab.py:2159:        map_tab.load_weather_data_from_analytics("coldest_today", "HU", 20)
src/gui/hungarian_map_tab.py-2160-    
src/gui/hungarian_map_tab.py-2161-    def load_wettest():
src/gui/hungarian_map_tab.py-2162-        print("üåßÔ∏è DEMO: Loading wettest cities...")
src/gui/hungarian_map_tab.py-2163-        map_tab.set_analytics_parameter("Csapad√©k")  # üß† Param√©ter be√°ll√≠t√°s
src/gui/hungarian_map_tab.py:2164:        map_tab.load_weather_data_from_analytics("wettest_today", "HU", 20)
src/gui/hungarian_map_tab.py-2165-    
src/gui/hungarian_map_tab.py-2166-    def load_windiest():
src/gui/hungarian_map_tab.py-2167-        print("üí® DEMO: Loading windiest cities...")
src/gui/hungarian_map_tab.py-2168-        map_tab.set_analytics_parameter("Sz√©l")  # üß† KRITIKUS: Sz√©l param√©ter be√°ll√≠t√°s
src/gui/hungarian_map_tab.py:2169:        map_tab.load_weather_data_from_analytics("windiest_today", "HU", 20)
src/gui/hungarian_map_tab.py-2170-    
src/gui/hungarian_map_tab.py-2171-    # Param√©ter mem√≥ria button connections
--
src/gui/hungarian_map_tab.py-2194-    map_tab.error_occurred.connect(on_error_occurred)
src/gui/hungarian_map_tab.py-2195-    map_tab.folium_ready.connect(on_folium_ready)
src/gui/hungarian_map_tab.py:2196:    map_tab.weather_data_updated.connect(on_weather_data_updated)
src/gui/hungarian_map_tab.py-2197-    map_tab.analytics_sync_completed.connect(on_analytics_sync_completed)
src/gui/hungarian_map_tab.py-2198-    map_tab.data_loading_completed.connect(on_data_loading_completed)
--
src/gui/weather_data_bridge.py-11-‚úÖ "Buta Tolm√°cs" probl√©ma MEGOLDVA
src/gui/weather_data_bridge.py-12-
src/gui/weather_data_bridge.py:13:F√°jl: src/gui/weather_data_bridge.py
src/gui/weather_data_bridge.py-14-C√©l: Multi-City Engine eredm√©nyek √°talak√≠t√°sa Folium t√©rk√©p form√°tumra
src/gui/weather_data_bridge.py-15-- AnalyticsResult ‚Üí Folium Weather Overlay Data
--
src/gui/weather_data_bridge.py-239-            
src/gui/weather_data_bridge.py-240-            # Weather data Dictionary l√©trehoz√°sa
src/gui/weather_data_bridge.py:241:            weather_data = {}
src/gui/weather_data_bridge.py-242-            values = []
src/gui/weather_data_bridge.py-243-            
--
src/gui/weather_data_bridge.py-260-                        city_data['direction'] = 0  # Default - k√©s≈ëbb kib≈ëv√≠thet≈ë wind direction-nel
src/gui/weather_data_bridge.py-261-                    
src/gui/weather_data_bridge.py:262:                    weather_data[city_result.city_name] = city_data
src/gui/weather_data_bridge.py-263-                    values.append(float(city_result.value))
src/gui/weather_data_bridge.py-264-            
src/gui/weather_data_bridge.py:265:            if not weather_data:
src/gui/weather_data_bridge.py-266-                logger.error("‚ùå Nincs √©rv√©nyes v√°ros adat a konverzi√≥hoz")
src/gui/weather_data_bridge.py-267-                return None
--
src/gui/weather_data_bridge.py-272-            overlay_data = WeatherOverlayData(
src/gui/weather_data_bridge.py-273-                overlay_type=overlay_type,
src/gui/weather_data_bridge.py:274:                data=weather_data,
src/gui/weather_data_bridge.py-275-                metadata=metadata
src/gui/weather_data_bridge.py-276-            )
src/gui/weather_data_bridge.py-277-            
src/gui/weather_data_bridge.py:278:            logger.info(f"‚úÖ Weather overlay konverzi√≥ sikeres: {overlay_type}, {len(weather_data)} v√°ros, tartom√°ny: {metadata.get('value_min', 'N/A')}-{metadata.get('value_max', 'N/A')}")
src/gui/weather_data_bridge.py-279-            
src/gui/weather_data_bridge.py-280-            return overlay_data
--
src/gui/dialogs.py-208-        try:
src/gui/dialogs.py-209-            # Alapadatok kinyer√©se
src/gui/dialogs.py:210:            df = self._extract_weather_dataframe()
src/gui/dialogs.py-211-            if df.empty:
src/gui/dialogs.py-212-                self._show_no_data_message()
--
src/gui/dialogs.py-226-            self._show_calculation_error()
src/gui/dialogs.py-227-    
src/gui/dialogs.py:228:    def _extract_weather_dataframe(self) -> pd.DataFrame:
src/gui/dialogs.py-229-        """
src/gui/dialogs.py-230-        Id≈ëj√°r√°si adatok kinyer√©se a raw API v√°laszb√≥l DataFrame form√°ba.
--
src/gui/control_panel.py-852-            self._update_fetch_button_state_comprehensive()
src/gui/control_panel.py-853-    
src/gui/control_panel.py:854:    def on_weather_data_completed(self) -> None:
src/gui/control_panel.py-855-        """Weather data lek√©rdez√©s befejez√©se k√ºls≈ë jelz√©s alapj√°n."""
src/gui/control_panel.py-856-        self.query_control_widget.set_fetching_state(False)
--
src/gui/map_visualizer (1).py-181-    status_updated = Signal(str)          # status message
src/gui/map_visualizer (1).py-182-
src/gui/map_visualizer (1).py:183:    def __init__(self, config: FoliumMapConfig, counties_gdf=None, weather_data=None, output_path=None, bridge_id=None):
src/gui/map_visualizer (1).py-184-        super().__init__()
src/gui/map_visualizer (1).py-185-        self.config = config
src/gui/map_visualizer (1).py-186-        self.counties_gdf = counties_gdf
src/gui/map_visualizer (1).py:187:        self.weather_data = weather_data
src/gui/map_visualizer (1).py-188-        self.output_path = output_path or self._get_temp_html_path()
src/gui/map_visualizer (1).py-189-        self.bridge_id = bridge_id or str(uuid.uuid4())
--
src/gui/map_visualizer (1).py-220-            # === WEATHER OVERLAY ===
src/gui/map_visualizer (1).py-221-
src/gui/map_visualizer (1).py:222:            if self.config.weather_overlay and self.weather_data:
src/gui/map_visualizer (1).py-223-                self.status_updated.emit("üå§Ô∏è Id≈ëj√°r√°si overlay...")
src/gui/map_visualizer (1).py-224-                self._add_weather_overlay(map_obj)
--
src/gui/map_visualizer (1).py-385-        - Relat√≠v p√°ratartalom (%)
src/gui/map_visualizer (1).py-386-        """
src/gui/map_visualizer (1).py:387:        if not self.weather_data:
src/gui/map_visualizer (1).py-388-            print("‚ö†Ô∏è No weather data available for overlay")
src/gui/map_visualizer (1).py-389-            return
src/gui/map_visualizer (1).py-390-
src/gui/map_visualizer (1).py:391:        print(f"üå§Ô∏è Adding weather overlay with {len(self.weather_data)} data points")
src/gui/map_visualizer (1).py-392-
src/gui/map_visualizer (1).py-393-        try:
src/gui/map_visualizer (1).py-394-            # === H≈êM√âRS√âKLET HEATMAP ===
src/gui/map_visualizer (1).py:395:            if 'temperature' in self.weather_data:
src/gui/map_visualizer (1).py-396-                self._add_temperature_heatmap(map_obj)
src/gui/map_visualizer (1).py-397-
src/gui/map_visualizer (1).py-398-            # === CSAPAD√âK OVERLAY ===
src/gui/map_visualizer (1).py:399:            if 'precipitation' in self.weather_data:
src/gui/map_visualizer (1).py-400-                self._add_precipitation_overlay(map_obj)
src/gui/map_visualizer (1).py-401-
src/gui/map_visualizer (1).py-402-            # === SZ√âL SEBESS√âG OVERLAY ===
src/gui/map_visualizer (1).py:403:            if 'wind_speed' in self.weather_data:
src/gui/map_visualizer (1).py-404-                self._add_wind_speed_overlay(map_obj)
src/gui/map_visualizer (1).py-405-
--
src/gui/map_visualizer (1).py-421-            # H≈ëm√©rs√©klet adatok el≈ëk√©sz√≠t√©se
src/gui/map_visualizer (1).py-422-            temp_data = []
src/gui/map_visualizer (1).py:423:            for location, data in self.weather_data.get('temperature', {}).items():
src/gui/map_visualizer (1).py-424-                if 'coordinates' in data and 'value' in data:
src/gui/map_visualizer (1).py-425-                    lat, lon = data['coordinates']
--
src/gui/map_visualizer (1).py-537-        """
src/gui/map_visualizer (1).py-538-        try:
src/gui/map_visualizer (1).py:539:            precip_data = self.weather_data.get('precipitation', {})
src/gui/map_visualizer (1).py-540-
src/gui/map_visualizer (1).py-541-            # Csapad√©k sz√≠nsk√°la
--
src/gui/map_visualizer (1).py-588-        """
src/gui/map_visualizer (1).py-589-        try:
src/gui/map_visualizer (1).py:590:            wind_data = self.weather_data.get('wind_speed', {})
src/gui/map_visualizer (1).py-591-
src/gui/map_visualizer (1).py-592-            # Sz√©l sz√≠nsk√°la Beaufort sk√°la alapj√°n
--
src/gui/map_visualizer (1).py-1061-        # Adatok
src/gui/map_visualizer (1).py-1062-        self.counties_gdf = None
src/gui/map_visualizer (1).py:1063:        self.current_weather_data = None
src/gui/map_visualizer (1).py-1064-        self.current_html_path = None
src/gui/map_visualizer (1).py-1065-
--
src/gui/map_visualizer (1).py-1308-            config=self.map_config,
src/gui/map_visualizer (1).py-1309-            counties_gdf=self.counties_gdf,
src/gui/map_visualizer (1).py:1310:            weather_data=self.current_weather_data,
src/gui/map_visualizer (1).py-1311-            bridge_id=self.js_bridge.bridge_id
src/gui/map_visualizer (1).py-1312-        )
--
src/gui/map_visualizer (1).py-1659-        try:
src/gui/map_visualizer (1).py-1660-            # Demo adatok gener√°l√°sa
src/gui/map_visualizer (1).py:1661:            demo_data = self.generate_demo_weather_data()
src/gui/map_visualizer (1).py-1662-
src/gui/map_visualizer (1).py-1663-            # Adatok be√°ll√≠t√°sa
src/gui/map_visualizer (1).py:1664:            self.set_weather_data(demo_data)
src/gui/map_visualizer (1).py-1665-
src/gui/map_visualizer (1).py-1666-            # Weather overlay bekapcsol√°sa
--
src/gui/map_visualizer (1).py-1767-        print(f"üó∫Ô∏è Folium counties GeoDataFrame set: {len(counties_gdf) if counties_gdf is not None else 0} counties")
src/gui/map_visualizer (1).py-1768-
src/gui/map_visualizer (1).py:1769:    def set_weather_data(self, weather_data: Dict):
src/gui/map_visualizer (1).py-1770-        """
src/gui/map_visualizer (1).py-1771-        üå§Ô∏è Id≈ëj√°r√°si adatok be√°ll√≠t√°sa Folium overlay-hez DINAMIKUS SZ√çNSK√ÅL√ÅVAL.
src/gui/map_visualizer (1).py-1772-        
src/gui/map_visualizer (1).py:1773:        Expected weather_data format:
src/gui/map_visualizer (1).py-1774-        {
src/gui/map_visualizer (1).py-1775-            'temperature': {
--
src/gui/map_visualizer (1).py-1800-        √©s az analytics engine-b≈ël.
src/gui/map_visualizer (1).py-1801-        """
src/gui/map_visualizer (1).py:1802:        self.current_weather_data = weather_data
src/gui/map_visualizer (1).py-1803-        print(f"üå§Ô∏è Real weather data set for Folium overlay with dynamic gradients:")
src/gui/map_visualizer (1).py-1804-
src/gui/map_visualizer (1).py:1805:        if weather_data:
src/gui/map_visualizer (1).py:1806:            for data_type, locations in weather_data.items():
src/gui/map_visualizer (1).py-1807-                print(f"  üìä {data_type}: {len(locations)} locations")
src/gui/map_visualizer (1).py-1808-
--
src/gui/map_visualizer (1).py-1938-        return self.js_bridge
src/gui/map_visualizer (1).py-1939-
src/gui/map_visualizer (1).py:1940:    def generate_demo_weather_data(self) -> Dict[str, Any]:
src/gui/map_visualizer (1).py-1941-        """
src/gui/map_visualizer (1).py-1942-        üß™ Demo id≈ëj√°r√°si adatok gener√°l√°sa tesztel√©shez.
--
src/gui/map_visualizer (1).py-2190-    def test_temperature_overlay():
src/gui/map_visualizer (1).py-2191-        print("üå°Ô∏è H≈ëm√©rs√©klet overlay teszt...")
src/gui/map_visualizer (1).py:2192:        demo_data = map_visualizer.generate_demo_weather_data()
src/gui/map_visualizer (1).py-2193-        temp_data = {'temperature': demo_data['temperature']}
src/gui/map_visualizer (1).py:2194:        map_visualizer.set_weather_data(temp_data)
src/gui/map_visualizer (1).py-2195-        map_visualizer.toggle_weather_overlay(True)
src/gui/map_visualizer (1).py-2196-
src/gui/map_visualizer (1).py-2197-    def test_wind_overlay():
src/gui/map_visualizer (1).py-2198-        print("üí® Sz√©l overlay teszt...")
src/gui/map_visualizer (1).py:2199:        demo_data = map_visualizer.generate_demo_weather_data()
src/gui/map_visualizer (1).py-2200-        wind_data = {'wind_speed': demo_data['wind_speed']}
src/gui/map_visualizer (1).py:2201:        map_visualizer.set_weather_data(wind_data)
src/gui/map_visualizer (1).py-2202-        map_visualizer.toggle_weather_overlay(True)
src/gui/map_visualizer (1).py-2203-
src/gui/map_visualizer (1).py-2204-    def test_precipitation_overlay():
src/gui/map_visualizer (1).py-2205-        print("üåßÔ∏è Csapad√©k overlay teszt...")
src/gui/map_visualizer (1).py:2206:        demo_data = map_visualizer.generate_demo_weather_data()
src/gui/map_visualizer (1).py-2207-        precip_data = {'precipitation': demo_data['precipitation']}
src/gui/map_visualizer (1).py:2208:        map_visualizer.set_weather_data(precip_data)
src/gui/map_visualizer (1).py-2209-        map_visualizer.toggle_weather_overlay(True)
src/gui/map_visualizer (1).py-2210-
--
src/gui/main_window.py-1346-                # Single City eredm√©ny adatok kinyer√©se
src/gui/main_window.py-1347-                city_name = result_data.get('city_name', 'Ismeretlen')
src/gui/main_window.py:1348:                weather_data = result_data.get('weather_data', {})
src/gui/main_window.py-1349-                location_data = result_data.get('location', {})
src/gui/main_window.py-1350-                
src/gui/main_window.py-1351-                print(f"üéØ DEBUG: City: {city_name}")
src/gui/main_window.py:1352:                print(f"üéØ DEBUG: Weather data keys: {list(weather_data.keys()) if weather_data else 'NO WEATHER DATA'}")
src/gui/main_window.py-1353-                print(f"üéØ DEBUG: Location data: {location_data}")
src/gui/main_window.py-1354-                
src/gui/main_window.py-1355-                # üéØ KRITIKUS FIX: RESULTS PANEL FRISS√çT√âSE
src/gui/main_window.py:1356:                if self.results_panel and weather_data:
src/gui/main_window.py-1357-                    print("üéØ KRITIKUS: Updating ResultsPanel with single city data...")
src/gui/main_window.py-1358-                    try:
src/gui/main_window.py:1359:                        self.results_panel.update_data(weather_data, city_name)
src/gui/main_window.py-1360-                        print("‚úÖ KRITIKUS: ResultsPanel updated successfully!")
src/gui/main_window.py-1361-                    except Exception as e:
--
src/gui/main_window.py-1365-                
src/gui/main_window.py-1366-                # üéØ KRITIKUS FIX: ANALYTICS PANEL AUTOMATIKUS FRISS√çT√âSE - EZ A HI√ÅNYZ√ì LINK!
src/gui/main_window.py:1367:                if self.analytics_panel and weather_data:
src/gui/main_window.py-1368-                    print("üéØ KRITIKUS: Updating AnalyticsView with single city data - EZ A HI√ÅNYZ√ì KAPCSOLAT!")
src/gui/main_window.py-1369-                    try:
--
src/gui/main_window.py-1373-                        
src/gui/main_window.py-1374-                        # Weather data friss√≠t√©se - EZ A KULCS!
src/gui/main_window.py:1375:                        self.analytics_panel.update_data(weather_data)
src/gui/main_window.py-1376-                        print("‚úÖ KRITIKUS: AnalyticsView updated successfully - V√ÅROS ELEMZ√âS ADATFOLYAM JAV√çTVA!")
src/gui/main_window.py-1377-                    except Exception as e:
--
src/gui/main_window.py-1380-                        traceback.print_exc()
src/gui/main_window.py-1381-                else:
src/gui/main_window.py:1382:                    print(f"‚ùå KRITIKUS: AnalyticsView update skipped - analytics_panel: {self.analytics_panel is not None}, weather_data: {bool(weather_data)}")
src/gui/main_window.py-1383-            
src/gui/main_window.py-1384-            elif analysis_type == "multi_city":
--
src/gui/main_window.py-1589-            completion_messages = {
src/gui/main_window.py-1590-                "geocoding": "‚úÖ Keres√©s befejezve",
src/gui/main_window.py:1591:                "weather_data": "‚úÖ Id≈ëj√°r√°si adatok lek√©rdezve (Dual-API)",
src/gui/main_window.py-1592-                "sql_query": "‚úÖ Adatb√°zis lek√©rdez√©s befejezve"
src/gui/main_window.py-1593-            }
--
src/gui/main_window.py-1599-            progress_messages = {
src/gui/main_window.py-1600-                "geocoding": f"üîç Keres√©s: {progress}%",
src/gui/main_window.py:1601:                "weather_data": f"üåç Adatok lek√©rdez√©se (Dual-API): {progress}%",
src/gui/main_window.py-1602-                "sql_query": f"üóÇÔ∏è Adatb√°zis: {progress}%"
src/gui/main_window.py-1603-            }
--
src/gui/main_window.py-1628-    def _export_data(self) -> None:
src/gui/main_window.py-1629-        """Adatok export√°l√°sa men√ºb≈ël."""
src/gui/main_window.py:1630:        weather_data = self.controller.get_current_weather_data()
src/gui/main_window.py:1631:        if not weather_data:
src/gui/main_window.py-1632-            self._show_error("Nincsenek export√°lhat√≥ adatok. El≈ësz√∂r k√©rdezzen le adatokat.")
src/gui/main_window.py-1633-            return
--
src/gui/main_window.py-1644-    def _show_extreme_weather(self) -> None:
src/gui/main_window.py-1645-        """Extr√©m id≈ëj√°r√°si esem√©nyek megjelen√≠t√©se."""
src/gui/main_window.py:1646:        weather_data = self.controller.get_current_weather_data()
src/gui/main_window.py-1647-        city_data = self.controller.get_current_city()
src/gui/main_window.py-1648-        
src/gui/main_window.py:1649:        if not weather_data or not city_data:
src/gui/main_window.py-1650-            self._show_error("Nincsenek megjelen√≠thet≈ë adatok. El≈ësz√∂r k√©rdezzen le id≈ëj√°r√°si adatokat.")
src/gui/main_window.py-1651-            return
--
src/gui/main_window.py-1654-        
src/gui/main_window.py-1655-        try:
src/gui/main_window.py:1656:            dialog = ExtremeWeatherDialog(self, weather_data, city_name)
src/gui/main_window.py-1657-            dialog.exec()
src/gui/main_window.py-1658-        except Exception as e:
--
src/gui/app_controller.py-64-    # Eredeti signalok meg≈ërz√©se (backwards compatibility)
src/gui/app_controller.py-65-    geocoding_results_ready = Signal(list)      # List[Dict] - telep√ºl√©s tal√°latok
src/gui/app_controller.py:66:    weather_data_ready = Signal(dict)           # Dict - API v√°lasz adatok
src/gui/app_controller.py-67-    error_occurred = Signal(str)                # str - hiba√ºzenet
src/gui/app_controller.py-68-    status_updated = Signal(str)                # str - st√°tusz √ºzenet
--
src/gui/app_controller.py-88-        # === CLEAN ARCHITECTURE STATE ===
src/gui/app_controller.py-89-        self.current_city_data: Optional[Dict[str, Any]] = None
src/gui/app_controller.py:90:        self.current_weather_data: Optional[Dict[str, Any]] = None
src/gui/app_controller.py-91-        self.active_search_query: Optional[str] = None
src/gui/app_controller.py-92-        
--
src/gui/app_controller.py-425-            # T√≠pus-specifikus eredm√©ny tov√°bb√≠t√°s (backwards compatibility)
src/gui/app_controller.py-426-            if analysis_type == 'single_location':
src/gui/app_controller.py:427:                self.weather_data_ready.emit(processed_result)
src/gui/app_controller.py-428-            elif analysis_type in ['multi_city', 'county_analysis']:
src/gui/app_controller.py-429-                # A MultiCityEngine eredm√©ny√©t tov√°bb√≠tjuk a megfelel≈ë GUI komponenseknek
--
src/gui/app_controller.py-636-            
src/gui/app_controller.py-637-            # Ellen≈ërizz√ºk, hogy l√©tezik-e a wind_gusts_max oszlop
src/gui/app_controller.py:638:            cursor.execute("PRAGMA table_info(weather_data)")
src/gui/app_controller.py-639-            columns = [column[1] for column in cursor.fetchall()]
src/gui/app_controller.py-640-            
--
src/gui/app_controller.py-644-                # √öj oszlop hozz√°ad√°sa
src/gui/app_controller.py-645-                cursor.execute("""
src/gui/app_controller.py:646:                    ALTER TABLE weather_data 
src/gui/app_controller.py-647-                    ADD COLUMN wind_gusts_max REAL
src/gui/app_controller.py-648-                """)
--
src/gui/app_controller.py-652-                # Index l√©trehoz√°sa a gyorsabb lek√©rdez√©sekhez
src/gui/app_controller.py-653-                cursor.execute("""
src/gui/app_controller.py:654:                    CREATE INDEX IF NOT EXISTS idx_weather_data_wind_gusts_max 
src/gui/app_controller.py:655:                    ON weather_data(wind_gusts_max)
src/gui/app_controller.py-656-                """)
src/gui/app_controller.py-657-                
--
src/gui/app_controller.py-666-                
src/gui/app_controller.py-667-                cursor.execute("""
src/gui/app_controller.py:668:                    ALTER TABLE weather_data 
src/gui/app_controller.py-669-                    ADD COLUMN data_provider TEXT DEFAULT 'open-meteo'
src/gui/app_controller.py-670-                """)
--
src/gui/app_controller.py-687-        
src/gui/app_controller.py-688-        # Weather data worker signalok
src/gui/app_controller.py:689:        self.worker_manager.weather_data_completed.connect(self._on_weather_data_completed)
src/gui/app_controller.py:690:        self._logger.info("üîó weather_data_completed signal connected")
src/gui/app_controller.py-691-        
src/gui/app_controller.py-692-        # √Åltal√°nos worker signalok
--
src/gui/app_controller.py-1089-    
src/gui/app_controller.py-1090-    @Slot(float, float, str, str, dict)
src/gui/app_controller.py:1091:    def handle_weather_data_request(self, latitude: float, longitude: float, 
src/gui/app_controller.py-1092-                                   start_date: str, end_date: str, params: Dict[str, Any]) -> None:
src/gui/app_controller.py-1093-        """
--
src/gui/app_controller.py-1101-            params: API param√©terek
src/gui/app_controller.py-1102-        """
src/gui/app_controller.py:1103:        self._logger.warning("üåçüå™Ô∏è DEPRECATED: handle_weather_data_request haszn√°lata. Haszn√°ld handle_analysis_request-et!")
src/gui/app_controller.py-1104-        
src/gui/app_controller.py-1105-        # Konvert√°l√°s √∫j form√°tumra √©s tov√°bb√≠t√°s
--
src/gui/app_controller.py-1121-    
src/gui/app_controller.py-1122-    @Slot(dict)
src/gui/app_controller.py:1123:    def _on_weather_data_completed(self, data: Dict[str, Any]) -> None:
src/gui/app_controller.py-1124-        """
src/gui/app_controller.py-1125-        üåçüå™Ô∏è Id≈ëj√°r√°si adatok lek√©rdez√©s√©nek befejez√©se (backwards compatibility).
--
src/gui/app_controller.py-1128-            data: API v√°lasz adatok
src/gui/app_controller.py-1129-        """
src/gui/app_controller.py:1130:        self._logger.info(f"üåçüå™Ô∏è _on_weather_data_completed called (backwards compatibility)")
src/gui/app_controller.py-1131-        
src/gui/app_controller.py-1132-        try:
--
src/gui/app_controller.py-1136-            
src/gui/app_controller.py-1137-            # Adatok feldolgoz√°sa √©s valid√°l√°sa
src/gui/app_controller.py:1138:            processed_data = self._process_weather_data(data)
src/gui/app_controller.py-1139-            
src/gui/app_controller.py-1140-            if not processed_data:
--
src/gui/app_controller.py-1146-            
src/gui/app_controller.py-1147-            # Jelenlegi adatok ment√©se
src/gui/app_controller.py:1148:            self.current_weather_data = processed_data
src/gui/app_controller.py-1149-            
src/gui/app_controller.py-1150-            # Adatb√°zisba ment√©s (aszinkron)
--
src/gui/app_controller.py-1171-            
src/gui/app_controller.py-1172-            # Eredm√©nyek tov√°bb√≠t√°sa a GUI komponenseknek
src/gui/app_controller.py:1173:            self._logger.info(f"üì° Emitting weather_data_ready signal...")
src/gui/app_controller.py:1174:            self.weather_data_ready.emit(processed_data)
src/gui/app_controller.py-1175-            
src/gui/app_controller.py-1176-            self._logger.info(f"‚úÖ Weather data befejezve: {record_count} napi rekord (backwards compatibility)")
--
src/gui/app_controller.py-1182-            self.error_occurred.emit(f"Adatok feldolgoz√°si hiba: {e}")
src/gui/app_controller.py-1183-    
src/gui/app_controller.py:1184:    def _process_weather_data(self, raw_data: Dict[str, Any]) -> Optional[Dict[str, Any]]:
src/gui/app_controller.py-1185-        """
src/gui/app_controller.py-1186-        üå™Ô∏è Id≈ëj√°r√°si adatok feldolgoz√°sa WIND GUSTS t√°mogat√°ssal.
--
src/gui/app_controller.py-1369-            return []
src/gui/app_controller.py-1370-    
src/gui/app_controller.py:1371:    def _save_weather_to_database(self, weather_data: Dict[str, Any]) -> None:
src/gui/app_controller.py-1372-        """
src/gui/app_controller.py-1373-        üåçüå™Ô∏è KRITIKUS JAV√çT√ÅS: Id≈ëj√°r√°si adatok ment√©se adatb√°zisba PROVIDER ROUTING + WIND GUSTS t√°mogat√°ssal.
src/gui/app_controller.py-1374-        
src/gui/app_controller.py-1375-        Args:
src/gui/app_controller.py:1376:            weather_data: Feldolgozott id≈ëj√°r√°si adatok
src/gui/app_controller.py-1377-        """
src/gui/app_controller.py-1378-        try:
--
src/gui/app_controller.py-1397-            
src/gui/app_controller.py-1398-            city_id = city_result[0]
src/gui/app_controller.py:1399:            daily_data = weather_data['daily']
src/gui/app_controller.py-1400-            
src/gui/app_controller.py-1401-            # üåç Provider inform√°ci√≥
src/gui/app_controller.py:1402:            data_provider = weather_data.get('provider', 'unknown')
src/gui/app_controller.py-1403-            
src/gui/app_controller.py-1404-            # Id≈ëj√°r√°si adatok ment√©se
--
src/gui/app_controller.py-1412-                    
src/gui/app_controller.py-1413-                    cursor.execute('''
src/gui/app_controller.py:1414:                        INSERT OR REPLACE INTO weather_data 
src/gui/app_controller.py-1415-                        (city_id, date, temp_max, temp_min, precipitation, windspeed_max, wind_gusts_max, data_provider)
src/gui/app_controller.py-1416-                        VALUES (?, ?, ?, ?, ?, ?, ?, ?)
--
src/gui/app_controller.py-1468-        return self.current_city_data.copy() if self.current_city_data else None
src/gui/app_controller.py-1469-    
src/gui/app_controller.py:1470:    def get_current_weather_data(self) -> Optional[Dict[str, Any]]:
src/gui/app_controller.py-1471-        """Jelenlegi id≈ëj√°r√°si adatok lek√©rdez√©se."""
src/gui/app_controller.py:1472:        return self.current_weather_data.copy() if self.current_weather_data else None
src/gui/app_controller.py-1473-    
src/gui/app_controller.py-1474-    def get_provider_info(self) -> Dict[str, Any]:
--
src/gui/app_controller.py-1533-            # √Ållapot tiszt√≠t√°sa
src/gui/app_controller.py-1534-            self.current_city_data = None
src/gui/app_controller.py:1535:            self.current_weather_data = None
src/gui/app_controller.py-1536-            self.active_search_query = None
src/gui/app_controller.py-1537-            
--
src/gui/data_widgets.py-655-        
src/gui/data_widgets.py-656-        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
src/gui/data_widgets.py:657:        default_filename = f"weather_data_{timestamp}{default_ext}"
src/gui/data_widgets.py-658-        
src/gui/data_widgets.py-659-        filepath, _ = QFileDialog.getSaveFileName(
--
src/gui/main_windowold.py-1029-                use_case = params.get('use_case', 'single_city')
src/gui/main_windowold.py-1030-                optimal_source = get_optimal_data_source(use_case)
src/gui/main_windowold.py:1031:                print(f"üå§Ô∏è DEBUG [CONTROL_PANEL‚ÜíCONTROLLER]: weather_data_requested ({lat:.4f}, {lon:.4f}) ‚Üí {optimal_source}")
src/gui/main_windowold.py-1032-            
src/gui/main_windowold.py:1033:            self.control_panel.weather_data_requested.connect(debug_control_panel_weather_requested)
src/gui/main_windowold.py:1034:            self.control_panel.weather_data_requested.connect(
src/gui/main_windowold.py:1035:                self.controller.handle_weather_data_request
src/gui/main_windowold.py-1036-            )
src/gui/main_windowold.py:1037:            print("‚úÖ DEBUG: ControlPanel weather_data_requested ‚Üí Controller.handle_weather_data_request CONNECTED (DUAL-API)")
src/gui/main_windowold.py-1038-            
src/gui/main_windowold.py-1039-            # üéâ KRITIKUS: MULTI-CITY WEATHER REQUESTED SIGNAL - √öJ!
--
src/gui/main_windowold.py-1200-        
src/gui/main_windowold.py-1201-        # Id≈ëj√°r√°si adatok k√©szek
src/gui/main_windowold.py:1202:        def debug_controller_weather_data_ready(data: dict):
src/gui/main_windowold.py-1203-            daily_data = data.get("daily", {})
src/gui/main_windowold.py-1204-            record_count = len(daily_data.get("time", []))
src/gui/main_windowold.py-1205-            data_source = data.get("data_source", "Unknown")
src/gui/main_windowold.py-1206-            source_type = data.get("source_type", "unknown")
src/gui/main_windowold.py:1207:            print(f"üìä DEBUG [CONTROLLER‚ÜíMAIN_WINDOW]: weather_data_ready: {record_count} records from {data_source} (type: {source_type})")
src/gui/main_windowold.py-1208-        
src/gui/main_windowold.py:1209:        self.controller.weather_data_ready.connect(debug_controller_weather_data_ready)
src/gui/main_windowold.py:1210:        self.controller.weather_data_ready.connect(
src/gui/main_windowold.py:1211:            self._on_weather_data_received
src/gui/main_windowold.py-1212-        )
src/gui/main_windowold.py:1213:        print("‚úÖ DEBUG: Controller.weather_data_ready ‚Üí MainWindow._on_weather_data_received CONNECTED (DUAL-API)")
src/gui/main_windowold.py-1214-        
src/gui/main_windowold.py-1215-        # üîó KRITIKUS: Controller ‚Üí AnalyticsView data pipeline
src/gui/main_windowold.py-1216-        if self.analytics_panel:
src/gui/main_windowold.py:1217:            def debug_controller_weather_data_to_analytics(data: dict):
src/gui/main_windowold.py:1218:                print("üîó DEBUG [CONTROLLER‚ÜíANALYTICS]: weather_data_ready ‚Üí update_data")
src/gui/main_windowold.py-1219-            
src/gui/main_windowold.py:1220:            self.controller.weather_data_ready.connect(debug_controller_weather_data_to_analytics)
src/gui/main_windowold.py:1221:            self.controller.weather_data_ready.connect(
src/gui/main_windowold.py-1222-                self.analytics_panel.update_data
src/gui/main_windowold.py-1223-            )
src/gui/main_windowold.py:1224:            print("‚úÖ DEBUG: Controller.weather_data_ready ‚Üí AnalyticsView.update_data CONNECTED")
src/gui/main_windowold.py-1225-        
src/gui/main_windowold.py-1226-        # === CONTROLLER ‚Üí MAIN WINDOW √ÅLTAL√ÅNOS SIGNALOK ===
--
src/gui/main_windowold.py-1254-        if self.control_panel:
src/gui/main_windowold.py-1255-            # Weather data befejez√©s jelz√©se
src/gui/main_windowold.py:1256:            self.controller.weather_data_ready.connect(
src/gui/main_windowold.py:1257:                self.control_panel.on_weather_data_completed
src/gui/main_windowold.py-1258-            )
src/gui/main_windowold.py-1259-            
--
src/gui/main_windowold.py-1706-    # === SLOT MET√ìDUSOK - CLEAN VERZI√ì + THEMEMANAGER + ANALYTICS REFAKTOR√ÅLT + DUAL-API ===
src/gui/main_windowold.py-1707-    
src/gui/main_windowold.py:1708:    def _on_weather_data_received(self, data: dict) -> None:
src/gui/main_windowold.py-1709-        """
src/gui/main_windowold.py-1710-        üîß CLEAN id≈ëj√°r√°si adatok fogad√°sa a Controller-t≈ël - DASHBOARD CLEANUP BEFEJEZVE + ANALYTICS REFAKTOR√ÅLT INTEGR√ÅCI√ìVAL + DUAL-API.
--
src/gui/main_windowold.py-1713-            data: Id≈ëj√°r√°si adatok (Open-Meteo vagy Meteostat form√°tumban)
src/gui/main_windowold.py-1714-        """
src/gui/main_windowold.py:1715:        print("üìä DEBUG: _on_weather_data_received called - DASHBOARD CLEANUP BEFEJEZVE + ANALYTICS REFAKTOR√ÅLT INTEGRATION + DUAL-API")
src/gui/main_windowold.py-1716-        
src/gui/main_windowold.py-1717-        try:
--
src/gui/main_windowold.py-1739-            # üìä ANALYTICS REFAKTOR√ÅLT INTEGR√ÅCI√ì - automatikus!
src/gui/main_windowold.py-1740-            # Az analytics_panel.update_data() automatikusan megh√≠v√≥dik a 
src/gui/main_windowold.py:1741:            # Controller.weather_data_ready signal miatt (_connect_mvc_signals-ben)
src/gui/main_windowold.py-1742-            print("‚úÖ DEBUG: Analytics panel update automatikus (signal-based)")
src/gui/main_windowold.py-1743-            
--
src/gui/main_windowold.py-1765-            completion_messages = {
src/gui/main_windowold.py-1766-                "geocoding": "‚úÖ Keres√©s befejezve",
src/gui/main_windowold.py:1767:                "weather_data": "‚úÖ Id≈ëj√°r√°si adatok lek√©rdezve (Dual-API)",
src/gui/main_windowold.py-1768-                "sql_query": "‚úÖ Adatb√°zis lek√©rdez√©s befejezve"
src/gui/main_windowold.py-1769-            }
--
src/gui/main_windowold.py-1775-            progress_messages = {
src/gui/main_windowold.py-1776-                "geocoding": f"üîç Keres√©s: {progress}%",
src/gui/main_windowold.py:1777:                "weather_data": f"üåç Adatok lek√©rdez√©se (Dual-API): {progress}%",
src/gui/main_windowold.py-1778-                "sql_query": f"üóÇÔ∏è Adatb√°zis: {progress}%"
src/gui/main_windowold.py-1779-            }
--
src/gui/main_windowold.py-1822-    def _export_data(self) -> None:
src/gui/main_windowold.py-1823-        """Adatok export√°l√°sa men√ºb≈ël."""
src/gui/main_windowold.py:1824:        weather_data = self.controller.get_current_weather_data()
src/gui/main_windowold.py:1825:        if not weather_data:
src/gui/main_windowold.py-1826-            self._show_error("Nincsenek export√°lhat√≥ adatok. El≈ësz√∂r k√©rdezzen le adatokat.")
src/gui/main_windowold.py-1827-            return
--
src/gui/main_windowold.py-1838-    def _show_extreme_weather(self) -> None:
src/gui/main_windowold.py-1839-        """Extr√©m id≈ëj√°r√°si esem√©nyek megjelen√≠t√©se."""
src/gui/main_windowold.py:1840:        weather_data = self.controller.get_current_weather_data()
src/gui/main_windowold.py-1841-        city_data = self.controller.get_current_city()
src/gui/main_windowold.py-1842-        
src/gui/main_windowold.py:1843:        if not weather_data or not city_data:
src/gui/main_windowold.py-1844-            self._show_error("Nincsenek megjelen√≠thet≈ë adatok. El≈ësz√∂r k√©rdezzen le id≈ëj√°r√°si adatokat.")
src/gui/main_windowold.py-1845-            return
--
src/gui/main_windowold.py-1848-        
src/gui/main_windowold.py-1849-        try:
src/gui/main_windowold.py:1850:            dialog = ExtremeWeatherDialog(self, weather_data, city_name)
src/gui/main_windowold.py-1851-            dialog.exec()
src/gui/main_windowold.py-1852-        except Exception as e:

üèôÔ∏è 7. MOSCOW KERES√âS...
src/gui/main_window.py:13:‚úÖ Moscow lek√©rdez√©s ‚Üí AnalyticsView display M≈∞K√ñDIK
src/gui/main_window.py:98:    üéØ V√ÅROS ELEMZ√âS: Moscow ‚Üí Weather API ‚Üí AnalyticsView M≈∞K√ñDIK!
src/gui/main_window.py:1682:        <p><i>üéØ ‚úÖ Moscow lek√©rdez√©s ‚Üí AnalyticsView display M≈∞K√ñDIK!</i></p>
src/gui/main_window.py:1721:        <p><i>üéØ <b>V√ÅROS ELEMZ√âS ADATFOLYAM: Moscow ‚Üí Weather API ‚Üí AnalyticsView M≈∞K√ñDIK!</b></i></p>

‚ùå 8. ERROR/EXCEPTION keres√©se...
src/gui/map_visualizer.py-54-    print("‚úÖ Folium successfully imported")
src/gui/map_visualizer.py:55:except ImportError as e:
src/gui/map_visualizer.py-56-    FOLIUM_AVAILABLE = False
--
src/gui/map_visualizer.py-63-    GEOPANDAS_AVAILABLE = True
src/gui/map_visualizer.py:64:except ImportError:
src/gui/map_visualizer.py-65-    GEOPANDAS_AVAILABLE = False
--
src/gui/map_visualizer.py-126-    server_ready = Signal(str, int)  # host, port
src/gui/map_visualizer.py:127:    server_error = Signal(str)       # error message
src/gui/map_visualizer.py-128-    
--
src/gui/map_visualizer.py-165-                
src/gui/map_visualizer.py:166:        except Exception as e:
src/gui/map_visualizer.py:167:            error_msg = f"HTTP Server error: {e}"
src/gui/map_visualizer.py:168:            print(f"‚ùå {error_msg}")
src/gui/map_visualizer.py:169:            self.server_error.emit(error_msg)
src/gui/map_visualizer.py-170-    
--
src/gui/map_visualizer.py-239-    map_generated = Signal(str)           # HTML FILE PATH (nem content!)
src/gui/map_visualizer.py:240:    error_occurred = Signal(str)          # error message
src/gui/map_visualizer.py-241-    status_updated = Signal(str)          # status message
--
src/gui/map_visualizer.py-262-            if not FOLIUM_AVAILABLE:
src/gui/map_visualizer.py:263:                raise ImportError("Folium library not available")
src/gui/map_visualizer.py-264-            
--
src/gui/map_visualizer.py-306-            if not os.path.exists(self.output_path):
src/gui/map_visualizer.py:307:                raise FileNotFoundError(f"Generated HTML file not found: {self.output_path}")
src/gui/map_visualizer.py-308-            
--
src/gui/map_visualizer.py-311-            if file_size < 1000:
src/gui/map_visualizer.py:312:                raise ValueError(f"Generated HTML file too small: {file_size} bytes")
src/gui/map_visualizer.py-313-            
--
src/gui/map_visualizer.py-321-            
src/gui/map_visualizer.py:322:        except Exception as e:
src/gui/map_visualizer.py-323-            import traceback
src/gui/map_visualizer.py:324:            error_msg = f"Folium t√©rk√©p gener√°l√°si hiba: {e}\n{traceback.format_exc()}"
src/gui/map_visualizer.py:325:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer.py-326-    
--
src/gui/map_visualizer.py-461-            
src/gui/map_visualizer.py:462:        except Exception as e:
src/gui/map_visualizer.py:463:            print(f"‚ö†Ô∏è Weather overlay error: {e}")
src/gui/map_visualizer.py-464-    
--
src/gui/map_visualizer.py-503-            
src/gui/map_visualizer.py:504:        except ImportError:
src/gui/map_visualizer.py-505-            print("‚ö†Ô∏è HeatMap plugin not available")
src/gui/map_visualizer.py:506:        except Exception as e:
src/gui/map_visualizer.py:507:            print(f"‚ö†Ô∏è Temperature heatmap error: {e}")
src/gui/map_visualizer.py-508-    
--
src/gui/map_visualizer.py-573-            
src/gui/map_visualizer.py:574:        except Exception as e:
src/gui/map_visualizer.py-575-            print(f"‚ö†Ô∏è Gradient gener√°l√°si hiba: {e}")
--
src/gui/map_visualizer.py-625-            
src/gui/map_visualizer.py:626:        except Exception as e:
src/gui/map_visualizer.py:627:            print(f"‚ö†Ô∏è Precipitation overlay error: {e}")
src/gui/map_visualizer.py-628-    
--
src/gui/map_visualizer.py-681-            
src/gui/map_visualizer.py:682:        except Exception as e:
src/gui/map_visualizer.py:683:            print(f"‚ö†Ô∏è Wind speed overlay error: {e}")
src/gui/map_visualizer.py-684-    
--
src/gui/map_visualizer.py-707-            
src/gui/map_visualizer.py:708:        except Exception as e:
src/gui/map_visualizer.py:709:            print(f"‚ö†Ô∏è Weather legend error: {e}")
src/gui/map_visualizer.py-710-    
--
src/gui/map_visualizer.py-932-                        }} catch(err) {{
src/gui/map_visualizer.py:933:                            console.log('‚ö†Ô∏è Map move event error:', err);
src/gui/map_visualizer.py-934-                        }}
--
src/gui/map_visualizer.py-953-            }};
src/gui/map_visualizer.py:954:            script.onerror = function() {{
src/gui/map_visualizer.py-955-                console.log('‚ö†Ô∏è Failed to load QWebChannel script');
--
src/gui/map_visualizer.py-1044-    - export_completed(file_path): Export befejezve
src/gui/map_visualizer.py:1045:    - error_occurred(message): Hiba t√∂rt√©nt
src/gui/map_visualizer.py-1046-    """
--
src/gui/map_visualizer.py-1054-    export_completed = Signal(str)                 # f√°jl √∫tvonal
src/gui/map_visualizer.py:1055:    error_occurred = Signal(str)                   # hiba √ºzenet
src/gui/map_visualizer.py-1056-    bounds_changed = Signal(object)                # t√©rk√©p hat√°r v√°ltoz√°s
--
src/gui/map_visualizer.py-1096-        else:
src/gui/map_visualizer.py:1097:            self._show_folium_error()
src/gui/map_visualizer.py-1098-    
--
src/gui/map_visualizer.py-1216-            settings.setAttribute(QWebEngineSettings.JavascriptEnabled, True)
src/gui/map_visualizer.py:1217:            settings.setAttribute(QWebEngineSettings.ErrorPageEnabled, True)
src/gui/map_visualizer.py-1218-            # WebGL √©s Canvas enged√©lyez√©s
--
src/gui/map_visualizer.py-1227-            
src/gui/map_visualizer.py:1228:        except ImportError as e:
src/gui/map_visualizer.py-1229-            print(f"‚ö†Ô∏è WebEngineSettings not available: {e}")
--
src/gui/map_visualizer.py-1286-        self.local_server.server_ready.connect(self._on_server_ready)
src/gui/map_visualizer.py:1287:        self.local_server.server_error.connect(self._on_server_error)
src/gui/map_visualizer.py-1288-        
--
src/gui/map_visualizer.py-1308-    
src/gui/map_visualizer.py:1309:    def _on_server_error(self, error_message: str):
src/gui/map_visualizer.py-1310-        """
--
src/gui/map_visualizer.py-1312-        """
src/gui/map_visualizer.py:1313:        print(f"‚ùå Local HTTP server error: {error_message}")
src/gui/map_visualizer.py-1314-        
--
src/gui/map_visualizer.py-1319-        # Hiba jelz√©s
src/gui/map_visualizer.py:1320:        self.error_occurred.emit(f"HTTP szerver hiba: {error_message}")
src/gui/map_visualizer.py-1321-    
src/gui/map_visualizer.py:1322:    def _show_folium_error(self):
src/gui/map_visualizer.py-1323-        """
--
src/gui/map_visualizer.py-1332-        
src/gui/map_visualizer.py:1333:        error_msg = "Folium library not installed. Please run: pip install folium branca"
src/gui/map_visualizer.py:1334:        self.error_occurred.emit(error_msg)
src/gui/map_visualizer.py-1335-    
--
src/gui/map_visualizer.py-1353-        if not FOLIUM_AVAILABLE:
src/gui/map_visualizer.py:1354:            self._show_folium_error()
src/gui/map_visualizer.py-1355-            return
--
src/gui/map_visualizer.py-1380-        self.map_generator.map_generated.connect(self._on_map_generated)
src/gui/map_visualizer.py:1381:        self.map_generator.error_occurred.connect(self._on_map_error)
src/gui/map_visualizer.py-1382-        
--
src/gui/map_visualizer.py-1399-        if not os.path.exists(file_path):
src/gui/map_visualizer.py:1400:            error_msg = f"Generated HTML file not found: {file_path}"
src/gui/map_visualizer.py:1401:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer.py-1402-            return
--
src/gui/map_visualizer.py-1406-        if file_size < 1000:
src/gui/map_visualizer.py:1407:            error_msg = f"Generated HTML file too small: {file_size} bytes"
src/gui/map_visualizer.py:1408:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer.py-1409-            return
--
src/gui/map_visualizer.py-1452-            
src/gui/map_visualizer.py:1453:        except Exception as e:
src/gui/map_visualizer.py:1454:            error_msg = f"HTTP URL bet√∂lt√©si hiba: {e}"
src/gui/map_visualizer.py:1455:            print(f"‚ùå HTTP URL Loading Error: {error_msg}")
src/gui/map_visualizer.py:1456:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer.py-1457-    
src/gui/map_visualizer.py:1458:    def _on_map_error(self, error_message: str):
src/gui/map_visualizer.py-1459-        """
--
src/gui/map_visualizer.py-1464-        
src/gui/map_visualizer.py:1465:        print(f"‚ùå Folium map generation error: {error_message}")
src/gui/map_visualizer.py:1466:        self.error_occurred.emit(error_message)
src/gui/map_visualizer.py-1467-    
--
src/gui/map_visualizer.py-1477-        else:
src/gui/map_visualizer.py:1478:            error_msg = "WebEngine HTTP loading failed"
src/gui/map_visualizer.py:1479:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer.py-1480-            self.status_label.setText("‚ùå WebEngine HTTP bet√∂lt√©s sikertelen!")
--
src/gui/map_visualizer.py-1584-                
src/gui/map_visualizer.py:1585:            except Exception as e:
src/gui/map_visualizer.py:1586:                error_msg = f"Export hiba: {e}"
src/gui/map_visualizer.py:1587:                self.error_occurred.emit(error_msg)
src/gui/map_visualizer.py:1588:                QMessageBox.critical(self, "Export hiba", error_msg)
src/gui/map_visualizer.py-1589-    
--
src/gui/map_visualizer.py-1977-                print(f"üóëÔ∏è Temp map file removed: {self.current_map_file}")
src/gui/map_visualizer.py:1978:            except Exception as e:
src/gui/map_visualizer.py-1979-                print(f"‚ö†Ô∏è Failed to remove temp file: {e}")
--
src/gui/map_visualizer.py-2085-    
src/gui/map_visualizer.py:2086:    def on_error_occurred(message):
src/gui/map_visualizer.py-2087-        print(f"‚ùå Hiba: {message}")
--
src/gui/map_visualizer.py-2218-    map_visualizer.export_completed.connect(on_export_completed)
src/gui/map_visualizer.py:2219:    map_visualizer.error_occurred.connect(on_error_occurred)
src/gui/map_visualizer.py-2220-    
--
src/gui/workers/analysis_worker.py-8-- Progress reporting (√°llapot jelz√©sek)
src/gui/workers/analysis_worker.py:9:- Error handling (hibakezel√©s)
src/gui/workers/analysis_worker.py-10-
--
src/gui/workers/analysis_worker.py-40-    print("‚úÖ AnalysisWorker imports successful")
src/gui/workers/analysis_worker.py:41:except ImportError as e:
src/gui/workers/analysis_worker.py:42:    print(f"‚ùå AnalysisWorker import error: {e}")
src/gui/workers/analysis_worker.py-43-    IMPORTS_OK = False
--
src/gui/workers/analysis_worker.py-57-        print("‚úÖ AnalysisWorker fallback imports successful")
src/gui/workers/analysis_worker.py:58:    except ImportError as e2:
src/gui/workers/analysis_worker.py:59:        print(f"‚ùå AnalysisWorker fallback import error: {e2}")
src/gui/workers/analysis_worker.py-60-        IMPORTS_OK = False
--
src/gui/workers/analysis_worker.py-145-            else:
src/gui/workers/analysis_worker.py:146:                self._emit_error(f"Ismeretlen elemz√©s t√≠pus: {analysis_type}")
src/gui/workers/analysis_worker.py-147-                
src/gui/workers/analysis_worker.py:148:        except Exception as e:
src/gui/workers/analysis_worker.py:149:            self._logger.error(f"Worker kritikus hiba: {str(e)}")
src/gui/workers/analysis_worker.py:150:            self._logger.error(traceback.format_exc())
src/gui/workers/analysis_worker.py:151:            self._emit_error(f"V√°ratlan hiba: {str(e)}")
src/gui/workers/analysis_worker.py-152-    
--
src/gui/workers/analysis_worker.py-159-            if not self._request_data:
src/gui/workers/analysis_worker.py:160:                self._emit_error("Hi√°nyz√≥ k√©r√©s adatok")
src/gui/workers/analysis_worker.py-161-                return False
--
src/gui/workers/analysis_worker.py-165-                if field not in self._request_data:
src/gui/workers/analysis_worker.py:166:                    self._emit_error(f"Hi√°nyz√≥ k√∂telez≈ë mez≈ë: {field}")
src/gui/workers/analysis_worker.py-167-                    return False
--
src/gui/workers/analysis_worker.py-184-        if not IMPORTS_OK:
src/gui/workers/analysis_worker.py:185:            self._emit_error("Analytics komponensek import√°l√°sa sikertelen")
src/gui/workers/analysis_worker.py-186-            return False
--
src/gui/workers/analysis_worker.py-218-            if WeatherClient is None:
src/gui/workers/analysis_worker.py:219:                self._emit_error("WeatherClient oszt√°ly nem el√©rhet≈ë")
src/gui/workers/analysis_worker.py-220-                return False
--
src/gui/workers/analysis_worker.py-226-                self._logger.info("‚úÖ WeatherClient default inicializ√°l√°s sikeres")
src/gui/workers/analysis_worker.py:227:            except Exception as e1:
src/gui/workers/analysis_worker.py-228-                try:
--
src/gui/workers/analysis_worker.py-231-                    self._logger.info("‚úÖ WeatherClient preferred_provider inicializ√°l√°s sikeres")
src/gui/workers/analysis_worker.py:232:                except Exception as e2:
src/gui/workers/analysis_worker.py:233:                    self._logger.error(f"‚ùå WeatherClient inicializ√°l√°s minden m√≥dszer sikertelen: {e1}, {e2}")
src/gui/workers/analysis_worker.py:234:                    self._emit_error(f"WeatherClient inicializ√°l√°s sikertelen: {e1}")
src/gui/workers/analysis_worker.py-235-                    return False
--
src/gui/workers/analysis_worker.py-246-                if MultiCityEngine is None:
src/gui/workers/analysis_worker.py:247:                    self._emit_error("MultiCityEngine oszt√°ly nem el√©rhet≈ë")
src/gui/workers/analysis_worker.py-248-                    return False
--
src/gui/workers/analysis_worker.py-261-            
src/gui/workers/analysis_worker.py:262:        except Exception as e:
src/gui/workers/analysis_worker.py:263:            self._logger.error(f"‚ùå Inicializ√°l√°si hiba: {str(e)}")
src/gui/workers/analysis_worker.py:264:            self._logger.error(traceback.format_exc())
src/gui/workers/analysis_worker.py:265:            self._emit_error(f"Inicializ√°l√°si hiba: {str(e)}")
src/gui/workers/analysis_worker.py-266-            return False
--
src/gui/workers/analysis_worker.py-294-            if not region_or_county:
src/gui/workers/analysis_worker.py:295:                self._emit_error("Hi√°nyz√≥ r√©gi√≥ vagy megye n√©v")
src/gui/workers/analysis_worker.py-296-                return
--
src/gui/workers/analysis_worker.py-323-            
src/gui/workers/analysis_worker.py:324:        except Exception as e:
src/gui/workers/analysis_worker.py:325:            self._logger.error(f"Multi-city elemz√©s hiba: {str(e)}")
src/gui/workers/analysis_worker.py:326:            self._emit_error(f"Multi-city elemz√©s sikertelen: {str(e)}")
src/gui/workers/analysis_worker.py-327-    
--
src/gui/workers/analysis_worker.py-362-            if latitude is None or longitude is None:
src/gui/workers/analysis_worker.py:363:                error_msg = f"Hi√°nyz√≥ koordin√°t√°k: latitude={latitude}, longitude={longitude}"
src/gui/workers/analysis_worker.py:364:                self._logger.error(f"üîß {error_msg}")
src/gui/workers/analysis_worker.py:365:                self._logger.error(f"üîß location_data: {location_data}")
src/gui/workers/analysis_worker.py:366:                self._logger.error(f"üîß request_data keys: {list(self._request_data.keys())}")
src/gui/workers/analysis_worker.py:367:                self._emit_error(error_msg)
src/gui/workers/analysis_worker.py-368-                return
--
src/gui/workers/analysis_worker.py-403-            
src/gui/workers/analysis_worker.py:404:        except Exception as e:
src/gui/workers/analysis_worker.py:405:            self._logger.error(f"Single location elemz√©s hiba: {str(e)}")
src/gui/workers/analysis_worker.py:406:            self._logger.error(traceback.format_exc())
src/gui/workers/analysis_worker.py:407:            self._emit_error(f"Egyedi elemz√©s sikertelen: {str(e)}")
src/gui/workers/analysis_worker.py-408-    
--
src/gui/workers/analysis_worker.py-448-    
src/gui/workers/analysis_worker.py:449:    def _emit_error(self, error_message: str):
src/gui/workers/analysis_worker.py:450:        """Thread-safe error jelz√©s"""
src/gui/workers/analysis_worker.py:451:        self._logger.error(f"Worker hiba: {error_message}")
src/gui/workers/analysis_worker.py:452:        self.analysis_failed.emit(error_message)
src/gui/workers/analysis_worker.py-453-    
--
src/gui/workers/analysis_worker.py-548-            
src/gui/workers/analysis_worker.py:549:        def _on_failed(self, error: str):
src/gui/workers/analysis_worker.py:550:            self.status_label.setText(f"‚ùå Hiba: {error}")
src/gui/workers/analysis_worker.py-551-            
--
src/gui/workers/data_fetch_worker.py-46-    finished = Signal()
src/gui/workers/data_fetch_worker.py:47:    error_occurred = Signal(str)
src/gui/workers/data_fetch_worker.py-48-    progress_updated = Signal(int)  # 0-100 sz√°zal√©k
--
src/gui/workers/data_fetch_worker.py-52-        self.is_cancelled = False
src/gui/workers/data_fetch_worker.py:53:        self._error_message = ""
src/gui/workers/data_fetch_worker.py-54-    
--
src/gui/workers/data_fetch_worker.py-58-    
src/gui/workers/data_fetch_worker.py:59:    def emit_error(self, message: str) -> None:
src/gui/workers/data_fetch_worker.py-60-        """Hibajel kibocs√°t√°sa."""
src/gui/workers/data_fetch_worker.py:61:        self._error_message = message
src/gui/workers/data_fetch_worker.py:62:        self.error_occurred.emit(message)
src/gui/workers/data_fetch_worker.py-63-    
--
src/gui/workers/data_fetch_worker.py-67-            self.execute()
src/gui/workers/data_fetch_worker.py:68:        except Exception as e:
src/gui/workers/data_fetch_worker.py-69-            if not self.is_cancelled:
src/gui/workers/data_fetch_worker.py:70:                self.emit_error(f"Worker hiba: {str(e)}")
src/gui/workers/data_fetch_worker.py-71-        finally:
--
src/gui/workers/data_fetch_worker.py-75-        """T√©nyleges munk√°t v√©gz≈ë met√≥dus - override-olni kell."""
src/gui/workers/data_fetch_worker.py:76:        raise NotImplementedError("A execute() met√≥dust override-olni kell!")
src/gui/workers/data_fetch_worker.py-77-
--
src/gui/workers/data_fetch_worker.py-96-        if not self.search_query or len(self.search_query) < 2:
src/gui/workers/data_fetch_worker.py:97:            self.emit_error("Legal√°bb 2 karakter sz√ºks√©ges a keres√©shez")
src/gui/workers/data_fetch_worker.py-98-            return
--
src/gui/workers/data_fetch_worker.py-123-                if response.status_code != 200:
src/gui/workers/data_fetch_worker.py:124:                    self.emit_error(f"Geocoding API hiba: {response.status_code}")
src/gui/workers/data_fetch_worker.py-125-                    return
--
src/gui/workers/data_fetch_worker.py-134-                
src/gui/workers/data_fetch_worker.py:135:        except httpx.TimeoutException:
src/gui/workers/data_fetch_worker.py:136:            self.emit_error("Geocoding API timeout - pr√≥b√°lja √∫jra k√©s≈ëbb")
src/gui/workers/data_fetch_worker.py:137:        except httpx.RequestError as e:
src/gui/workers/data_fetch_worker.py:138:            self.emit_error(f"H√°l√≥zati hiba a geocoding sor√°n: {str(e)}")
src/gui/workers/data_fetch_worker.py:139:        except json.JSONDecodeError:
src/gui/workers/data_fetch_worker.py:140:            self.emit_error("√ârv√©nytelen v√°lasz a geocoding API-t√≥l")
src/gui/workers/data_fetch_worker.py:141:        except Exception as e:
src/gui/workers/data_fetch_worker.py:142:            self.emit_error(f"V√°ratlan hiba a geocoding sor√°n: {str(e)}")
src/gui/workers/data_fetch_worker.py-143-
--
src/gui/workers/data_fetch_worker.py-168-    provider_fallback_occurred = Signal(str, str)  # eredeti, fallback provider
src/gui/workers/data_fetch_worker.py:169:    provider_validation_failed = Signal(str, str)  # provider, error message
src/gui/workers/data_fetch_worker.py-170-    
--
src/gui/workers/data_fetch_worker.py-194-            if not selected_provider:
src/gui/workers/data_fetch_worker.py:195:                self.emit_error("Egyik provider sem el√©rhet≈ë")
src/gui/workers/data_fetch_worker.py-196-                return
--
src/gui/workers/data_fetch_worker.py-234-                    
src/gui/workers/data_fetch_worker.py:235:                except Exception as e:
src/gui/workers/data_fetch_worker.py-236-                    print(f"‚ùå DEBUG: Provider {provider} failed: {e}")
--
src/gui/workers/data_fetch_worker.py-240-            if not success:
src/gui/workers/data_fetch_worker.py:241:                self.emit_error("Minden provider API h√≠v√°s sikertelen")
src/gui/workers/data_fetch_worker.py-242-                return
--
src/gui/workers/data_fetch_worker.py-251-            else:
src/gui/workers/data_fetch_worker.py:252:                self.emit_error("√ârv√©nytelen API v√°lasz strukt√∫ra")
src/gui/workers/data_fetch_worker.py-253-                
src/gui/workers/data_fetch_worker.py:254:        except Exception as e:
src/gui/workers/data_fetch_worker.py:255:            self.emit_error(f"V√°ratlan hiba az id≈ëj√°r√°si adatok lek√©rdez√©se sor√°n: {str(e)}")
src/gui/workers/data_fetch_worker.py-256-    
--
src/gui/workers/data_fetch_worker.py-304-        else:
src/gui/workers/data_fetch_worker.py:305:            raise ValueError(f"Ismeretlen provider: {provider}")
src/gui/workers/data_fetch_worker.py-306-    
--
src/gui/workers/data_fetch_worker.py-367-                
src/gui/workers/data_fetch_worker.py:368:        except httpx.TimeoutException:
src/gui/workers/data_fetch_worker.py-369-            print(f"‚è±Ô∏è DEBUG: {provider} API timeout")
src/gui/workers/data_fetch_worker.py-370-            return False
src/gui/workers/data_fetch_worker.py:371:        except httpx.RequestError as e:
src/gui/workers/data_fetch_worker.py:372:            print(f"üåê DEBUG: {provider} network error: {e}")
src/gui/workers/data_fetch_worker.py-373-            return False
src/gui/workers/data_fetch_worker.py:374:        except json.JSONDecodeError:
src/gui/workers/data_fetch_worker.py:375:            print(f"üìÑ DEBUG: {provider} JSON decode error")
src/gui/workers/data_fetch_worker.py-376-            return False
src/gui/workers/data_fetch_worker.py:377:        except Exception as e:
src/gui/workers/data_fetch_worker.py:378:            print(f"‚ùå DEBUG: {provider} unexpected error: {e}")
src/gui/workers/data_fetch_worker.py-379-            return False
--
src/gui/workers/data_fetch_worker.py-458-        if not self.query:
src/gui/workers/data_fetch_worker.py:459:            self.emit_error("√úres SQL lek√©rdez√©s")
src/gui/workers/data_fetch_worker.py-460-            return
--
src/gui/workers/data_fetch_worker.py-462-        if not self.db_path.exists():
src/gui/workers/data_fetch_worker.py:463:            self.emit_error(f"Adatb√°zis f√°jl nem tal√°lhat√≥: {self.db_path}")
src/gui/workers/data_fetch_worker.py-464-            return
--
src/gui/workers/data_fetch_worker.py-484-                    conn.close()
src/gui/workers/data_fetch_worker.py:485:                    self.emit_error(f"Tiltott SQL kulcssz√≥: {keyword}")
src/gui/workers/data_fetch_worker.py-486-                    return
--
src/gui/workers/data_fetch_worker.py-494-                self.result = result
src/gui/workers/data_fetch_worker.py:495:            except ImportError:
src/gui/workers/data_fetch_worker.py-496-                # Fallback pandas n√©lk√ºl
--
src/gui/workers/data_fetch_worker.py-514-            
src/gui/workers/data_fetch_worker.py:515:        except sqlite3.Error as e:
src/gui/workers/data_fetch_worker.py:516:            self.emit_error(f"SQL hiba: {str(e)}")
src/gui/workers/data_fetch_worker.py:517:        except Exception as e:
src/gui/workers/data_fetch_worker.py:518:            self.emit_error(f"V√°ratlan hiba az SQL lek√©rdez√©s sor√°n: {str(e)}")
src/gui/workers/data_fetch_worker.py-519-
--
src/gui/workers/data_fetch_worker.py-533-    # K√∂zponti signalok
src/gui/workers/data_fetch_worker.py:534:    error_occurred = Signal(str)
src/gui/workers/data_fetch_worker.py-535-    progress_updated = Signal(str, int)  # worker_type, progress
--
src/gui/workers/data_fetch_worker.py-546-    provider_fallback_occurred = Signal(str, str)  # eredeti, fallback provider
src/gui/workers/data_fetch_worker.py:547:    provider_validation_failed = Signal(str, str)  # provider, error message
src/gui/workers/data_fetch_worker.py-548-    provider_usage_tracked = Signal(str, bool)  # provider, success
--
src/gui/workers/data_fetch_worker.py-577-        worker.geocoding_completed.connect(self.geocoding_completed.emit)
src/gui/workers/data_fetch_worker.py:578:        worker.error_occurred.connect(self._on_worker_error)
src/gui/workers/data_fetch_worker.py-579-        worker.finished.connect(lambda worker_id=worker_id: self._on_worker_finished(worker_id))
--
src/gui/workers/data_fetch_worker.py-602-        worker.weather_data_completed.connect(self.weather_data_completed.emit)
src/gui/workers/data_fetch_worker.py:603:        worker.error_occurred.connect(self._on_worker_error)
src/gui/workers/data_fetch_worker.py-604-        worker.finished.connect(lambda worker_id=worker_id: self._on_worker_finished(worker_id))
--
src/gui/workers/data_fetch_worker.py-629-        worker.query_completed.connect(self.sql_query_completed.emit)
src/gui/workers/data_fetch_worker.py:630:        worker.error_occurred.connect(self._on_worker_error)
src/gui/workers/data_fetch_worker.py-631-        worker.finished.connect(lambda worker_id=worker_id: self._on_worker_finished(worker_id))
--
src/gui/workers/data_fetch_worker.py-645-    
src/gui/workers/data_fetch_worker.py:646:    def _on_worker_error(self, error_message: str) -> None:
src/gui/workers/data_fetch_worker.py-647-        """Worker hiba kezel√©se."""
src/gui/workers/data_fetch_worker.py:648:        print(f"‚ùå DEBUG: Worker error: {error_message}")
src/gui/workers/data_fetch_worker.py:649:        self.error_occurred.emit(error_message)
src/gui/workers/data_fetch_worker.py-650-    
--
src/gui/workers/data_fetch_worker.py-695-    
src/gui/workers/data_fetch_worker.py:696:    def _on_provider_validation_failed(self, provider: str, error_message: str) -> None:
src/gui/workers/data_fetch_worker.py-697-        """Provider valid√°l√°si hiba kezel√©se."""
src/gui/workers/data_fetch_worker.py:698:        print(f"‚ùå DEBUG: Provider validation failed: {provider} - {error_message}")
src/gui/workers/data_fetch_worker.py-699-        
--
src/gui/workers/data_fetch_worker.py-703-            "last_attempt": datetime.now(),
src/gui/workers/data_fetch_worker.py:704:            "error": error_message
src/gui/workers/data_fetch_worker.py-705-        }
src/gui/workers/data_fetch_worker.py-706-        
src/gui/workers/data_fetch_worker.py:707:        self.provider_validation_failed.emit(provider, error_message)
src/gui/workers/data_fetch_worker.py-708-    
--
src/gui/workers/data_fetch_worker.py-838-        return True
src/gui/workers/data_fetch_worker.py:839:    except ValueError:
src/gui/workers/data_fetch_worker.py-840-        return False
--
src/gui/workers/data_fetch_worker.py-848-        return (end - start).days
src/gui/workers/data_fetch_worker.py:849:    except ValueError:
src/gui/workers/data_fetch_worker.py-850-        return 0
--
src/gui/workers/data_fetch_worker.py-852-
src/gui/workers/data_fetch_worker.py:853:def format_api_error(status_code: int, response_text: str) -> str:
src/gui/workers/data_fetch_worker.py-854-    """API hiba form√°z√°sa user-friendly m√≥don."""
src/gui/workers/data_fetch_worker.py:855:    error_messages = {
src/gui/workers/data_fetch_worker.py-856-        400: "Hib√°s k√©r√©s - ellen≈ërizze a param√©tereket",
--
src/gui/workers/data_fetch_worker.py-865-    
src/gui/workers/data_fetch_worker.py:866:    user_message = error_messages.get(status_code, f"HTTP {status_code} hiba")
src/gui/workers/data_fetch_worker.py-867-    
--
src/gui/universal_location_selector.py-393-                
src/gui/universal_location_selector.py:394:        except Exception as e:
src/gui/universal_location_selector.py:395:            logger.error(f"Keres√©si hiba: {e}")
src/gui/universal_location_selector.py-396-            self.status_label.setText("‚ùå Keres√©si hiba t√∂rt√©nt")
--
src/gui/universal_location_selector.py-450-                
src/gui/universal_location_selector.py:451:            except Exception as e:
src/gui/universal_location_selector.py-452-                logger.warning(f"Eredm√©ny feldolgoz√°si hiba: {e}")
--
src/gui/universal_location_selector.py-502-                
src/gui/universal_location_selector.py:503:        except Exception as e:
src/gui/universal_location_selector.py:504:            logger.error(f"Preview hiba: {e}")
src/gui/universal_location_selector.py-505-    
--
src/gui/universal_location_selector.py-543-            
src/gui/universal_location_selector.py:544:        except Exception as e:
src/gui/universal_location_selector.py:545:            logger.error(f"Meger≈ës√≠t√©si hiba: {e}")
src/gui/universal_location_selector.py-546-    
--
src/gui/map_view.py-45-    - export_completed(file_path): Export befejezve
src/gui/map_view.py:46:    - error_occurred(message): Hiba t√∂rt√©nt
src/gui/map_view.py-47-    - folium_ready(): Folium t√©rk√©p bet√∂ltve
--
src/gui/map_view.py-54-    export_completed = Signal(str)           # file_path
src/gui/map_view.py:55:    error_occurred = Signal(str)             # error_message
src/gui/map_view.py-56-    data_loading_completed = Signal()        # adatok bet√∂ltve
--
src/gui/map_view.py-101-            self.map_tab.export_completed.connect(self.export_completed.emit)
src/gui/map_view.py:102:            self.map_tab.error_occurred.connect(self.error_occurred.emit)
src/gui/map_view.py-103-            self.map_tab.data_loading_completed.connect(self.data_loading_completed.emit)
--
src/gui/map_view.py-366-                "map_tab_available": False,
src/gui/map_view.py:367:                "error": "HungarianMapTab not initialized"
src/gui/map_view.py-368-            }
--
src/gui/chart_container.py-213-                    chart._redraw_with_new_theme()
src/gui/chart_container.py:214:                except Exception as e:
src/gui/chart_container.py:215:                    print(f"‚ö†Ô∏è DEBUG: Chart theme update error for {chart.__class__.__name__}: {e}")
src/gui/chart_container.py-216-        
--
src/gui/chart_container.py-250-            
src/gui/chart_container.py:251:        except Exception as e:
src/gui/chart_container.py-252-            print(f"‚ùå DEBUG: Grid toggle hiba: {e}")
--
src/gui/chart_container.py-298-            
src/gui/chart_container.py:299:        except Exception as e:
src/gui/chart_container.py-300-            print(f"‚ùå DEBUG: Legend toggle hiba: {e}")
--
src/gui/chart_container.py-340-            
src/gui/chart_container.py:341:        except Exception as e:
src/gui/chart_container.py-342-            print(f"‚ùå DEBUG: ChartsContainer friss√≠t√©si hiba: {e}")
--
src/gui/trend_analytics_tab.py-9-- ‚úÖ MULTI-CHART LAYOUT: F≈ëchart + mini chartok grid-ben
src/gui/trend_analytics_tab.py:10:- ‚úÖ PROFESSIONAL ERROR HANDLING: Structured logging + graceful degradation
src/gui/trend_analytics_tab.py-11-- ‚úÖ TYPE HINTS: Minden f√ºggv√©ny explicit t√≠pusokkal
--
src/gui/trend_analytics_tab.py-103-    data_received = Signal(dict)    # Processed trend data
src/gui/trend_analytics_tab.py:104:    error_occurred = Signal(str)    # Error message
src/gui/trend_analytics_tab.py-105-    
--
src/gui/trend_analytics_tab.py-164-                
src/gui/trend_analytics_tab.py:165:        except Exception as e:
src/gui/trend_analytics_tab.py:166:            logger.error(f"‚ùå Koordin√°ta lek√©rdez√©si hiba: {e}")
src/gui/trend_analytics_tab.py:167:            logger.exception("Koordin√°ta keres√©s stacktrace:")
src/gui/trend_analytics_tab.py-168-            return None
--
src/gui/trend_analytics_tab.py-185-            if not coordinates:
src/gui/trend_analytics_tab.py:186:                self.error_occurred.emit(f"Nem tal√°lhat√≥ koordin√°ta: {settlement_name}")
src/gui/trend_analytics_tab.py-187-                return
--
src/gui/trend_analytics_tab.py-242-                            
src/gui/trend_analytics_tab.py:243:                    except Exception as batch_error:
src/gui/trend_analytics_tab.py:244:                        logger.error(f"‚ùå Batch {batch_count + 1} hiba: {batch_error}")
src/gui/trend_analytics_tab.py-245-                        # Folytatjuk a k√∂vetkez≈ë batch-csel
--
src/gui/trend_analytics_tab.py-257-                
src/gui/trend_analytics_tab.py:258:            except Exception as api_error:
src/gui/trend_analytics_tab.py:259:                logger.error(f"‚ùå Multi-year API hiba: {api_error}")
src/gui/trend_analytics_tab.py:260:                self.error_occurred.emit(f"API hiba: {str(api_error)}")
src/gui/trend_analytics_tab.py-261-                return
--
src/gui/trend_analytics_tab.py-264-            if not weather_data:
src/gui/trend_analytics_tab.py:265:                self.error_occurred.emit("Nincs el√©rhet≈ë adat a kiv√°lasztott id≈ëszakra")
src/gui/trend_analytics_tab.py-266-                return
--
src/gui/trend_analytics_tab.py-270-            if not api_field:
src/gui/trend_analytics_tab.py:271:                self.error_occurred.emit(f"Ismeretlen param√©ter: {parameter}")
src/gui/trend_analytics_tab.py-272-                return
--
src/gui/trend_analytics_tab.py-287-            else:
src/gui/trend_analytics_tab.py:288:                self.error_occurred.emit("Trend sz√°m√≠t√°si hiba")
src/gui/trend_analytics_tab.py-289-            
--
src/gui/trend_analytics_tab.py-291-            
src/gui/trend_analytics_tab.py:292:        except Exception as e:
src/gui/trend_analytics_tab.py:293:            logger.error(f"‚ùå KRITIKUS HIBA trend lek√©rdez√©sn√©l: {e}")
src/gui/trend_analytics_tab.py:294:            self.error_occurred.emit(f"Kritikus hiba: {str(e)}")
src/gui/trend_analytics_tab.py-295-    
--
src/gui/trend_analytics_tab.py-321-            if len(df_data) == 0:
src/gui/trend_analytics_tab.py:322:                logger.error(f"‚ùå Nincs √©rv√©nyes adat a {api_field} mez≈ëh√∂z")
src/gui/trend_analytics_tab.py-323-                return None
--
src/gui/trend_analytics_tab.py-336-            if valid_count < 30:  # Minimum 30 nap sz√ºks√©ges
src/gui/trend_analytics_tab.py:337:                logger.error(f"‚ùå T√∫l kev√©s adat trend sz√°m√≠t√°shoz: {valid_count}")
src/gui/trend_analytics_tab.py-338-                return None
--
src/gui/trend_analytics_tab.py-352-            if len(monthly_df) < 6:  # Minimum 6 h√≥nap
src/gui/trend_analytics_tab.py:353:                logger.error(f"‚ùå T√∫l kev√©s h√≥nap trend sz√°m√≠t√°shoz: {len(monthly_df)}")
src/gui/trend_analytics_tab.py-354-                return None
--
src/gui/trend_analytics_tab.py-373-                slope, intercept, r_value, p_value, std_err = stats.linregress(X.flatten(), y)
src/gui/trend_analytics_tab.py:374:            except ValueError as ve:
src/gui/trend_analytics_tab.py:375:                logger.error(f"‚ùå stats.linregress hiba: {ve}")
src/gui/trend_analytics_tab.py-376-                # Fallback √©rt√©kek
--
src/gui/trend_analytics_tab.py-387-                
src/gui/trend_analytics_tab.py:388:                # Standard error of prediction
src/gui/trend_analytics_tab.py-389-                y_err = np.sqrt(np.sum((y - y_pred) ** 2) / (n - 2))
--
src/gui/trend_analytics_tab.py-394-                ci_lower = y_pred - conf_interval
src/gui/trend_analytics_tab.py:395:            except Exception as ci_error:
src/gui/trend_analytics_tab.py:396:                logger.error(f"‚ùå Confidence interval sz√°m√≠t√°si hiba: {ci_error}")
src/gui/trend_analytics_tab.py-397-                # Fallback: egyszer≈± konfidencia s√°v
--
src/gui/trend_analytics_tab.py-421-                }
src/gui/trend_analytics_tab.py:422:            except Exception as chart_error:
src/gui/trend_analytics_tab.py:423:                logger.error(f"‚ùå Chart data k√©sz√≠t√©si hiba: {chart_error}")
src/gui/trend_analytics_tab.py-424-                # Fallback: basic chart data
--
src/gui/trend_analytics_tab.py-450-                'intercept': float(intercept),
src/gui/trend_analytics_tab.py:451:                'std_error': float(std_err),
src/gui/trend_analytics_tab.py-452-                
--
src/gui/trend_analytics_tab.py-481-            
src/gui/trend_analytics_tab.py:482:        except Exception as e:
src/gui/trend_analytics_tab.py:483:            logger.error(f"‚ùå Trend sz√°m√≠t√°si hiba: {e}")
src/gui/trend_analytics_tab.py:484:            logger.exception("Full stacktrace:")
src/gui/trend_analytics_tab.py-485-            return None
--
src/gui/trend_analytics_tab.py-824-            
src/gui/trend_analytics_tab.py:825:        except Exception as e:
src/gui/trend_analytics_tab.py:826:            logger.error(f"‚ùå Plotly chart update hiba: {e}")
src/gui/trend_analytics_tab.py:827:            logger.exception("Plotly chart error stacktrace:")
src/gui/trend_analytics_tab.py:828:            self.show_error_chart(str(e))
src/gui/trend_analytics_tab.py-829-    
src/gui/trend_analytics_tab.py:830:    def show_error_chart(self, error_message: str) -> None:
src/gui/trend_analytics_tab.py-831-        """Hiba chart megjelen√≠t√©se"""
--
src/gui/trend_analytics_tab.py-835-            x=0.5, y=0.5,
src/gui/trend_analytics_tab.py:836:            text=f"‚ùå Hiba t√∂rt√©nt:<br>{error_message}",
src/gui/trend_analytics_tab.py-837-            xref="paper", yref="paper",
--
src/gui/trend_analytics_tab.py-1002-            
src/gui/trend_analytics_tab.py:1003:        except Exception as e:
src/gui/trend_analytics_tab.py:1004:            logger.error(f"‚ùå Dashboard stats update hiba: {e}")
src/gui/trend_analytics_tab.py:1005:            logger.exception("Dashboard stats error stacktrace:")
src/gui/trend_analytics_tab.py:1006:            self.show_error_cards(str(e))
src/gui/trend_analytics_tab.py-1007-    
--
src/gui/trend_analytics_tab.py-1025-    
src/gui/trend_analytics_tab.py:1026:    def show_error_cards(self, error_msg: str) -> None:
src/gui/trend_analytics_tab.py-1027-        """
--
src/gui/trend_analytics_tab.py-1030-        Args:
src/gui/trend_analytics_tab.py:1031:            error_msg: Hiba √ºzenet
src/gui/trend_analytics_tab.py-1032-        """
src/gui/trend_analytics_tab.py:1033:        error_cards_data = [
src/gui/trend_analytics_tab.py-1034-            ("üéØ Trend", "Hiba", "sz√°m√≠t√°si hiba", "#ef4444"),
--
src/gui/trend_analytics_tab.py-1039-        
src/gui/trend_analytics_tab.py:1040:        for card_key, value, subtitle, color in error_cards_data:
src/gui/trend_analytics_tab.py-1041-            if card_key in self.stats_cards:
--
src/gui/trend_analytics_tab.py-1057-    data_received = Signal(dict)
src/gui/trend_analytics_tab.py:1058:    error_occurred = Signal(str)
src/gui/trend_analytics_tab.py-1059-    finished = Signal()
--
src/gui/trend_analytics_tab.py-1070-        self.processor.data_received.connect(self.data_received.emit)
src/gui/trend_analytics_tab.py:1071:        self.processor.error_occurred.connect(self.error_occurred.emit)
src/gui/trend_analytics_tab.py-1072-    
--
src/gui/trend_analytics_tab.py-1081-            
src/gui/trend_analytics_tab.py:1082:        except Exception as e:
src/gui/trend_analytics_tab.py:1083:            logger.error(f"‚ùå Worker thread hiba: {e}")
src/gui/trend_analytics_tab.py:1084:            self.error_occurred.emit(f"H√°tt√©rsz√°l hiba: {str(e)}")
src/gui/trend_analytics_tab.py-1085-        finally:
--
src/gui/trend_analytics_tab.py-1099-    - ‚úÖ QSPLITTER MEGTART√ÅSA: Felhaszn√°l√≥ √°ltal √°ll√≠that√≥ layout
src/gui/trend_analytics_tab.py:1100:    - ‚úÖ PROFESSIONAL ERROR HANDLING: Structured logging
src/gui/trend_analytics_tab.py-1101-    - ‚úÖ TYPE HINTS: Teljes t√≠pus annot√°ci√≥
--
src/gui/trend_analytics_tab.py-1126-    analysis_completed = Signal(dict)
src/gui/trend_analytics_tab.py:1127:    error_occurred = Signal(str)
src/gui/trend_analytics_tab.py-1128-    location_selected = Signal(str, float, float)  # name, lat, lon
--
src/gui/trend_analytics_tab.py-1441-            if not location:
src/gui/trend_analytics_tab.py:1442:                self.error_occurred.emit("K√©rlek v√°lassz v√°rost!")
src/gui/trend_analytics_tab.py-1443-                return
--
src/gui/trend_analytics_tab.py-1445-            if len(location) < 2:
src/gui/trend_analytics_tab.py:1446:                self.error_occurred.emit("Legal√°bb 2 karakteres v√°ros n√©v sz√ºks√©ges!")
src/gui/trend_analytics_tab.py-1447-                return
--
src/gui/trend_analytics_tab.py-1465-            self.current_worker.data_received.connect(self.on_analysis_completed)
src/gui/trend_analytics_tab.py:1466:            self.current_worker.error_occurred.connect(self.on_analysis_error)
src/gui/trend_analytics_tab.py-1467-            self.current_worker.finished.connect(self.on_worker_finished)
--
src/gui/trend_analytics_tab.py-1471-            
src/gui/trend_analytics_tab.py:1472:        except Exception as e:
src/gui/trend_analytics_tab.py:1473:            logger.error(f"‚ùå Enhanced trend analysis start hiba: {e}")
src/gui/trend_analytics_tab.py:1474:            self.on_analysis_error(f"Elemz√©s ind√≠t√°si hiba: {str(e)}")
src/gui/trend_analytics_tab.py-1475-    
--
src/gui/trend_analytics_tab.py-1492-            
src/gui/trend_analytics_tab.py:1493:        except Exception as e:
src/gui/trend_analytics_tab.py:1494:            logger.error(f"‚ùå Enhanced analysis completion handling hiba: {e}")
src/gui/trend_analytics_tab.py:1495:            self.on_analysis_error(f"Eredm√©ny feldolgoz√°si hiba: {str(e)}")
src/gui/trend_analytics_tab.py-1496-    
src/gui/trend_analytics_tab.py:1497:    def on_analysis_error(self, error_message: str) -> None:
src/gui/trend_analytics_tab.py-1498-        """‚ùå ENHANCED TREND ELEMZ√âS HIBA KEZEL√âSE"""
src/gui/trend_analytics_tab.py:1499:        logger.error(f"‚ùå ENHANCED TREND ANALYSIS ERROR: {error_message}")
src/gui/trend_analytics_tab.py-1500-        
src/gui/trend_analytics_tab.py:1501:        # Error display in Plotly chart
src/gui/trend_analytics_tab.py:1502:        self.chart.show_error_chart(error_message)
src/gui/trend_analytics_tab.py-1503-        
src/gui/trend_analytics_tab.py:1504:        # Error display in KPI cards
src/gui/trend_analytics_tab.py:1505:        self.statistics_panel.show_error_cards(error_message)
src/gui/trend_analytics_tab.py-1506-        
src/gui/trend_analytics_tab.py-1507-        # Signal emission
src/gui/trend_analytics_tab.py:1508:        self.error_occurred.emit(error_message)
src/gui/trend_analytics_tab.py-1509-    
--
src/gui/hungarian_location_selector.py-33-    GEOPANDAS_AVAILABLE = True
src/gui/hungarian_location_selector.py:34:except ImportError:
src/gui/hungarian_location_selector.py-35-    GEOPANDAS_AVAILABLE = False
--
src/gui/hungarian_location_selector.py-81-    postal_codes_loaded = Signal(object)    # GeoDataFrame  
src/gui/hungarian_location_selector.py:82:    error_occurred = Signal(str)            # error message
src/gui/hungarian_location_selector.py-83-    completed = Signal()                    # √∂sszes adat bet√∂ltve
--
src/gui/hungarian_location_selector.py-96-            if not GEOPANDAS_AVAILABLE:
src/gui/hungarian_location_selector.py:97:                self.error_occurred.emit("GeoPandas nincs telep√≠tve!")
src/gui/hungarian_location_selector.py-98-                return
--
src/gui/hungarian_location_selector.py-108-            else:
src/gui/hungarian_location_selector.py:109:                self.error_occurred.emit(f"Counties f√°jl nem tal√°lhat√≥: {counties_file}")
src/gui/hungarian_location_selector.py-110-                return
--
src/gui/hungarian_location_selector.py-127-            
src/gui/hungarian_location_selector.py:128:        except Exception as e:
src/gui/hungarian_location_selector.py:129:            self.error_occurred.emit(f"GeoJSON bet√∂lt√©si hiba: {e}")
src/gui/hungarian_location_selector.py-130-
--
src/gui/hungarian_location_selector.py-435-        self.data_worker.postal_codes_loaded.connect(self._on_postal_codes_loaded)
src/gui/hungarian_location_selector.py:436:        self.data_worker.error_occurred.connect(self._on_data_error)
src/gui/hungarian_location_selector.py-437-        self.data_worker.completed.connect(self._on_data_loading_completed)
--
src/gui/hungarian_location_selector.py-459-    
src/gui/hungarian_location_selector.py:460:    def _on_data_error(self, error_message: str):
src/gui/hungarian_location_selector.py-461-        """
--
src/gui/hungarian_location_selector.py-463-        """
src/gui/hungarian_location_selector.py:464:        self.progress_label.setText(f"‚ùå {error_message}")
src/gui/hungarian_location_selector.py-465-        self.progress_bar.setValue(0)
--
src/gui/hungarian_map_tab.py-19-- Debug logging minden Analytics ‚Üí Map sync esem√©nyhez
src/gui/hungarian_map_tab.py:20:- Error handling √©s fallback mechanizmusok
src/gui/hungarian_map_tab.py-21-- Real-time weather overlay friss√≠t√©s
--
src/gui/hungarian_map_tab.py-98-    - export_completed(file_path): Export befejezve
src/gui/hungarian_map_tab.py:99:    - error_occurred(message): Hiba t√∂rt√©nt
src/gui/hungarian_map_tab.py-100-    - folium_ready(): Folium t√©rk√©p bet√∂ltve
--
src/gui/hungarian_map_tab.py-109-    export_completed = Signal(str)           # Export f√°jl √∫tvonal
src/gui/hungarian_map_tab.py:110:    error_occurred = Signal(str)             # Hiba √ºzenet
src/gui/hungarian_map_tab.py-111-    data_loading_started = Signal()          # Adatok bet√∂lt√©se kezd≈ëd√∂tt
--
src/gui/hungarian_map_tab.py-181-            
src/gui/hungarian_map_tab.py:182:        except Exception as e:
src/gui/hungarian_map_tab.py:183:            print(f"‚ùå DEBUG: Weather components initialization error: {e}")
src/gui/hungarian_map_tab.py-184-            self.weather_bridge = None
--
src/gui/hungarian_map_tab.py-425-            # Hiba esem√©nyek ‚Üí forward signal
src/gui/hungarian_map_tab.py:426:            self.map_visualizer.error_occurred.connect(self._on_error_occurred)
src/gui/hungarian_map_tab.py:427:            print("‚úÖ DEBUG: FoliumMapVisualizer.error_occurred ‚Üí MapTab._on_error_occurred CONNECTED")
src/gui/hungarian_map_tab.py-428-        
--
src/gui/hungarian_map_tab.py-656-            
src/gui/hungarian_map_tab.py:657:        except Exception as e:
src/gui/hungarian_map_tab.py:658:            error_msg = f"Megye Folium t√©rk√©pes megjelen√≠t√©si hiba: {e}"
src/gui/hungarian_map_tab.py:659:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py:660:            self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-661-    
--
src/gui/hungarian_map_tab.py-781-            
src/gui/hungarian_map_tab.py:782:        except Exception as e:
src/gui/hungarian_map_tab.py:783:            error_msg = f"Analysis parameters sync hiba: {e}"
src/gui/hungarian_map_tab.py:784:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-785-            self.analytics_sync_label.setText("‚ùå Analysis Sync")
src/gui/hungarian_map_tab.py-786-            self.analytics_sync_label.setStyleSheet("color: #E74C3C;")
src/gui/hungarian_map_tab.py:787:            self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-788-            
--
src/gui/hungarian_map_tab.py-842-            
src/gui/hungarian_map_tab.py:843:        except Exception as e:
src/gui/hungarian_map_tab.py:844:            error_msg = f"Weather parameters sync hiba: {e}"
src/gui/hungarian_map_tab.py:845:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-846-            self.analytics_sync_label.setText("‚ùå Weather Sync")
src/gui/hungarian_map_tab.py-847-            self.analytics_sync_label.setStyleSheet("color: #E74C3C;")
src/gui/hungarian_map_tab.py:848:            self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-849-            
--
src/gui/hungarian_map_tab.py-900-            
src/gui/hungarian_map_tab.py:901:        except Exception as e:
src/gui/hungarian_map_tab.py:902:            error_msg = f"Date range sync hiba: {e}"
src/gui/hungarian_map_tab.py:903:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-904-            self.analytics_sync_label.setText("‚ùå Date Sync")
src/gui/hungarian_map_tab.py-905-            self.analytics_sync_label.setStyleSheet("color: #E74C3C;")
src/gui/hungarian_map_tab.py:906:            self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-907-            
--
src/gui/hungarian_map_tab.py-962-            
src/gui/hungarian_map_tab.py:963:        except Exception as e:
src/gui/hungarian_map_tab.py:964:            error_msg = f"Parameter bundle sync hiba: {e}"
src/gui/hungarian_map_tab.py:965:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-966-            self.analytics_sync_label.setText("‚ùå Full Sync")
src/gui/hungarian_map_tab.py-967-            self.analytics_sync_label.setStyleSheet("color: #E74C3C;")
src/gui/hungarian_map_tab.py:968:            self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-969-            
--
src/gui/hungarian_map_tab.py-1010-                
src/gui/hungarian_map_tab.py:1011:        except Exception as e:
src/gui/hungarian_map_tab.py:1012:            print(f"‚ùå DEBUG: Single location map update error: {e}")
src/gui/hungarian_map_tab.py-1013-    
--
src/gui/hungarian_map_tab.py-1042-                
src/gui/hungarian_map_tab.py:1043:        except Exception as e:
src/gui/hungarian_map_tab.py:1044:            print(f"‚ùå DEBUG: Region map update error: {e}")
src/gui/hungarian_map_tab.py-1045-    
--
src/gui/hungarian_map_tab.py-1071-                
src/gui/hungarian_map_tab.py:1072:        except Exception as e:
src/gui/hungarian_map_tab.py:1073:            print(f"‚ùå DEBUG: County map update error: {e}")
src/gui/hungarian_map_tab.py-1074-    
--
src/gui/hungarian_map_tab.py-1110-            
src/gui/hungarian_map_tab.py:1111:        except Exception as e:
src/gui/hungarian_map_tab.py:1112:            print(f"‚ùå DEBUG: Weather overlay refresh error: {e}")
src/gui/hungarian_map_tab.py-1113-    
--
src/gui/hungarian_map_tab.py-1133-                    
src/gui/hungarian_map_tab.py:1134:            except ValueError as e:
src/gui/hungarian_map_tab.py:1135:                print(f"‚ö†Ô∏è DEBUG: Date parsing error: {e}")
src/gui/hungarian_map_tab.py-1136-                return
--
src/gui/hungarian_map_tab.py-1149-            
src/gui/hungarian_map_tab.py:1150:        except Exception as e:
src/gui/hungarian_map_tab.py:1151:            print(f"‚ùå DEBUG: Temporal data refresh error: {e}")
src/gui/hungarian_map_tab.py-1152-    
--
src/gui/hungarian_map_tab.py-1179-            
src/gui/hungarian_map_tab.py:1180:        except Exception as e:
src/gui/hungarian_map_tab.py:1181:            print(f"‚ùå DEBUG: Weather overlay date refresh error: {e}")
src/gui/hungarian_map_tab.py-1182-    
--
src/gui/hungarian_map_tab.py-1225-            
src/gui/hungarian_map_tab.py:1226:        except Exception as e:
src/gui/hungarian_map_tab.py:1227:            print(f"‚ùå DEBUG: Full map refresh error: {e}")
src/gui/hungarian_map_tab.py-1228-            self.loading_status.setText(f"‚ùå Full map refresh hiba: {e}")
--
src/gui/hungarian_map_tab.py-1356-    
src/gui/hungarian_map_tab.py:1357:    def _on_error_occurred(self, error_message: str):
src/gui/hungarian_map_tab.py-1358-        """
--
src/gui/hungarian_map_tab.py-1361-        Args:
src/gui/hungarian_map_tab.py:1362:            error_message: Hiba √ºzenet
src/gui/hungarian_map_tab.py-1363-        """
src/gui/hungarian_map_tab.py:1364:        print(f"‚ùå DEBUG: Folium error occurred: {error_message}")
src/gui/hungarian_map_tab.py-1365-        
src/gui/hungarian_map_tab.py-1366-        # Status friss√≠t√©se
src/gui/hungarian_map_tab.py:1367:        self.loading_status.setText(f"‚ùå Folium hiba: {error_message}")
src/gui/hungarian_map_tab.py-1368-        
src/gui/hungarian_map_tab.py-1369-        # Forward signal
src/gui/hungarian_map_tab.py:1370:        self.error_occurred.emit(error_message)
src/gui/hungarian_map_tab.py-1371-    
--
src/gui/hungarian_map_tab.py-1433-        else:
src/gui/hungarian_map_tab.py:1434:            error_msg = "Folium t√©rk√©p nem el√©rhet≈ë az export√°l√°shoz"
src/gui/hungarian_map_tab.py:1435:            self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-1436-    
--
src/gui/hungarian_map_tab.py-1472-            if not self.weather_bridge:
src/gui/hungarian_map_tab.py:1473:                error_msg = "WeatherDataBridge nem el√©rhet≈ë"
src/gui/hungarian_map_tab.py:1474:                print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py:1475:                self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-1476-                return
--
src/gui/hungarian_map_tab.py-1502-            if not weather_overlay or not folium_format:
src/gui/hungarian_map_tab.py:1503:                error_msg = "Weather overlay konverzi√≥ sikertelen"
src/gui/hungarian_map_tab.py:1504:                print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py:1505:                self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-1506-                return
--
src/gui/hungarian_map_tab.py-1536-            
src/gui/hungarian_map_tab.py:1537:        except Exception as e:
src/gui/hungarian_map_tab.py:1538:            error_msg = f"Weather overlay gener√°l√°si hiba: {e}"
src/gui/hungarian_map_tab.py:1539:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-1540-            import traceback
src/gui/hungarian_map_tab.py-1541-            traceback.print_exc()
src/gui/hungarian_map_tab.py:1542:            self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-1543-    
--
src/gui/hungarian_map_tab.py-1557-            if not self.multi_city_engine:
src/gui/hungarian_map_tab.py:1558:                error_msg = "MultiCityEngine nem el√©rhet≈ë"
src/gui/hungarian_map_tab.py:1559:                print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py:1560:                self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-1561-                return
--
src/gui/hungarian_map_tab.py-1596-            else:
src/gui/hungarian_map_tab.py:1597:                error_msg = f"Nincs weather adat: {question_type}"
src/gui/hungarian_map_tab.py:1598:                print(f"‚ö†Ô∏è DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py:1599:                self.loading_status.setText(f"‚ö†Ô∏è {error_msg}")
src/gui/hungarian_map_tab.py-1600-            
src/gui/hungarian_map_tab.py:1601:        except Exception as e:
src/gui/hungarian_map_tab.py:1602:            error_msg = f"Weather adatok bet√∂lt√©si hiba: {e}"
src/gui/hungarian_map_tab.py:1603:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py:1604:            self._on_error_occurred(error_msg)
src/gui/hungarian_map_tab.py-1605-    
--
src/gui/hungarian_map_tab.py-1748-            
src/gui/hungarian_map_tab.py:1749:        except Exception as e:
src/gui/hungarian_map_tab.py:1750:            print(f"‚ùå DEBUG: Focus on county error: {e}")
src/gui/hungarian_map_tab.py-1751-        
--
src/gui/hungarian_map_tab.py-2067-    
src/gui/hungarian_map_tab.py:2068:    def on_error_occurred(message):
src/gui/hungarian_map_tab.py:2069:        print(f"‚ùå DEMO: Error occurred: {message}")
src/gui/hungarian_map_tab.py-2070-    
--
src/gui/hungarian_map_tab.py-2193-    map_tab.export_completed.connect(on_export_completed)
src/gui/hungarian_map_tab.py:2194:    map_tab.error_occurred.connect(on_error_occurred)
src/gui/hungarian_map_tab.py-2195-    map_tab.folium_ready.connect(on_folium_ready)
--
src/gui/hungarian_map_tab.py-2237-    print("   üîç Enhanced debug logging minden l√©p√©sn√©l")
src/gui/hungarian_map_tab.py:2238:    print("   üõ°Ô∏è Error handling √©s fallback mechanizmusok")
src/gui/hungarian_map_tab.py-2239-    print("   üß™ TESZT GOMBOK:")
--
src/gui/hungarian_map_tab.py-2250-    print("      üí® Windspeed metric 'Buta Tolm√°cs' probl√©ma MEGOLDVA!")
src/gui/hungarian_map_tab.py:2251:    print("      üîÑ _reset_map_view() met√≥dus HOZZ√ÅADVA - AttributeError JAV√çTVA!")
src/gui/hungarian_map_tab.py-2252-    
--
src/gui/color_palette.py-9-‚úÖ Automatikus sz√≠nvari√°ns gener√°l√°s egyetlen base sz√≠nb≈ël
src/gui/color_palette.py:10:‚úÖ Semantic color mapping (primary, success, warning, error, info)
src/gui/color_palette.py-11-‚úÖ HSL/HSV color space manipul√°ci√≥
--
src/gui/color_palette.py-361-                "warning": "#f59e0b",    # Amber
src/gui/color_palette.py:362:                "error": "#dc2626",      # Red
src/gui/color_palette.py-363-                "info": "#6b7280",       # Gray
--
src/gui/color_palette.py-370-                "warning": "#f57c00",    # Material Orange
src/gui/color_palette.py:371:                "error": "#d32f2f",      # Material Red
src/gui/color_palette.py-372-                "info": "#1976d2",       # Material Blue
--
src/gui/color_palette.py-379-                "warning": "#ffc107",    # Bootstrap Yellow
src/gui/color_palette.py:380:                "error": "#dc3545",      # Bootstrap Red
src/gui/color_palette.py-381-                "info": "#0dcaf0",       # Bootstrap Cyan
--
src/gui/color_palette.py-388-                "warning": "#eab308",    # Yellow (sun)
src/gui/color_palette.py:389:                "error": "#ef4444",      # Red (alert)
src/gui/color_palette.py-390-                "info": "#6366f1",       # Indigo
--
src/gui/color_palette.py-398-                "warning": "#f59e0b",    # Amber/Orange
src/gui/color_palette.py:399:                "error": "#dc2626",      # Red (darker than primary)
src/gui/color_palette.py-400-                "info": "#6b7280",       # Gray
--
src/gui/color_palette.py-778-            
src/gui/color_palette.py:779:        except Exception as e:
src/gui/color_palette.py-780-            print(f"‚ùå DEBUG: Palette import failed: {e}")
--
src/gui/results_panel/quick_overview_tab.py-405-            
src/gui/results_panel/quick_overview_tab.py:406:        except Exception as e:
src/gui/results_panel/quick_overview_tab.py:407:            logger.error(f"QuickOverviewTab adatfriss√≠t√©si hiba: {e}")
src/gui/results_panel/quick_overview_tab.py-408-            self._clear_stats()
--
src/gui/results_panel/quick_overview_tab.py-478-            
src/gui/results_panel/quick_overview_tab.py:479:        except Exception as e:
src/gui/results_panel/quick_overview_tab.py:480:            logger.error(f"H≈ëm√©rs√©klet statisztika hiba: {e}")
src/gui/results_panel/quick_overview_tab.py-481-            for key in ['avg_temp', 'max_temp', 'min_temp', 'temp_range']:
--
src/gui/results_panel/quick_overview_tab.py-521-            
src/gui/results_panel/quick_overview_tab.py:522:        except Exception as e:
src/gui/results_panel/quick_overview_tab.py:523:            logger.error(f"Csapad√©k statisztika hiba: {e}")
src/gui/results_panel/quick_overview_tab.py-524-            for key in ['total_precip', 'avg_precip', 'max_precip', 'rainy_days']:
--
src/gui/results_panel/quick_overview_tab.py-585-            
src/gui/results_panel/quick_overview_tab.py:586:        except Exception as e:
src/gui/results_panel/quick_overview_tab.py:587:            logger.error(f"Sz√©l statisztika hiba: {e}")
src/gui/results_panel/quick_overview_tab.py-588-            for key in ['avg_wind', 'max_wind', 'windy_days', 'wind_direction']:
--
src/gui/results_panel/quick_overview_tab.py-622-            
src/gui/results_panel/quick_overview_tab.py:623:        except Exception as e:
src/gui/results_panel/quick_overview_tab.py:624:            logger.error(f"Info labelek friss√≠t√©si hiba: {e}")
src/gui/results_panel/quick_overview_tab.py-625-            self.city_info_label.setText("üìç V√°ros: -")
--
src/gui/results_panel/quick_overview_tab.py-640-            
src/gui/results_panel/quick_overview_tab.py:641:        except Exception as e:
src/gui/results_panel/quick_overview_tab.py:642:            logger.error(f"Statisztik√°k t√∂rl√©si hiba: {e}")
--
src/gui/results_panel/results_panel.py-16-‚úÖ Type hints: Minden met√≥dus explicit t√≠pusokkal
src/gui/results_panel/results_panel.py:17:‚úÖ Error handling: Robusztus kiv√©telkezel√©s
src/gui/results_panel/results_panel.py-18-‚úÖ Logging: Struktur√°lt m≈±k√∂d√©s k√∂vet√©s
--
src/gui/results_panel/results_panel.py-52-    ‚úÖ Type hints: Minden met√≥dus explicit t√≠pusokkal
src/gui/results_panel/results_panel.py:53:    ‚úÖ Error handling: Robusztus kiv√©telkezel√©s
src/gui/results_panel/results_panel.py-54-    ‚úÖ Logging: Struktur√°lt m≈±k√∂d√©s k√∂vet√©s
--
src/gui/results_panel/results_panel.py-259-            
src/gui/results_panel/results_panel.py:260:        except Exception as e:
src/gui/results_panel/results_panel.py:261:            logger.error(f"ResultsPanel adatfriss√≠t√©si hiba: {e}")
src/gui/results_panel/results_panel.py-262-            self.clear_data()
--
src/gui/results_panel/results_panel.py-349-        else:
src/gui/results_panel/results_panel.py:350:            logger.error(f"ResultsPanel t√©ma alkalmaz√°s sikertelen: {theme_name}")
src/gui/results_panel/results_panel.py-351-    
--
src/gui/results_panel/detailed_charts_tab.py-61-        else:
src/gui/results_panel/detailed_charts_tab.py:62:            logger.error("ChartsContainer l√©trehoz√°sa SIKERTELEN!")
src/gui/results_panel/detailed_charts_tab.py-63-        
--
src/gui/results_panel/detailed_charts_tab.py-87-                
src/gui/results_panel/detailed_charts_tab.py:88:            except Exception as e:
src/gui/results_panel/detailed_charts_tab.py:89:                logger.error(f"HIBA a charts_container.update_charts() h√≠v√°sban: {e}")
src/gui/results_panel/detailed_charts_tab.py-90-        else:
src/gui/results_panel/detailed_charts_tab.py:91:            logger.error("charts_container is None! - Ez a probl√©ma oka!")
src/gui/results_panel/detailed_charts_tab.py-92-    
--
src/gui/results_panel/detailed_charts_tab.py-101-        else:
src/gui/results_panel/detailed_charts_tab.py:102:            logger.error("charts_container is None - nem lehet t√∂r√∂lni!")
src/gui/results_panel/detailed_charts_tab.py-103-    
--
src/gui/results_panel/detailed_charts_tab.py-112-        else:
src/gui/results_panel/detailed_charts_tab.py:113:            logger.error("charts_container is None - nem lehet t√©m√°t alkalmazni!")
--
src/gui/results_panel/utils.py-55-        'strong': 'warning',       # S√°rga - figyelem
src/gui/results_panel/utils.py:56:        'extreme': 'error',        # Piros - vesz√©lyes  
src/gui/results_panel/utils.py:57:        'hurricane': 'error'       # Piros - kritikus
src/gui/results_panel/utils.py-58-    }
--
src/gui/results_panel/utils.py-88-        Raises:
src/gui/results_panel/utils.py:89:            ValueError: Ha az adatok nem megfelel≈ë form√°tum√∫ak
src/gui/results_panel/utils.py-90-        """
--
src/gui/results_panel/utils.py-154-                # NINCS SZ√âL ADAT
src/gui/results_panel/utils.py:155:                logger.error("‚ùå Nincs sz√©l adat sem wind_gusts_max, sem windspeed_10m_max")
src/gui/results_panel/utils.py-156-                df_data['windspeed'] = [None] * max_length
--
src/gui/results_panel/utils.py-166-            
src/gui/results_panel/utils.py:167:        except Exception as e:
src/gui/results_panel/utils.py:168:            logger.error(f"‚ùå DataFrame extract hiba: {e}")
src/gui/results_panel/utils.py-169-            return pd.DataFrame()
--
src/gui/results_panel/utils.py-211-                    "valid": False,
src/gui/results_panel/utils.py:212:                    "error": "DataFrame √ºres",
src/gui/results_panel/utils.py-213-                    "rows": 0,
--
src/gui/results_panel/utils.py-243-            
src/gui/results_panel/utils.py:244:        except Exception as e:
src/gui/results_panel/utils.py:245:            logger.error(f"DataFrame validation hiba: {e}")
src/gui/results_panel/utils.py-246-            return {
src/gui/results_panel/utils.py-247-                "valid": False,
src/gui/results_panel/utils.py:248:                "error": str(e),
src/gui/results_panel/utils.py-249-                "rows": 0,
--
src/gui/results_panel/utils.py-300-            
src/gui/results_panel/utils.py:301:        except Exception as e:
src/gui/results_panel/utils.py:302:            logger.error(f"Wind gust categorization hiba: {e}")
src/gui/results_panel/utils.py-303-            return 'moderate'  # Safe fallback
--
src/gui/results_panel/utils.py-348-        
src/gui/results_panel/utils.py:349:        except Exception as e:
src/gui/results_panel/utils.py:350:            logger.error(f"Wind description generation hiba: {e}")
src/gui/results_panel/utils.py-351-            return f"üí® {wind_speed:.1f} km/h"
--
src/gui/results_panel/utils.py-416-        
src/gui/results_panel/utils.py:417:        except Exception as e:
src/gui/results_panel/utils.py:418:            logger.error(f"Wind risk level calculation hiba: {e}")
src/gui/results_panel/utils.py-419-            return {
--
src/gui/results_panel/utils.py-438-        if not wind_data:
src/gui/results_panel/utils.py:439:            return {"error": "Nincs sz√©l adat"}
src/gui/results_panel/utils.py-440-        
--
src/gui/results_panel/utils.py-445-            if not clean_data:
src/gui/results_panel/utils.py:446:                return {"error": "Nincs √©rv√©nyes sz√©l adat"}
src/gui/results_panel/utils.py-447-            
--
src/gui/results_panel/utils.py-502-            
src/gui/results_panel/utils.py:503:        except Exception as e:
src/gui/results_panel/utils.py:504:            logger.error(f"Wind series analysis hiba: {e}")
src/gui/results_panel/utils.py:505:            return {"error": f"Elemz√©si hiba: {str(e)}"}
src/gui/results_panel/utils.py-506-
--
src/gui/results_panel/extreme_events_tab.py-14-‚úÖ Type hints: Minden met√≥dus explicit t√≠pusokkal
src/gui/results_panel/extreme_events_tab.py:15:‚úÖ Error handling: Robusztus kiv√©telkezel√©s
src/gui/results_panel/extreme_events_tab.py-16-‚úÖ Logging: Struktur√°lt hibak√∂vet√©s
--
src/gui/results_panel/extreme_events_tab.py-51-    ‚úÖ Type hints: Minden met√≥dus explicit t√≠pusokkal
src/gui/results_panel/extreme_events_tab.py:52:    ‚úÖ Error handling: Robusztus kiv√©telkezel√©s
src/gui/results_panel/extreme_events_tab.py-53-    ‚úÖ Logging: Struktur√°lt hibak√∂vet√©s
--
src/gui/results_panel/extreme_events_tab.py-162-            text: Megjelen√≠tend≈ë sz√∂veg
src/gui/results_panel/extreme_events_tab.py:163:            status_type: St√°tusz t√≠pus (success, warning, error, disabled)
src/gui/results_panel/extreme_events_tab.py-164-        """
--
src/gui/results_panel/extreme_events_tab.py-172-            "warning": scheme.get_color("warning", "base") or "#f59e0b",
src/gui/results_panel/extreme_events_tab.py:173:            "error": scheme.get_color("error", "base") or "#dc2626",
src/gui/results_panel/extreme_events_tab.py-174-            "disabled": scheme.get_color("info", "light") or "#9ca3af"
--
src/gui/results_panel/extreme_events_tab.py-234-            
src/gui/results_panel/extreme_events_tab.py:235:        except Exception as e:
src/gui/results_panel/extreme_events_tab.py:236:            logger.error(f"ExtremeEventsTab adatfriss√≠t√©si hiba: {e}")
src/gui/results_panel/extreme_events_tab.py-237-            self._clear_extremes()
--
src/gui/results_panel/extreme_events_tab.py-253-            
src/gui/results_panel/extreme_events_tab.py:254:        except Exception as e:
src/gui/results_panel/extreme_events_tab.py:255:            logger.error(f"Anom√°lia detekt√°l√°si hiba: {e}")
src/gui/results_panel/extreme_events_tab.py-256-            self._clear_extremes()
--
src/gui/results_panel/extreme_events_tab.py-269-                        if avg_temp > AnomalyConstants.TEMP_HOT_THRESHOLD:
src/gui/results_panel/extreme_events_tab.py:270:                            self._set_anomaly_status_with_theme(self.temp_anomaly, "üî• H≈ëm√©rs√©klet: Szokatlanul meleg", "error")
src/gui/results_panel/extreme_events_tab.py-271-                        elif avg_temp < AnomalyConstants.TEMP_COLD_THRESHOLD:
--
src/gui/results_panel/extreme_events_tab.py-280-                self._set_anomaly_status_with_theme(self.temp_anomaly, "üå°Ô∏è H≈ëm√©rs√©klet: Nincs adat", "disabled")
src/gui/results_panel/extreme_events_tab.py:281:        except Exception as e:
src/gui/results_panel/extreme_events_tab.py:282:            logger.error(f"H≈ëm√©rs√©klet anom√°lia detekt√°l√°si hiba: {e}")
src/gui/results_panel/extreme_events_tab.py-283-            self._set_anomaly_status_with_theme(self.temp_anomaly, "üå°Ô∏è H≈ëm√©rs√©klet: Hiba", "disabled")
--
src/gui/results_panel/extreme_events_tab.py-297-                        elif total_precip < AnomalyConstants.PRECIP_LOW_THRESHOLD:
src/gui/results_panel/extreme_events_tab.py:298:                            self._set_anomaly_status_with_theme(self.precip_anomaly, "üèúÔ∏è Csapad√©k: Szokatlanul sz√°raz", "error")
src/gui/results_panel/extreme_events_tab.py-299-                        else:
--
src/gui/results_panel/extreme_events_tab.py-306-                self._set_anomaly_status_with_theme(self.precip_anomaly, "üåßÔ∏è Csapad√©k: Nincs adat", "disabled")
src/gui/results_panel/extreme_events_tab.py:307:        except Exception as e:
src/gui/results_panel/extreme_events_tab.py:308:            logger.error(f"Csapad√©k anom√°lia detekt√°l√°si hiba: {e}")
src/gui/results_panel/extreme_events_tab.py-309-            self._set_anomaly_status_with_theme(self.precip_anomaly, "üåßÔ∏è Csapad√©k: Hiba", "disabled")
--
src/gui/results_panel/extreme_events_tab.py-333-                            if category == 'hurricane':
src/gui/results_panel/extreme_events_tab.py:334:                                self._set_anomaly_status_with_theme(self.wind_anomaly, f"üö® Sz√©ll√∂k√©sek: {description}", "error")
src/gui/results_panel/extreme_events_tab.py-335-                            elif category == 'extreme':
src/gui/results_panel/extreme_events_tab.py:336:                                self._set_anomaly_status_with_theme(self.wind_anomaly, f"‚ö†Ô∏è Sz√©ll√∂k√©sek: {description}", "error")
src/gui/results_panel/extreme_events_tab.py-337-                            elif category == 'strong':
--
src/gui/results_panel/extreme_events_tab.py-345-                            if avg_wind > AnomalyConstants.WIND_HIGH_THRESHOLD:
src/gui/results_panel/extreme_events_tab.py:346:                                self._set_anomaly_status_with_theme(self.wind_anomaly, "üå™Ô∏è Sz√©l: Szokatlanul szeles", "error")
src/gui/results_panel/extreme_events_tab.py-347-                            else:
--
src/gui/results_panel/extreme_events_tab.py-354-                self._set_anomaly_status_with_theme(self.wind_anomaly, "üå™Ô∏è Sz√©ll√∂k√©sek: Nincs adat", "disabled")
src/gui/results_panel/extreme_events_tab.py:355:        except Exception as e:
src/gui/results_panel/extreme_events_tab.py:356:            logger.error(f"Sz√©ll√∂k√©s anom√°lia detekt√°l√°si hiba: {e}")
src/gui/results_panel/extreme_events_tab.py-357-            self._set_anomaly_status_with_theme(self.wind_anomaly, "üå™Ô∏è Sz√©ll√∂k√©sek: Hiba", "disabled")
--
src/gui/results_panel/extreme_events_tab.py-381-            
src/gui/results_panel/extreme_events_tab.py:382:        except Exception as e:
src/gui/results_panel/extreme_events_tab.py:383:            logger.error(f"Rekordok meghat√°roz√°si hiba: {e}")
src/gui/results_panel/extreme_events_tab.py-384-            if self.records_text:
--
src/gui/results_panel/extreme_events_tab.py-409-                return f"üå°Ô∏è H≈êM√âRS√âKLET REKORDOK: Nincs h≈ëm√©rs√©klet adat\n\n"
src/gui/results_panel/extreme_events_tab.py:410:        except Exception as e:
src/gui/results_panel/extreme_events_tab.py:411:            logger.error(f"H≈ëm√©rs√©klet rekordok hiba: {e}")
src/gui/results_panel/extreme_events_tab.py-412-            return f"üå°Ô∏è H≈êM√âRS√âKLET REKORDOK: Hiba a sz√°m√≠t√°s sor√°n\n\n"
--
src/gui/results_panel/extreme_events_tab.py-433-                return f"üåßÔ∏è CSAPAD√âK REKORDOK: Nincs csapad√©k adat\n\n"
src/gui/results_panel/extreme_events_tab.py:434:        except Exception as e:
src/gui/results_panel/extreme_events_tab.py:435:            logger.error(f"Csapad√©k rekordok hiba: {e}")
src/gui/results_panel/extreme_events_tab.py-436-            return f"üåßÔ∏è CSAPAD√âK REKORDOK: Hiba a sz√°m√≠t√°s sor√°n\n\n"
--
src/gui/results_panel/extreme_events_tab.py-482-                return f"üå™Ô∏è SZ√âLL√ñK√âS REKORDOK: Nincs sz√©l adat\n\n"
src/gui/results_panel/extreme_events_tab.py:483:        except Exception as e:
src/gui/results_panel/extreme_events_tab.py:484:            logger.error(f"Sz√©ll√∂k√©s rekordok hiba: {e}")
src/gui/results_panel/extreme_events_tab.py-485-            return f"üå™Ô∏è SZ√âLL√ñK√âS REKORDOK: Hiba a sz√°m√≠t√°s sor√°n\n\n"
--
src/gui/results_panel/__init__.py-49-    
src/gui/results_panel/__init__.py:50:except ImportError as e:
src/gui/results_panel/__init__.py:51:    logger.error(f"‚ùå Results panel import hiba: {e}")
src/gui/results_panel/__init__.py-52-    
--
src/gui/results_panel/__init__.py-63-            def __init__(self, *args, **kwargs):
src/gui/results_panel/__init__.py:64:                logger.error("QuickOverviewTab placeholder haszn√°latban - f√°jl hi√°nyzik!")
src/gui/results_panel/__init__.py-65-        
--
src/gui/results_panel/__init__.py-68-            def __init__(self, *args, **kwargs):
src/gui/results_panel/__init__.py:69:                logger.error("DetailedChartsTab placeholder haszn√°latban - f√°jl hi√°nyzik!")
src/gui/results_panel/__init__.py-70-        
--
src/gui/results_panel/__init__.py-73-            def __init__(self, *args, **kwargs):
src/gui/results_panel/__init__.py:74:                logger.error("DataTableTab placeholder haszn√°latban - f√°jl hi√°nyzik!")
src/gui/results_panel/__init__.py-75-        
--
src/gui/results_panel/__init__.py-78-            def __init__(self, *args, **kwargs):
src/gui/results_panel/__init__.py:79:                logger.error("ExtremeEventsTab placeholder haszn√°latban - f√°jl hi√°nyzik!")
src/gui/results_panel/__init__.py-80-        
--
src/gui/results_panel/__init__.py-89-            def extract_safely(*args, **kwargs):
src/gui/results_panel/__init__.py:90:                logger.error("DataFrameExtractor placeholder haszn√°latban!")
src/gui/results_panel/__init__.py-91-                return None
--
src/gui/results_panel/__init__.py-96-            def categorize_wind_gust(*args, **kwargs):
src/gui/results_panel/__init__.py:97:                logger.error("WindGustsAnalyzer placeholder haszn√°latban!")
src/gui/results_panel/__init__.py-98-                return "unknown"
--
src/gui/results_panel/__init__.py-101-        
src/gui/results_panel/__init__.py:102:    except ImportError as fallback_error:
src/gui/results_panel/__init__.py:103:        logger.critical(f"üí• KRITIKUS: Minden results panel import sikertelen: {fallback_error}")
src/gui/results_panel/__init__.py-104-        
--
src/gui/results_panel/__init__.py-109-            def __init__(self, *args, **kwargs):
src/gui/results_panel/__init__.py:110:                logger.error("ResultsPanel placeholder haszn√°latban - results_panel.py f√°jl hi√°nyzik!")
src/gui/results_panel/__init__.py-111-        
--
src/gui/results_panel/__init__.py-114-            def __init__(self, *args, **kwargs):
src/gui/results_panel/__init__.py:115:                logger.error("QuickOverviewTab placeholder haszn√°latban - quick_overview_tab.py f√°jl hi√°nyzik!")
src/gui/results_panel/__init__.py-116-        
--
src/gui/results_panel/__init__.py-119-            def __init__(self, *args, **kwargs):
src/gui/results_panel/__init__.py:120:                logger.error("DetailedChartsTab placeholder haszn√°latban - detailed_charts_tab.py f√°jl hi√°nyzik!")
src/gui/results_panel/__init__.py-121-        
--
src/gui/results_panel/__init__.py-124-            def __init__(self, *args, **kwargs):
src/gui/results_panel/__init__.py:125:                logger.error("DataTableTab placeholder haszn√°latban - data_table_tab.py f√°jl hi√°nyzik!")
src/gui/results_panel/__init__.py-126-        
--
src/gui/results_panel/__init__.py-129-            def __init__(self, *args, **kwargs):
src/gui/results_panel/__init__.py:130:                logger.error("ExtremeEventsTab placeholder haszn√°latban - extreme_events_tab.py f√°jl hi√°nyzik!")
src/gui/results_panel/__init__.py-131-        
--
src/gui/results_panel/__init__.py-140-            def extract_safely(*args, **kwargs):
src/gui/results_panel/__init__.py:141:                logger.error("DataFrameExtractor placeholder haszn√°latban!")
src/gui/results_panel/__init__.py-142-                return None
--
src/gui/results_panel/__init__.py-147-            def categorize_wind_gust(*args, **kwargs):
src/gui/results_panel/__init__.py:148:                logger.error("WindGustsAnalyzer placeholder haszn√°latban!")
src/gui/results_panel/__init__.py-149-                return "unknown"
--
src/gui/results_panel/__init__.py-214-            if component not in globals():
src/gui/results_panel/__init__.py:215:                logger.error(f"‚ùå Hi√°nyz√≥ komponens: {component}")
src/gui/results_panel/__init__.py-216-                return False
--
src/gui/results_panel/__init__.py-220-        
src/gui/results_panel/__init__.py:221:    except Exception as e:
src/gui/results_panel/__init__.py:222:        logger.error(f"‚ùå Komponens valid√°l√°si hiba: {e}")
src/gui/results_panel/__init__.py-223-        return False
--
src/gui/weather_data_bridge.py-157-                if not detected_parameter:
src/gui/weather_data_bridge.py:158:                    logger.error(f"‚ùå Ismeretlen metrika: {metric}")
src/gui/weather_data_bridge.py-159-                    return {}
--
src/gui/weather_data_bridge.py-184-            if not result_data[detected_parameter]:
src/gui/weather_data_bridge.py:185:                logger.error("‚ùå Nincs √©rv√©nyes v√°ros adat a konverzi√≥hoz")
src/gui/weather_data_bridge.py-186-                return {}
--
src/gui/weather_data_bridge.py-191-            
src/gui/weather_data_bridge.py:192:        except Exception as e:
src/gui/weather_data_bridge.py:193:            logger.error(f"‚ùå Hiba az analytics result konverzi√≥ban: {e}", exc_info=True)
src/gui/weather_data_bridge.py-194-            return {}
--
src/gui/weather_data_bridge.py-233-            if not overlay_type:
src/gui/weather_data_bridge.py:234:                logger.error(f"‚ùå Ismeretlen metrika overlay konverzi√≥hoz: {metric}")
src/gui/weather_data_bridge.py:235:                logger.error(f"üîß T√°mogatott metrik√°k: {list(self.METRIC_MAP.keys())}")
src/gui/weather_data_bridge.py-236-                return None
--
src/gui/weather_data_bridge.py-265-            if not weather_data:
src/gui/weather_data_bridge.py:266:                logger.error("‚ùå Nincs √©rv√©nyes v√°ros adat a konverzi√≥hoz")
src/gui/weather_data_bridge.py-267-                return None
--
src/gui/weather_data_bridge.py-281-            
src/gui/weather_data_bridge.py:282:        except Exception as e:
src/gui/weather_data_bridge.py:283:            logger.error(f"‚ùå Hiba az analytics‚Üíoverlay konverzi√≥ban: {e}", exc_info=True)
src/gui/weather_data_bridge.py-284-            return None
--
src/gui/hungarian_city_selector.py-182-    data_loaded = Signal(int)                           # cities_count
src/gui/hungarian_city_selector.py:183:    error_occurred = Signal(str)                        # error_message
src/gui/hungarian_city_selector.py-184-    
--
src/gui/hungarian_city_selector.py-462-            if not self.db_path.exists():
src/gui/hungarian_city_selector.py:463:                error_msg = f"Cities adatb√°zis nem tal√°lhat√≥: {self.db_path}"
src/gui/hungarian_city_selector.py:464:                logger.error(error_msg)
src/gui/hungarian_city_selector.py:465:                self.error_occurred.emit(error_msg)
src/gui/hungarian_city_selector.py-466-                self._update_stats("‚ùå Adatb√°zis hiba")
--
src/gui/hungarian_city_selector.py-511-                
src/gui/hungarian_city_selector.py:512:        except Exception as e:
src/gui/hungarian_city_selector.py:513:            error_msg = f"Hiba a magyar v√°rosok bet√∂lt√©sekor: {e}"
src/gui/hungarian_city_selector.py:514:            logger.error(error_msg, exc_info=True)
src/gui/hungarian_city_selector.py:515:            self.error_occurred.emit(error_msg)
src/gui/hungarian_city_selector.py-516-            self._update_stats("‚ùå Bet√∂lt√©si hiba")
--
src/gui/analytics_view.py-62-    logger.info("‚úÖ Multi-City Engine import sikeres!")
src/gui/analytics_view.py:63:except ImportError as e:
src/gui/analytics_view.py-64-    MULTI_CITY_AVAILABLE = False
--
src/gui/analytics_view.py-369-            
src/gui/analytics_view.py:370:        except Exception as e:
src/gui/analytics_view.py:371:            logger.error(f"TemperatureTabWidget KONSTANS HEATMAP friss√≠t√©si hiba: {e}")
src/gui/analytics_view.py-372-
--
src/gui/analytics_view.py-412-            
src/gui/analytics_view.py:413:        except Exception as e:
src/gui/analytics_view.py:414:            logger.error(f"PrecipitationTabWidget KONSTANS HEATMAP friss√≠t√©si hiba: {e}")
src/gui/analytics_view.py-415-
--
src/gui/analytics_view.py-477-            
src/gui/analytics_view.py:478:        except Exception as e:
src/gui/analytics_view.py:479:            logger.error(f"WindTabWidget KONSTANS HEATMAP friss√≠t√©si hiba: {e}")
src/gui/analytics_view.py-480-
--
src/gui/analytics_view.py-542-            
src/gui/analytics_view.py:543:        except Exception as e:
src/gui/analytics_view.py:544:            logger.error(f"WindGustTabWidget KONSTANS HEATMAP friss√≠t√©si hiba: {e}")
src/gui/analytics_view.py-545-
--
src/gui/analytics_view.py-620-            
src/gui/analytics_view.py:621:        except Exception as e:
src/gui/analytics_view.py:622:            logger.error(f"ClimateTabWidget friss√≠t√©si hiba: {e}")
src/gui/analytics_view.py-623-    
--
src/gui/analytics_view.py-647-                
src/gui/analytics_view.py:648:        except Exception as e:
src/gui/analytics_view.py:649:            logger.error(f"Tab {index} friss√≠t√©si hiba: {e}")
src/gui/analytics_view.py-650-
--
src/gui/analytics_view.py-678-    analysis_completed = Signal()
src/gui/analytics_view.py:679:    error_occurred = Signal(str)
src/gui/analytics_view.py-680-    
--
src/gui/analytics_view.py-1070-            
src/gui/analytics_view.py:1071:        except Exception as e:
src/gui/analytics_view.py:1072:            logger.error(f"‚ùå Multi-City result processing error: {e}")
src/gui/analytics_view.py-1073-            self._update_status(f"‚ùå Multi-City eredm√©ny feldolgoz√°si hiba: {e}")
src/gui/analytics_view.py:1074:            self.error_occurred.emit(f"Multi-City eredm√©ny hiba: {e}")
src/gui/analytics_view.py-1075-    
--
src/gui/analytics_view.py-1162-            
src/gui/analytics_view.py:1163:        except Exception as e:
src/gui/analytics_view.py:1164:            logger.error(f"‚ùå Fake data creation hiba: {e}")
src/gui/analytics_view.py-1165-    
--
src/gui/analytics_view.py-1202-            
src/gui/analytics_view.py:1203:        except Exception as e:
src/gui/analytics_view.py:1204:            logger.error(f"‚ùå Fake records creation hiba: {e}")
src/gui/analytics_view.py-1205-            return {}
--
src/gui/analytics_view.py-1251-            
src/gui/analytics_view.py:1252:        except Exception as e:
src/gui/analytics_view.py:1253:            logger.error(f"Konstans heatmap dashboard adatfriss√≠t√©si hiba: {e}", exc_info=True)
src/gui/analytics_view.py:1254:            self.error_occurred.emit(f"Adatfriss√≠t√©si hiba: {str(e)}")
src/gui/analytics_view.py-1255-            self._update_status("‚ùå Adatfeldolgoz√°si hiba")
--
src/gui/analytics_view.py-1308-            
src/gui/analytics_view.py:1309:        except Exception as e:
src/gui/analytics_view.py:1310:            logger.error(f"Lok√°ci√≥ v√°ltoz√°s hiba: {e}")
src/gui/analytics_view.py:1311:            self.error_occurred.emit(f"Lok√°ci√≥ hiba: {str(e)}")
src/gui/analytics_view.py-1312-    
--
src/gui/analytics_view.py-1330-            
src/gui/analytics_view.py:1331:        except Exception as e:
src/gui/analytics_view.py:1332:            logger.error(f"Statisztika feldolgoz√°si hiba: {e}", exc_info=True)
src/gui/analytics_view.py-1333-            raise
--
src/gui/analytics_view.py-1411-            
src/gui/analytics_view.py:1412:        except Exception as e:
src/gui/analytics_view.py:1413:            logger.error(f"Statisztikai adatok sz√°m√≠t√°si hiba: {e}")
src/gui/analytics_view.py-1414-            return {}
--
src/gui/analytics_view.py-1488-            
src/gui/analytics_view.py:1489:        except Exception as e:
src/gui/analytics_view.py:1490:            logger.error(f"K√°rty√°s widget l√©trehoz√°si hiba: {e}")
src/gui/analytics_view.py:1491:            error_widget = QWidget()
src/gui/analytics_view.py:1492:            error_layout = QVBoxLayout(error_widget)
src/gui/analytics_view.py:1493:            error_label = QLabel(f"‚ùå Widget hiba: {str(e)}")
src/gui/analytics_view.py:1494:            error_label.setAlignment(Qt.AlignCenter)
src/gui/analytics_view.py:1495:            error_layout.addWidget(error_label)
src/gui/analytics_view.py:1496:            return error_widget
src/gui/analytics_view.py-1497-    
--
src/gui/analytics_view.py-1618-            
src/gui/analytics_view.py:1619:        except Exception as e:
src/gui/analytics_view.py:1620:            logger.error(f"Rekord sz√°m√≠t√°si hiba: {e}", exc_info=True)
src/gui/analytics_view.py-1621-            return {}
--
src/gui/analytics_view.py-1661-            
src/gui/analytics_view.py:1662:        except Exception as e:
src/gui/analytics_view.py:1663:            logger.error(f"Sz√°raz id≈ëszak keres√©si hiba: {e}")
src/gui/analytics_view.py-1664-            return None
--
src/gui/dialogs.py-20-
src/gui/dialogs.py:21:üîß JAV√çT√ÅS: close_button attribute error megoldva
src/gui/dialogs.py-22-üîß KRITIKUS JAV√çT√ÅS: Konstruktor t√≠pus hiba jav√≠tva QDialog ‚Üí QWidget
--
src/gui/dialogs.py-51-    üîß BUGFIX:
src/gui/dialogs.py:52:    - close_button attribute error jav√≠tva
src/gui/dialogs.py-53-    - Widget referenci√°k megfelel≈ëen elmentve
--
src/gui/dialogs.py-223-            
src/gui/dialogs.py:224:        except Exception as e:
src/gui/dialogs.py-225-            print(f"Hiba az extr√©m √©rt√©kek kisz√°m√≠t√°sa k√∂zben: {e}")
src/gui/dialogs.py:226:            self._show_calculation_error()
src/gui/dialogs.py-227-    
--
src/gui/dialogs.py-261-            
src/gui/dialogs.py:262:        except Exception as e:
src/gui/dialogs.py-263-            print(f"Hiba az adatok kinyer√©se k√∂zben: {e}")
--
src/gui/dialogs.py-450-    
src/gui/dialogs.py:451:    def _show_calculation_error(self) -> None:
src/gui/dialogs.py-452-        """Sz√°m√≠t√°si hiba √ºzenet megjelen√≠t√©se."""
--
src/gui/panel_widgets/provider_widget.py-250-                
src/gui/panel_widgets/provider_widget.py:251:        except Exception as e:
src/gui/panel_widgets/provider_widget.py:252:            print(f"‚ùå DEBUG: Provider selection change error: {e}")
src/gui/panel_widgets/provider_widget.py-253-    
--
src/gui/panel_widgets/provider_widget.py-312-            
src/gui/panel_widgets/provider_widget.py:313:        except Exception as e:
src/gui/panel_widgets/provider_widget.py:314:            print(f"‚ùå DEBUG: Usage display update error: {e}")
src/gui/panel_widgets/provider_widget.py-315-            # Fallback display - OPEN-METEO alap√©rtelmezett
--
src/gui/panel_widgets/provider_widget.py-419-            
src/gui/panel_widgets/provider_widget.py:420:        except Exception as e:
src/gui/panel_widgets/provider_widget.py:421:            print(f"‚ùå DEBUG: Set provider error: {e}")
src/gui/panel_widgets/provider_widget.py-422-    
--
src/gui/panel_widgets/provider_widget.py-434-            
src/gui/panel_widgets/provider_widget.py:435:        except Exception as e:
src/gui/panel_widgets/provider_widget.py:436:            print(f"‚ùå DEBUG: Update usage stats error: {e}")
src/gui/panel_widgets/provider_widget.py-437-    
--
src/gui/panel_widgets/provider_widget.py-483-            
src/gui/panel_widgets/provider_widget.py:484:        except Exception as e:
src/gui/panel_widgets/provider_widget.py:485:            print(f"‚ùå ERROR: Failed to set ProviderWidget state: {e}")
src/gui/panel_widgets/provider_widget.py-486-            return False
--
src/gui/panel_widgets/date_range_widget.py-373-            
src/gui/panel_widgets/date_range_widget.py:374:        except Exception as e:
src/gui/panel_widgets/date_range_widget.py:375:            print(f"‚ùå ERROR: Computed dates update error: {e}")
src/gui/panel_widgets/date_range_widget.py-376-            self.computed_dates_info.setText("D√°tum sz√°m√≠t√°si hiba")
--
src/gui/panel_widgets/date_range_widget.py-507-            
src/gui/panel_widgets/date_range_widget.py:508:        except Exception as e:
src/gui/panel_widgets/date_range_widget.py:509:            print(f"‚ùå ERROR: Failed to set DateRangeWidget state: {e}")
src/gui/panel_widgets/date_range_widget.py-510-            return False
--
src/gui/panel_widgets/date_range_widget.py-534-            
src/gui/panel_widgets/date_range_widget.py:535:        except ValueError:
src/gui/panel_widgets/date_range_widget.py-536-            return False
--
src/gui/panel_widgets/api_settings_widget.py-185-            
src/gui/panel_widgets/api_settings_widget.py:186:        except Exception as e:
src/gui/panel_widgets/api_settings_widget.py:187:            print(f"‚ùå ERROR: Failed to set ApiSettingsWidget state: {e}")
src/gui/panel_widgets/api_settings_widget.py-188-            return False
--
src/gui/panel_widgets/api_settings_widget.py-215-            
src/gui/panel_widgets/api_settings_widget.py:216:        except Exception as e:
src/gui/panel_widgets/api_settings_widget.py:217:            print(f"‚ùå ERROR: Failed to set API settings: {e}")
src/gui/panel_widgets/api_settings_widget.py-218-            return False
--
src/gui/panel_widgets/multi_city_widget.py-140-            
src/gui/panel_widgets/multi_city_widget.py:141:        except Exception as e:
src/gui/panel_widgets/multi_city_widget.py:142:            print(f"‚ùå ERROR: Adatok bet√∂lt√©si hiba: {e}")
src/gui/panel_widgets/multi_city_widget.py-143-            self._available_counties = []
--
src/gui/panel_widgets/multi_city_widget.py-227-        if mode not in ["region", "county"]:
src/gui/panel_widgets/multi_city_widget.py:228:            print(f"‚ùå ERROR: Invalid analysis mode: {mode}")
src/gui/panel_widgets/multi_city_widget.py-229-            return
--
src/gui/panel_widgets/multi_city_widget.py-284-            
src/gui/panel_widgets/multi_city_widget.py:285:        except Exception as e:
src/gui/panel_widgets/multi_city_widget.py:286:            print(f"‚ùå ERROR: ComboBox populate hiba: {e}")
src/gui/panel_widgets/multi_city_widget.py-287-        finally:
--
src/gui/panel_widgets/multi_city_widget.py-496-            
src/gui/panel_widgets/multi_city_widget.py:497:        except Exception as e:
src/gui/panel_widgets/multi_city_widget.py:498:            print(f"‚ùå ERROR: Failed to set MultiCityWidget state: {e}")
src/gui/panel_widgets/multi_city_widget.py-499-            return False
--
src/gui/panel_widgets/multi_city_widget.py-544-            
src/gui/panel_widgets/multi_city_widget.py:545:        except Exception as e:
src/gui/panel_widgets/multi_city_widget.py:546:            print(f"‚ùå ERROR: Cities lek√©rdez√©si hiba: {e}")
src/gui/panel_widgets/multi_city_widget.py-547-            return []
--
src/gui/panel_widgets/location_widget.py-193-            
src/gui/panel_widgets/location_widget.py:194:        except Exception as e:
src/gui/panel_widgets/location_widget.py:195:            print(f"‚ùå ERROR: LocationWidget city selection error: {e}")
src/gui/panel_widgets/location_widget.py-196-    
--
src/gui/panel_widgets/location_widget.py-232-            
src/gui/panel_widgets/location_widget.py:233:        except Exception as e:
src/gui/panel_widgets/location_widget.py:234:            print(f"‚ùå ERROR: LocationWidget location change error: {e}")
src/gui/panel_widgets/location_widget.py-235-    
--
src/gui/panel_widgets/location_widget.py-257-            
src/gui/panel_widgets/location_widget.py:258:        except Exception as e:
src/gui/panel_widgets/location_widget.py:259:            print(f"‚ùå ERROR: LocationWidget clear error: {e}")
src/gui/panel_widgets/location_widget.py-260-    
--
src/gui/panel_widgets/location_widget.py-295-            
src/gui/panel_widgets/location_widget.py:296:        except Exception as e:
src/gui/panel_widgets/location_widget.py:297:            print(f"‚ùå ERROR: LocationWidget refresh_ui() error: {e}")
src/gui/panel_widgets/location_widget.py-298-    
--
src/gui/panel_widgets/location_widget.py-319-            
src/gui/panel_widgets/location_widget.py:320:        except Exception as e:
src/gui/panel_widgets/location_widget.py:321:            print(f"‚ùå ERROR: LocationWidget force_refresh() error: {e}")
src/gui/panel_widgets/location_widget.py-322-    
--
src/gui/panel_widgets/location_widget.py-375-            
src/gui/panel_widgets/location_widget.py:376:        except Exception as e:
src/gui/panel_widgets/location_widget.py:377:            print(f"‚ùå ERROR: Failed to set LocationWidget state: {e}")
src/gui/panel_widgets/location_widget.py-378-            return False
--
src/gui/panel_widgets/analysis_type_widget.py-172-        if not analysis_type or analysis_type not in ["single_location", "region", "county"]:
src/gui/panel_widgets/analysis_type_widget.py:173:            print(f"‚ùå ERROR: Invalid analysis type in state: {analysis_type}")
src/gui/panel_widgets/analysis_type_widget.py-174-            return False
--
src/gui/panel_widgets/analysis_type_widget.py-195-            
src/gui/panel_widgets/analysis_type_widget.py:196:        except Exception as e:
src/gui/panel_widgets/analysis_type_widget.py:197:            print(f"‚ùå ERROR: Failed to set analysis type state: {e}")
src/gui/panel_widgets/analysis_type_widget.py-198-            return False
--
src/gui/utils.py-28-‚úÖ Type hints: Minden f√ºggv√©nyn√©l explicit t√≠pusok
src/gui/utils.py:29:‚úÖ Error handling: Robusztus kiv√©telkezel√©s
src/gui/utils.py-30-‚úÖ Logging: Debug √©s monitoring funkci√≥k
--
src/gui/utils.py-138-    WARNING_COLOR = "#f59e0b"      # Figyelmeztet√©sek (s√°rga)
src/gui/utils.py:139:    ERROR_COLOR = "#dc2626"        # Hib√°k, t√∂rl√©s (piros)
src/gui/utils.py-140-    INFO_COLOR = "#6b7280"         # Inform√°ci√≥s √ºzenetek (sz√ºrke)
--
src/gui/utils.py-297-            
src/gui/utils.py:298:        except ImportError as e:
src/gui/utils.py-299-            logger.warning(f"ThemeManager import failed, using legacy CSS: {e}")
src/gui/utils.py-300-            return StyleSheets._get_legacy_stylesheet(theme_type)
src/gui/utils.py:301:        except Exception as e:
src/gui/utils.py:302:            logger.error(f"ThemeManager CSS generation failed: {e}")
src/gui/utils.py-303-            return StyleSheets._get_legacy_stylesheet(theme_type)
--
src/gui/utils.py-338-                    css_parts.append("")  # Empty line separator
src/gui/utils.py:339:            except Exception as e:
src/gui/utils.py-340-                logger.warning(f"CSS generation failed for {widget_type}: {e}")
--
src/gui/utils.py-374-            
src/gui/utils.py:375:        except Exception as e:
src/gui/utils.py:376:            logger.error(f"Widget CSS generation failed for {widget_class}: {e}")
src/gui/utils.py-377-            return ""
--
src/gui/utils.py-398-            
src/gui/utils.py:399:        except Exception as e:
src/gui/utils.py:400:            logger.error(f"Widget theme application failed: {e}")
src/gui/utils.py-401-            
--
src/gui/utils.py-858-    Returns:
src/gui/utils.py:859:        (valid, error_message) tuple
src/gui/utils.py-860-    """
--
src/gui/utils.py-892-    # Fallback if optimal source not available
src/gui/utils.py:893:    is_valid, error_msg = validate_provider_selection(optimal_source, usage_stats)
src/gui/utils.py-894-    
--
src/gui/utils.py-902-                    'original': optimal_source,
src/gui/utils.py:903:                    'reason': f"Fallback due to: {error_msg}",
src/gui/utils.py-904-                    'is_fallback': True
--
src/gui/utils.py-1189-    Returns:
src/gui/utils.py:1190:        (valid, error_message) tuple
src/gui/utils.py-1191-    """
--
src/gui/utils.py-1211-        
src/gui/utils.py:1212:    except ValueError:
src/gui/utils.py-1213-        return False, "√ârv√©nytelen d√°tum form√°tum (YYYY-MM-DD)"
--
src/gui/utils.py-1270-        }
src/gui/utils.py:1271:    except Exception as e:
src/gui/utils.py:1272:        logger.error(f"Statisztikai sz√°m√≠t√°s hiba: {e}")
src/gui/utils.py-1273-        return {}
--
src/gui/utils.py-1317-        
src/gui/utils.py:1318:    except Exception as e:
src/gui/utils.py:1319:        logger.error(f"Sz√©ll√∂k√©s statisztikai sz√°m√≠t√°s hiba: {e}")
src/gui/utils.py-1320-        return {}
--
src/gui/utils.py-1399-                GUIConstants.WARNING_COLOR,
src/gui/utils.py:1400:                GUIConstants.ERROR_COLOR
src/gui/utils.py-1401-            ]),
--
src/gui/utils.py-1417-        
src/gui/utils.py:1418:    except Exception as e:
src/gui/utils.py:1419:        logger.error(f"GUI konstansok valid√°l√°si hiba: {e}")
src/gui/utils.py-1420-        return {"validation_failed": True}
--
src/gui/utils.py-1454-        
src/gui/utils.py:1455:    except Exception as e:
src/gui/utils.py:1456:        logger.error(f"Wind gusts konstansok valid√°l√°si hiba: {e}")
src/gui/utils.py-1457-        return {"validation_failed": True}
--
src/gui/utils.py-1489-        
src/gui/utils.py:1490:    except Exception as e:
src/gui/utils.py:1491:        logger.error(f"Dual-API konstansok valid√°l√°si hiba: {e}")
src/gui/utils.py-1492-        return {"validation_failed": True}
--
src/gui/utils.py-1533-        
src/gui/utils.py:1534:    except Exception as e:
src/gui/utils.py:1535:        logger.error(f"Teljes anom√°lia konstansok valid√°l√°si hiba: {e}")
src/gui/utils.py-1536-        return {"validation_failed": True}
--
src/gui/utils.py-1699-            "Type Hints",
src/gui/utils.py:1700:            "Error Handling",
src/gui/utils.py-1701-            "Structured Logging",
--
src/gui/utils.py-1709-
src/gui/utils.py:1710:# Backward compatibility aliases for import errors
src/gui/utils.py-1711-get_display_name_for_source = get_source_display_name
--
src/gui/utils.py-1760-        else:
src/gui/utils.py:1761:            logger.error("‚ùå utils.py modul valid√°l√°si hib√°k:")
src/gui/utils.py-1762-            for key, value in {**gui_valid, **wind_valid, **dual_api_valid}.items():
src/gui/utils.py-1763-                if not value:
src/gui/utils.py:1764:                    logger.error(f"  - {key}: FAILED")
src/gui/utils.py-1765-            return False
src/gui/utils.py-1766-            
src/gui/utils.py:1767:    except Exception as e:
src/gui/utils.py:1768:        logger.error(f"‚ùå utils.py modul inicializ√°l√°si hiba: {e}")
src/gui/utils.py-1769-        return False
--
src/gui/control_panel.py-91-    city_selected = Signal(str, float, float, dict)       # LocationWidget selection  
src/gui/control_panel.py:92:    local_error_occurred = Signal(str)                    # Error handling
src/gui/control_panel.py-93-    
--
src/gui/control_panel.py-332-            
src/gui/control_panel.py:333:            # üîß AUTO-RESET FETCH STATE - Error eset√©re timeout
src/gui/control_panel.py-334-            from PySide6.QtCore import QTimer
--
src/gui/control_panel.py-337-        else:
src/gui/control_panel.py:338:            print("‚ùå ERROR: Invalid analysis request")
src/gui/control_panel.py-339-            # üîß FETCH STATE RESET on validation failure
src/gui/control_panel.py-340-            self.query_control_widget.set_fetching_state(False)
src/gui/control_panel.py:341:            self.local_error_occurred.emit("Hi√°nyos vagy √©rv√©nytelen be√°ll√≠t√°sok")
src/gui/control_panel.py-342-    
--
src/gui/control_panel.py-380-            
src/gui/control_panel.py:381:        except Exception as e:
src/gui/control_panel.py:382:            print(f"‚ö†Ô∏è DEBUG: Error preserving widget states: {e}")
src/gui/control_panel.py-383-            self._preserved_states = {}
--
src/gui/control_panel.py-420-            
src/gui/control_panel.py:421:        except Exception as e:
src/gui/control_panel.py:422:            print(f"‚ö†Ô∏è DEBUG: Error restoring widget states: {e}")
src/gui/control_panel.py-423-    
--
src/gui/control_panel.py-504-            
src/gui/control_panel.py:505:        except Exception as e:
src/gui/control_panel.py:506:            print(f"‚ö†Ô∏è DEBUG: Error during delayed widget refresh: {e}")
src/gui/control_panel.py-507-    
--
src/gui/control_panel.py-594-            
src/gui/control_panel.py:595:        except Exception as e:
src/gui/control_panel.py:596:            print(f"‚ùå DEBUG: Error during comprehensive fetch validation: {e}")
src/gui/control_panel.py-597-            return False
--
src/gui/control_panel.py-861-    
src/gui/control_panel.py:862:    def on_controller_error(self, error_message: str) -> None:
src/gui/control_panel.py-863-        """Hiba kezel√©se k√ºls≈ë jelz√©s alapj√°n."""
src/gui/control_panel.py-864-        self.query_control_widget.set_fetching_state(False)
src/gui/control_panel.py:865:        self.query_control_widget.set_progress_text(f"‚ùå Hiba: {error_message}")
src/gui/control_panel.py-866-        self._update_fetch_button_state_comprehensive()
src/gui/control_panel.py-867-        
src/gui/control_panel.py:868:        self.local_error_occurred.emit(error_message)
src/gui/control_panel.py-869-        
src/gui/control_panel.py:870:        print(f"‚ùå Controller error: {error_message}")
src/gui/control_panel.py-871-    
--
src/gui/control_panel.py-894-    
src/gui/control_panel.py:895:    def _on_geocoding_error(self, error_message: str) -> None:
src/gui/control_panel.py-896-        """Geocoding hiba fogad√°sa."""
src/gui/control_panel.py:897:        self.local_error_occurred.emit(f"Keres√©si hiba: {error_message}")
src/gui/control_panel.py:898:        print(f"‚ùå Geocoding error: {error_message}")
src/gui/control_panel.py-899-    
--
src/gui/charts/comparison_chart.py-77-            
src/gui/charts/comparison_chart.py:78:        except Exception as e:
src/gui/charts/comparison_chart.py-79-            print(f"‚ùå DEBUG: Multi-year comparison chart hiba: {e}")
--
src/gui/charts/comparison_chart.py-140-                self.color_palette.get_color('warning', 'base') or '#f59e0b',
src/gui/charts/comparison_chart.py:141:                self.color_palette.get_color('error', 'base') or '#dc2626',
src/gui/charts/comparison_chart.py-142-                self.color_palette.get_color('info', 'base') or '#6366f1',
--
src/gui/charts/comparison_chart.py-182-            'summer': self.color_palette.get_color('warning', 'light') or '#fde047',
src/gui/charts/comparison_chart.py:183:            'autumn': self.color_palette.get_color('error', 'light') or '#fb7185',
src/gui/charts/comparison_chart.py-184-            'winter': self.color_palette.get_color('info', 'light') or '#a5b4fc'
--
src/gui/charts/precipitation_chart.py-74-            
src/gui/charts/precipitation_chart.py:75:        except Exception as e:
src/gui/charts/precipitation_chart.py-76-            print(f"‚ùå DEBUG: Csapad√©k chart hiba: {e}")
--
src/gui/charts/wind_chart.py-78-            
src/gui/charts/wind_chart.py:79:        except Exception as e:
src/gui/charts/wind_chart.py-80-            print(f"‚ùå DEBUG: Sz√©l chart hiba: {e}")
--
src/gui/charts/wind_chart.py-164-            'stormy': self.color_palette.get_color('warning', 'dark') or '#d97706',       # Viharos sz√©l (61)
src/gui/charts/wind_chart.py:165:            'severe_storm': self.color_palette.get_color('error', 'light') or '#f87171',  # Er≈ës vihar (90)
src/gui/charts/wind_chart.py:166:            'hurricane': self.color_palette.get_color('error', 'base') or '#dc2626'       # Ork√°n (119)
src/gui/charts/wind_chart.py-167-        }
--
src/gui/charts/heatmap_chart.py-103-            
src/gui/charts/heatmap_chart.py:104:        except Exception as e:
src/gui/charts/heatmap_chart.py:105:            logger.error(f"‚ùå Heatmap calendar chart hiba ({self.parameter}): {e}", exc_info=True)
src/gui/charts/heatmap_chart.py-106-            self._is_updating = False
--
src/gui/charts/heatmap_chart.py-129-        if len(dates) != len(parameter_values):
src/gui/charts/heatmap_chart.py:130:            logger.error(f"‚ùå Elt√©r≈ë hossz√∫s√°g√∫ {self.parameter} adatok")
src/gui/charts/heatmap_chart.py:131:            logger.error(f"  Dates: {len(dates)}, Values: {len(parameter_values)}")
src/gui/charts/heatmap_chart.py-132-            return pd.DataFrame()
--
src/gui/charts/heatmap_chart.py-485-            
src/gui/charts/heatmap_chart.py:486:        except Exception as e:
src/gui/charts/heatmap_chart.py-487-            # Colorbar hiba nem kritikus
--
src/gui/charts/temperature_chart.py-83-            
src/gui/charts/temperature_chart.py:84:        except Exception as e:
src/gui/charts/temperature_chart.py-85-            print(f"‚ùå DEBUG: Enhanced h≈ëm√©rs√©klet chart hiba: {e}")
--
src/gui/charts/temperature_chart.py-134-            'warm': self.color_palette.get_color('warning', 'base') or '#f59e0b',
src/gui/charts/temperature_chart.py:135:            'hot': self.color_palette.get_color('error', 'base') or '#dc2626',
src/gui/charts/temperature_chart.py-136-            'comfort': self.color_palette.get_color('success', 'light') or '#22c55e',
src/gui/charts/temperature_chart.py:137:            'trend_up': self.color_palette.get_color('error', 'light') or '#ef4444',
src/gui/charts/temperature_chart.py-138-            'trend_down': self.color_palette.get_color('info', 'light') or '#8b5cf6',
src/gui/charts/temperature_chart.py:139:            'annotation_hot': self.color_palette.get_color('error', 'light') or '#fef2f2',
src/gui/charts/temperature_chart.py-140-            'annotation_cold': self.color_palette.get_color('info', 'light') or '#eff6ff'
--
src/gui/charts/temperature_chart.py-149-            'warning': self.color_palette.get_color('warning', 'base') or '#f59e0b',
src/gui/charts/temperature_chart.py:150:            'error': self.color_palette.get_color('error', 'base') or '#dc2626',
src/gui/charts/temperature_chart.py-151-            'info': self.color_palette.get_color('info', 'base') or '#6b7280'
--
src/gui/charts/base_chart.py-161-                print("‚úÖ DEBUG: Matplotlib font cache √∫jra√©p√≠tve emoji fontokkal")
src/gui/charts/base_chart.py:162:        except Exception as e:
src/gui/charts/base_chart.py-163-            print(f"‚ö†Ô∏è DEBUG: Font cache √∫jra√©p√≠t√©s hiba (nem kritikus): {e}")
--
src/gui/charts/base_chart.py-247-            
src/gui/charts/base_chart.py:248:        except Exception as e:
src/gui/charts/base_chart.py:249:            print(f"‚ùå DEBUG: Theme redraw error: {e}")
src/gui/charts/base_chart.py-250-    
--
src/gui/charts/base_chart.py-283-            
src/gui/charts/base_chart.py:284:        except Exception as e:
src/gui/charts/base_chart.py-285-            print(f"‚ùå DEBUG: Chart t√∂rl√©si hiba: {e}")
--
src/gui/charts/base_chart.py-361-            return True
src/gui/charts/base_chart.py:362:        except Exception as e:
src/gui/charts/base_chart.py-363-            print(f"Chart export hiba: {e}")
--
src/gui/charts/wind_rose_chart.py-76-            
src/gui/charts/wind_rose_chart.py:77:        except Exception as e:
src/gui/charts/wind_rose_chart.py-78-            print(f"‚ùå DEBUG: Wind rose chart hiba: {e}")
--
src/gui/charts/wind_rose_chart.py-173-            'moderate': self.color_palette.get_color('warning', 'base') or '#f59e0b',
src/gui/charts/wind_rose_chart.py:174:            'strong': self.color_palette.get_color('error', 'light') or '#f87171',
src/gui/charts/wind_rose_chart.py:175:            'very_strong': self.color_palette.get_color('error', 'base') or '#dc2626',
src/gui/charts/wind_rose_chart.py:176:            'extreme': self.color_palette.get_color('error', 'dark') or '#991b1b'
src/gui/charts/wind_rose_chart.py-177-        }
--
src/gui/charts/__init__.py-110-    Raises:
src/gui/charts/__init__.py:111:        ValueError: Ha ismeretlen chart t√≠pus
src/gui/charts/__init__.py-112-    """
--
src/gui/charts/__init__.py-114-        available = ', '.join(CHART_TYPES.keys())
src/gui/charts/__init__.py:115:        raise ValueError(f"Ismeretlen chart t√≠pus: {chart_type}. El√©rhet≈ë: {available}")
src/gui/charts/__init__.py-116-    
--
src/gui/theme_manager.py-10-‚úÖ Native Qt6.5+ dark mode support + fallback
src/gui/theme_manager.py:11:‚úÖ Semantic color mapping - primary, success, warning, error, info
src/gui/theme_manager.py-12-‚úÖ Dynamic color variant generation - light, dark, hover, pressed
--
src/gui/theme_manager.py-41-    print("‚úÖ Professional theme engine: qdarktheme available")
src/gui/theme_manager.py:42:except ImportError:
src/gui/theme_manager.py-43-    PROFESSIONAL_THEMES = False
--
src/gui/theme_manager.py-110-                
src/gui/theme_manager.py:111:        except (ImportError, AttributeError):
src/gui/theme_manager.py-112-            print("‚ö†Ô∏è Qt6 native theming not available - professional fallback")
--
src/gui/theme_manager.py-172-                return True
src/gui/theme_manager.py:173:            except Exception as e:
src/gui/theme_manager.py-174-                print(f"‚ö†Ô∏è Professional qdarktheme failed: {e}, trying Qt6 native...")
--
src/gui/theme_manager.py-188-                return True
src/gui/theme_manager.py:189:            except Exception as e:
src/gui/theme_manager.py-190-                print(f"‚ö†Ô∏è Qt6 native failed: {e}, trying ColorPalette fallback...")
--
src/gui/theme_manager.py-196-            return True
src/gui/theme_manager.py:197:        except Exception as e:
src/gui/theme_manager.py-198-            print(f"‚ùå All professional theme methods failed: {e}")
--
src/gui/theme_manager.py-224-        if not self.app:
src/gui/theme_manager.py:225:            raise Exception("QApplication not available for professional theming")
src/gui/theme_manager.py-226-        
--
src/gui/theme_manager.py-239-        palette.setColor(QPalette.ColorRole.ButtonText, QColor(colors["on_surface"]))
src/gui/theme_manager.py:240:        palette.setColor(QPalette.ColorRole.BrightText, QColor(colors["error"]))
src/gui/theme_manager.py-241-        palette.setColor(QPalette.ColorRole.Link, QColor(colors["info"]))
--
src/gui/theme_manager.py-283-            "warning": self.color_palette.get_color("warning", "base") or "#f59e0b",
src/gui/theme_manager.py:284:            "error": self.color_palette.get_color("error", "base") or "#dc2626",
src/gui/theme_manager.py-285-            "info": self.color_palette.get_color("info", "base") or "#6b7280",
--
src/gui/theme_manager.py-490-        semantic_colors = {}
src/gui/theme_manager.py:491:        semantic_types = ["primary", "success", "warning", "error", "info", "surface"]
src/gui/theme_manager.py-492-        
--
src/gui/theme_manager.py-605-                    
src/gui/theme_manager.py:606:            except Exception as e:
src/gui/theme_manager.py:607:                accessibility_info["error"] = f"Accessibility check failed: {e}"
src/gui/theme_manager.py-608-        
--
src/gui/map_visualizer (1).py-29-‚úÖ Timestamp validation HTML loading-hoz
src/gui/map_visualizer (1).py:30:‚úÖ Detailed error diagnosis √©s retry logic
src/gui/map_visualizer (1).py-31-
--
src/gui/map_visualizer (1).py-61-    print("‚úÖ Folium successfully imported")
src/gui/map_visualizer (1).py:62:except ImportError as e:
src/gui/map_visualizer (1).py-63-    FOLIUM_AVAILABLE = False
--
src/gui/map_visualizer (1).py-70-    GEOPANDAS_AVAILABLE = True
src/gui/map_visualizer (1).py:71:except ImportError:
src/gui/map_visualizer (1).py-72-    GEOPANDAS_AVAILABLE = False
--
src/gui/map_visualizer (1).py-179-    map_generated = Signal(str)           # HTML f√°jl path
src/gui/map_visualizer (1).py:180:    error_occurred = Signal(str)          # error message
src/gui/map_visualizer (1).py-181-    status_updated = Signal(str)          # status message
--
src/gui/map_visualizer (1).py-202-            if not FOLIUM_AVAILABLE:
src/gui/map_visualizer (1).py:203:                raise ImportError("Folium library not available")
src/gui/map_visualizer (1).py-204-
--
src/gui/map_visualizer (1).py-250-
src/gui/map_visualizer (1).py:251:        except Exception as e:
src/gui/map_visualizer (1).py-252-            import traceback
src/gui/map_visualizer (1).py:253:            error_msg = f"Folium t√©rk√©p gener√°l√°si hiba: {e}\n{traceback.format_exc()}"
src/gui/map_visualizer (1).py:254:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer (1).py-255-
--
src/gui/map_visualizer (1).py-410-
src/gui/map_visualizer (1).py:411:        except Exception as e:
src/gui/map_visualizer (1).py:412:            print(f"‚ùå Weather overlay error: {e}")
src/gui/map_visualizer (1).py-413-
--
src/gui/map_visualizer (1).py-452-
src/gui/map_visualizer (1).py:453:        except ImportError:
src/gui/map_visualizer (1).py-454-            print("‚ö†Ô∏è HeatMap plugin not available")
src/gui/map_visualizer (1).py:455:        except Exception as e:
src/gui/map_visualizer (1).py:456:            print(f"‚ùå Temperature heatmap error: {e}")
src/gui/map_visualizer (1).py-457-
--
src/gui/map_visualizer (1).py-529-
src/gui/map_visualizer (1).py:530:        except Exception as e:
src/gui/map_visualizer (1).py-531-            print(f"‚ùå Gradient gener√°l√°si hiba: {e}")
--
src/gui/map_visualizer (1).py-581-
src/gui/map_visualizer (1).py:582:        except Exception as e:
src/gui/map_visualizer (1).py:583:            print(f"‚ùå Precipitation overlay error: {e}")
src/gui/map_visualizer (1).py-584-
--
src/gui/map_visualizer (1).py-637-
src/gui/map_visualizer (1).py:638:        except Exception as e:
src/gui/map_visualizer (1).py:639:            print(f"‚ùå Wind speed overlay error: {e}")
src/gui/map_visualizer (1).py-640-
--
src/gui/map_visualizer (1).py-663-
src/gui/map_visualizer (1).py:664:        except Exception as e:
src/gui/map_visualizer (1).py:665:            print(f"‚ùå Weather legend error: {e}")
src/gui/map_visualizer (1).py-666-
--
src/gui/map_visualizer (1).py-888-                        }} catch(err) {{
src/gui/map_visualizer (1).py:889:                            console.log('‚ö†Ô∏è Map move event error:', err);
src/gui/map_visualizer (1).py-890-                        }}
--
src/gui/map_visualizer (1).py-909-            }};
src/gui/map_visualizer (1).py:910:            script.onerror = function() {{
src/gui/map_visualizer (1).py-911-                console.log('‚ùå Failed to load QWebChannel script');
--
src/gui/map_visualizer (1).py-1003-
src/gui/map_visualizer (1).py:1004:        except Exception as e:
src/gui/map_visualizer (1).py-1005-            print(f"‚ö†Ô∏è Failed to inject custom JavaScript: {e}")
--
src/gui/map_visualizer (1).py-1022-    - Timestamp validation HTML loading-hoz
src/gui/map_visualizer (1).py:1023:    - Detailed error diagnosis √©s retry logic
src/gui/map_visualizer (1).py-1024-    
--
src/gui/map_visualizer (1).py-1038-    - export_completed(file_path): Export befejezve
src/gui/map_visualizer (1).py:1039:    - error_occurred(message): Hiba t√∂rt√©nt
src/gui/map_visualizer (1).py-1040-    """
--
src/gui/map_visualizer (1).py-1048-    export_completed = Signal(str)                 # f√°jl √∫tvonal
src/gui/map_visualizer (1).py:1049:    error_occurred = Signal(str)                   # hiba √ºzenet
src/gui/map_visualizer (1).py-1050-    bounds_changed = Signal(object)                # t√©rk√©p hat√°r v√°ltoz√°s
--
src/gui/map_visualizer (1).py-1086-        else:
src/gui/map_visualizer (1).py:1087:            self._show_folium_error()
src/gui/map_visualizer (1).py-1088-
--
src/gui/map_visualizer (1).py-1209-            settings.setAttribute(QWebEngineSettings.JavascriptEnabled, True)
src/gui/map_visualizer (1).py:1210:            settings.setAttribute(QWebEngineSettings.ErrorPageEnabled, True)
src/gui/map_visualizer (1).py-1211-            # WebGL √©s Canvas enged√©lyez√©s
--
src/gui/map_visualizer (1).py-1216-
src/gui/map_visualizer (1).py:1217:        except ImportError as e:
src/gui/map_visualizer (1).py-1218-            print(f"‚ö†Ô∏è WebEngineSettings not available: {e}")
--
src/gui/map_visualizer (1).py-1263-
src/gui/map_visualizer (1).py:1264:    def _show_folium_error(self):
src/gui/map_visualizer (1).py-1265-        """
--
src/gui/map_visualizer (1).py-1274-
src/gui/map_visualizer (1).py:1275:        error_msg = "Folium library not installed. Please run: pip install folium branca"
src/gui/map_visualizer (1).py:1276:        self.error_occurred.emit(error_msg)
src/gui/map_visualizer (1).py-1277-
--
src/gui/map_visualizer (1).py-1291-        if not FOLIUM_AVAILABLE:
src/gui/map_visualizer (1).py:1292:            self._show_folium_error()
src/gui/map_visualizer (1).py-1293-            return
--
src/gui/map_visualizer (1).py-1317-        self.map_generator.map_generated.connect(self._on_map_generated)
src/gui/map_visualizer (1).py:1318:        self.map_generator.error_occurred.connect(self._on_map_error)
src/gui/map_visualizer (1).py-1319-
--
src/gui/map_visualizer (1).py-1333-        if not os.path.exists(html_path):
src/gui/map_visualizer (1).py:1334:            error_msg = f"Generated HTML file not found: {html_path}"
src/gui/map_visualizer (1).py:1335:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer (1).py-1336-            return
--
src/gui/map_visualizer (1).py-1340-        if file_size < 1000:  # Minimum 1KB-os HTML f√°jl elv√°r√°s
src/gui/map_visualizer (1).py:1341:            error_msg = f"Generated HTML file too small ({file_size} bytes): {html_path}"
src/gui/map_visualizer (1).py:1342:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer (1).py-1343-            return
--
src/gui/map_visualizer (1).py-1383-                    print("‚úÖ WebEngine HTTP cache cleared")
src/gui/map_visualizer (1).py:1384:            except Exception as e:
src/gui/map_visualizer (1).py-1385-                print(f"‚ö†Ô∏è Cache clear not available: {e}")
--
src/gui/map_visualizer (1).py-1388-
src/gui/map_visualizer (1).py:1389:        except Exception as e:
src/gui/map_visualizer (1).py:1390:            print(f"‚ùå SAFE WebEngine reset error: {e}")
src/gui/map_visualizer (1).py-1391-
--
src/gui/map_visualizer (1).py-1415-            if not os.path.exists(html_path):
src/gui/map_visualizer (1).py:1416:                raise FileNotFoundError(f"HTML file not found: {html_path}")
src/gui/map_visualizer (1).py-1417-
--
src/gui/map_visualizer (1).py-1423-            if len(html_content) < 1000:
src/gui/map_visualizer (1).py:1424:                raise ValueError(f"HTML content too small: {len(html_content)} characters")
src/gui/map_visualizer (1).py-1425-
src/gui/map_visualizer (1).py-1426-            if "folium" not in html_content.lower():
src/gui/map_visualizer (1).py:1427:                raise ValueError("HTML content does not appear to be a Folium map")
src/gui/map_visualizer (1).py-1428-
--
src/gui/map_visualizer (1).py-1446-
src/gui/map_visualizer (1).py:1447:        except Exception as e:
src/gui/map_visualizer (1).py:1448:            error_msg = f"HTML bet√∂lt√©si hiba (cache fix): {e}"
src/gui/map_visualizer (1).py:1449:            print(f"‚ùå HTML Loading Error with Cache Fix: {error_msg}")
src/gui/map_visualizer (1).py-1450-
--
src/gui/map_visualizer (1).py-1473-
src/gui/map_visualizer (1).py:1474:        except Exception as e:
src/gui/map_visualizer (1).py:1475:            error_msg = f"Alternat√≠v bet√∂lt√©s is sikertelen: {e}"
src/gui/map_visualizer (1).py:1476:            print(f"‚ùå Alternative loading failed: {error_msg}")
src/gui/map_visualizer (1).py:1477:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer (1).py-1478-
--
src/gui/map_visualizer (1).py-1497-
src/gui/map_visualizer (1).py:1498:    def _on_map_error(self, error_message: str):
src/gui/map_visualizer (1).py-1499-        """
--
src/gui/map_visualizer (1).py-1504-
src/gui/map_visualizer (1).py:1505:        print(f"‚ùå Folium map generation error: {error_message}")
src/gui/map_visualizer (1).py:1506:        self.error_occurred.emit(error_message)
src/gui/map_visualizer (1).py-1507-
--
src/gui/map_visualizer (1).py-1519-        else:
src/gui/map_visualizer (1).py:1520:            # üîß DETAILED ERROR DIAGNOSIS WITH RETRY LOGIC
src/gui/map_visualizer (1).py-1521-            page = self.web_view.page()
--
src/gui/map_visualizer (1).py-1539-                # Max retries reached
src/gui/map_visualizer (1).py:1540:                error_msg = f"WebEngine loading failed after {self.max_retry_attempts} attempts with cache fix"
src/gui/map_visualizer (1).py:1541:                self.error_occurred.emit(error_msg)
src/gui/map_visualizer (1).py-1542-                self.status_label.setText("‚ùå WebEngine bet√∂lt√©s sikertelen minden pr√≥b√°lkoz√°s ut√°n!")
src/gui/map_visualizer (1).py:1543:                print(f"‚ùå Max retries reached: {error_msg}")
src/gui/map_visualizer (1).py-1544-
--
src/gui/map_visualizer (1).py-1549-        if not self.current_html_path:
src/gui/map_visualizer (1).py:1550:            self.error_occurred.emit("No HTML path available for retry with cache fix")
src/gui/map_visualizer (1).py-1551-            return
--
src/gui/map_visualizer (1).py-1574-
src/gui/map_visualizer (1).py:1575:        except Exception as e:
src/gui/map_visualizer (1).py:1576:            error_msg = f"Retry with cache fix failed: {e}"
src/gui/map_visualizer (1).py:1577:            print(f"‚ùå Retry failed: {error_msg}")
src/gui/map_visualizer (1).py:1578:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer (1).py-1579-
--
src/gui/map_visualizer (1).py-1674-
src/gui/map_visualizer (1).py:1675:        except Exception as e:
src/gui/map_visualizer (1).py:1676:            error_msg = f"Demo weather data generation failed: {e}"
src/gui/map_visualizer (1).py:1677:            print(f"‚ùå {error_msg}")
src/gui/map_visualizer (1).py:1678:            self.error_occurred.emit(error_msg)
src/gui/map_visualizer (1).py-1679-
--
src/gui/map_visualizer (1).py-1704-
src/gui/map_visualizer (1).py:1705:            except Exception as e:
src/gui/map_visualizer (1).py:1706:                error_msg = f"Export hiba: {e}"
src/gui/map_visualizer (1).py:1707:                self.error_occurred.emit(error_msg)
src/gui/map_visualizer (1).py:1708:                QMessageBox.critical(self, "Export hiba", error_msg)
src/gui/map_visualizer (1).py-1709-
--
src/gui/map_visualizer (1).py-2157-
src/gui/map_visualizer (1).py:2158:    def on_error_occurred(message):
src/gui/map_visualizer (1).py-2159-        print(f"‚ùå Hiba: {message}")
--
src/gui/map_visualizer (1).py-2232-    map_visualizer.export_completed.connect(on_export_completed)
src/gui/map_visualizer (1).py:2233:    map_visualizer.error_occurred.connect(on_error_occurred)
src/gui/map_visualizer (1).py-2234-
--
src/gui/map_visualizer (1).py-2242-    print("   ‚úÖ Timestamp validation HTML loading-hoz")
src/gui/map_visualizer (1).py:2243:    print("   ‚úÖ Detailed error diagnosis √©s retry logic")
src/gui/map_visualizer (1).py-2244-    print("   ‚úÖ Manual force reload gomb")
--
src/gui/main_window.py-76-    print("üó∫Ô∏è DEBUG: Hungarian Counties Integration modul sikeresen import√°lva!")
src/gui/main_window.py:77:except ImportError as e:
src/gui/main_window.py-78-    print(f"‚ö†Ô∏è DEBUG: Hungarian Counties Integration modul nem el√©rhet≈ë: {e}")
--
src/gui/main_window.py-261-            
src/gui/main_window.py:262:        except Exception as e:
src/gui/main_window.py-263-            print(f"‚ö†Ô∏è DEBUG: Magyar megy√©k bet√∂lt√©si hiba: {e}")
--
src/gui/main_window.py-310-            
src/gui/main_window.py:311:        except Exception as e:
src/gui/main_window.py-312-            print(f"‚ö†Ô∏è DEBUG: HungarianMapTab konfigur√°l√°si hiba: {e}")
--
src/gui/main_window.py-365-            self.current_theme = ThemeType(theme_name)
src/gui/main_window.py:366:        except ValueError:
src/gui/main_window.py-367-            self.current_theme = ThemeType.LIGHT
--
src/gui/main_window.py-863-            
src/gui/main_window.py:864:        except Exception as e:
src/gui/main_window.py:865:            print(f"‚ö†Ô∏è DEBUG: Provider status initialization error: {e}")
src/gui/main_window.py-866-            # Fallback to default values
--
src/gui/main_window.py-911-            
src/gui/main_window.py:912:        except Exception as e:
src/gui/main_window.py:913:            print(f"‚ö†Ô∏è DEBUG: Provider status display update error: {e}")
src/gui/main_window.py-914-    
--
src/gui/main_window.py-1036-            
src/gui/main_window.py:1037:            if hasattr(self.analytics_panel, 'error_occurred'):
src/gui/main_window.py:1038:                self.analytics_panel.error_occurred.connect(
src/gui/main_window.py-1039-                    lambda msg: self.status_bar.showMessage(f"‚ùå Analytics hiba: {msg}")
src/gui/main_window.py-1040-                )
src/gui/main_window.py:1041:                print("‚úÖ DEBUG: AnalyticsView.error_occurred signal connected")
src/gui/main_window.py-1042-        else:
--
src/gui/main_window.py-1177-                print(f"‚ùå DEBUG: Multi-city engine returned invalid result type: {type(result)}")
src/gui/main_window.py:1178:                error_msg = f"Multi-city engine hib√°s eredm√©ny t√≠pus: {type(result)}"
src/gui/main_window.py:1179:                self.status_bar.showMessage(f"‚ùå {error_msg}")
src/gui/main_window.py:1180:                self._show_error(error_msg)
src/gui/main_window.py-1181-                return
--
src/gui/main_window.py-1216-            
src/gui/main_window.py:1217:        except ImportError as e:
src/gui/main_window.py:1218:            print(f"‚ùå DEBUG: Multi-City Engine import error: {e}")
src/gui/main_window.py:1219:            error_msg = f"Multi-City Engine nem el√©rhet≈ë: {e}"
src/gui/main_window.py:1220:            self.status_bar.showMessage(f"‚ùå {error_msg}")
src/gui/main_window.py:1221:            self._show_error(error_msg)
src/gui/main_window.py-1222-            
src/gui/main_window.py:1223:        except Exception as e:
src/gui/main_window.py:1224:            print(f"‚ùå DEBUG: Multi-city request error: {e}")
src/gui/main_window.py-1225-            import traceback
--
src/gui/main_window.py-1227-            
src/gui/main_window.py:1228:            error_msg = f"Multi-city lek√©rdez√©s hiba: {e}"
src/gui/main_window.py:1229:            self.status_bar.showMessage(f"‚ùå {error_msg}")
src/gui/main_window.py:1230:            self._show_error(error_msg)
src/gui/main_window.py-1231-        
--
src/gui/main_window.py-1267-            
src/gui/main_window.py:1268:        except Exception as e:
src/gui/main_window.py:1269:            print(f"‚ùå DEBUG: Multi-city result distribution error: {e}")
src/gui/main_window.py:1270:            self._show_error(f"Multi-city eredm√©ny sz√©toszt√°si hiba: {e}")
src/gui/main_window.py-1271-    
--
src/gui/main_window.py-1360-                        print("‚úÖ KRITIKUS: ResultsPanel updated successfully!")
src/gui/main_window.py:1361:                    except Exception as e:
src/gui/main_window.py:1362:                        print(f"‚ùå KRITIKUS: ResultsPanel update error: {e}")
src/gui/main_window.py-1363-                        import traceback
--
src/gui/main_window.py-1376-                        print("‚úÖ KRITIKUS: AnalyticsView updated successfully - V√ÅROS ELEMZ√âS ADATFOLYAM JAV√çTVA!")
src/gui/main_window.py:1377:                    except Exception as e:
src/gui/main_window.py:1378:                        print(f"‚ùå KRITIKUS: AnalyticsView update error: {e}")
src/gui/main_window.py-1379-                        import traceback
--
src/gui/main_window.py-1415-            
src/gui/main_window.py:1416:        except Exception as e:
src/gui/main_window.py:1417:            print(f"‚ö†Ô∏è DEBUG: Analysis completion handling error: {e}")
src/gui/main_window.py-1418-            import traceback
src/gui/main_window.py-1419-            traceback.print_exc()
src/gui/main_window.py:1420:            self._show_error(f"Eredm√©ny feldolgoz√°si hiba: {e}")
src/gui/main_window.py-1421-    
src/gui/main_window.py:1422:    def _on_analysis_failed(self, error_message: str) -> None:
src/gui/main_window.py-1423-        """
--
src/gui/main_window.py-1426-        Args:
src/gui/main_window.py:1427:            error_message: Hiba√ºzenet
src/gui/main_window.py-1428-        """
src/gui/main_window.py:1429:        print(f"‚ùå DEBUG: _on_analysis_failed called: {error_message}")
src/gui/main_window.py-1430-        
src/gui/main_window.py-1431-        # St√°tusz friss√≠t√©se
src/gui/main_window.py:1432:        self.status_bar.showMessage(f"‚ùå Elemz√©s hiba: {error_message}")
src/gui/main_window.py-1433-        
src/gui/main_window.py-1434-        # Hiba√ºzenet megjelen√≠t√©se a felhaszn√°l√≥nak
src/gui/main_window.py:1435:        self._show_error(f"Elemz√©s hiba: {error_message}")
src/gui/main_window.py-1436-        
--
src/gui/main_window.py-1440-        
src/gui/main_window.py:1441:        print(f"‚úÖ DEBUG: Analysis failure handled: {error_message}")
src/gui/main_window.py-1442-    
--
src/gui/main_window.py-1607-    
src/gui/main_window.py:1608:    def _show_error(self, message: str) -> None:
src/gui/main_window.py-1609-        """Hiba√ºzenet megjelen√≠t√©se."""
--
src/gui/main_window.py-1623-        else:
src/gui/main_window.py:1624:            self._show_error(f"Nem t√°mogatott export form√°tum: {format}")
src/gui/main_window.py-1625-    
--
src/gui/main_window.py-1631-        if not weather_data:
src/gui/main_window.py:1632:            self._show_error("Nincsenek export√°lhat√≥ adatok. El≈ësz√∂r k√©rdezzen le adatokat.")
src/gui/main_window.py-1633-            return
--
src/gui/main_window.py-1641-        else:
src/gui/main_window.py:1642:            self._show_error("Adatt√°bl√°zat nem el√©rhet≈ë az exporthoz.")
src/gui/main_window.py-1643-    
--
src/gui/main_window.py-1649-        if not weather_data or not city_data:
src/gui/main_window.py:1650:            self._show_error("Nincsenek megjelen√≠thet≈ë adatok. El≈ësz√∂r k√©rdezzen le id≈ëj√°r√°si adatokat.")
src/gui/main_window.py-1651-            return
--
src/gui/main_window.py-1657-            dialog.exec()
src/gui/main_window.py:1658:        except Exception as e:
src/gui/main_window.py:1659:            self._show_error(f"Extr√©m id≈ëj√°r√°s ablak hiba: {e}")
src/gui/main_window.py-1660-    
--
src/gui/main_window.py-1816-            self._apply_theme(theme_type)
src/gui/main_window.py:1817:        except ValueError:
src/gui/main_window.py-1818-            # Ha invalid t√©ma √©rt√©k, alap√©rtelmezett light
--
src/gui/main_window.py-1872-            
src/gui/main_window.py:1873:        except Exception as e:
src/gui/main_window.py-1874-            print(f"‚ö†Ô∏è DEBUG: Bez√°r√°si hiba: {e}")
--
src/gui/app_controller.py-60-    analysis_completed = Signal(dict)           # result_data
src/gui/app_controller.py:61:    analysis_failed = Signal(str)               # error_message
src/gui/app_controller.py-62-    analysis_cancelled = Signal()               # megszak√≠t√°s meger≈ës√≠t√©se
--
src/gui/app_controller.py-66-    weather_data_ready = Signal(dict)           # Dict - API v√°lasz adatok
src/gui/app_controller.py:67:    error_occurred = Signal(str)                # str - hiba√ºzenet
src/gui/app_controller.py-68-    status_updated = Signal(str)                # str - st√°tusz √ºzenet
--
src/gui/app_controller.py-169-            
src/gui/app_controller.py:170:        except Exception as e:
src/gui/app_controller.py:171:            self._logger.error(f"Analysis request hiba: {e}")
src/gui/app_controller.py-172-            self.analysis_failed.emit(f"Elemz√©si k√©r√©s hiba: {e}")
--
src/gui/app_controller.py-217-            else:
src/gui/app_controller.py:218:                self._logger.error("‚ùå Analysis worker ind√≠t√°s sikertelen")
src/gui/app_controller.py-219-                self.analysis_failed.emit("Worker ind√≠t√°si hiba")
--
src/gui/app_controller.py-221-                
src/gui/app_controller.py:222:        except Exception as e:
src/gui/app_controller.py:223:            self._logger.error(f"Analysis ind√≠t√°si hiba: {e}")
src/gui/app_controller.py-224-            self.analysis_failed.emit(f"Elemz√©s ind√≠t√°si hiba: {e}")
--
src/gui/app_controller.py-290-                if not (has_direct_coords or has_location_data_coords):
src/gui/app_controller.py:291:                    error_msg = "Hi√°nyz√≥ lok√°ci√≥ koordin√°t√°k"
src/gui/app_controller.py:292:                    self._logger.error(f"üîß COORDINATE VALIDATION FAILED: {error_msg}")
src/gui/app_controller.py:293:                    self._logger.error(f"üîß Request keys: {list(request_data.keys())}")
src/gui/app_controller.py-294-                    if location_data:
src/gui/app_controller.py:295:                        self._logger.error(f"üîß location_data keys: {list(location_data.keys())}")
src/gui/app_controller.py-296-                    
src/gui/app_controller.py:297:                    self.analysis_failed.emit(error_msg)
src/gui/app_controller.py-298-                    return False
--
src/gui/app_controller.py-309-            
src/gui/app_controller.py:310:        except Exception as e:
src/gui/app_controller.py:311:            self._logger.error(f"Request validation hiba: {e}")
src/gui/app_controller.py-312-            self.analysis_failed.emit(f"K√©r√©s valid√°l√°si hiba: {e}")
--
src/gui/app_controller.py-354-            
src/gui/app_controller.py:355:        except Exception as e:
src/gui/app_controller.py:356:            self._logger.error(f"Provider routing enhancement hiba: {e}")
src/gui/app_controller.py:357:            return request_data  # Return original on error
src/gui/app_controller.py-358-    
--
src/gui/app_controller.py-435-            
src/gui/app_controller.py:436:        except Exception as e:
src/gui/app_controller.py:437:            self._logger.error(f"Analysis result processing hiba: {e}")
src/gui/app_controller.py-438-            self.analysis_failed.emit(f"Eredm√©ny feldolgoz√°si hiba: {e}")
--
src/gui/app_controller.py-440-    @Slot(str)
src/gui/app_controller.py:441:    def _on_analysis_failed(self, error_message: str):
src/gui/app_controller.py-442-        """Analysis hiba kezel√©se"""
src/gui/app_controller.py:443:        self._logger.error(f"‚ùå Analysis failed: {error_message}")
src/gui/app_controller.py-444-        
src/gui/app_controller.py:445:        self.analysis_failed.emit(error_message)
src/gui/app_controller.py:446:        self.status_updated.emit(f"‚ùå Elemz√©si hiba: {error_message}")
src/gui/app_controller.py-447-        
--
src/gui/app_controller.py-494-            
src/gui/app_controller.py:495:        except Exception as e:
src/gui/app_controller.py:496:            self._logger.error(f"Result processing hiba: {e}")
src/gui/app_controller.py:497:            return result_data  # Return original on error
src/gui/app_controller.py-498-    
--
src/gui/app_controller.py-533-            
src/gui/app_controller.py:534:        except Exception as e:
src/gui/app_controller.py:535:            self._logger.error(f"Cleanup hiba: {e}")
src/gui/app_controller.py-536-    
--
src/gui/app_controller.py-557-            
src/gui/app_controller.py:558:        except Exception as e:
src/gui/app_controller.py:559:            self._logger.error(f"Analysis stop hiba: {e}")
src/gui/app_controller.py-560-    
--
src/gui/app_controller.py-603-            
src/gui/app_controller.py:604:        except Exception as e:
src/gui/app_controller.py:605:            self._logger.error(f"User preferences bet√∂lt√©si hiba: {e}")
src/gui/app_controller.py-606-    
--
src/gui/app_controller.py-622-            
src/gui/app_controller.py:623:        except Exception as e:
src/gui/app_controller.py:624:            self._logger.error(f"Adatb√°zis kapcsolat hiba: {e}")
src/gui/app_controller.py:625:            self.error_occurred.emit(f"Adatb√°zis hiba: {e}")
src/gui/app_controller.py-626-    
--
src/gui/app_controller.py-675-            
src/gui/app_controller.py:676:        except Exception as e:
src/gui/app_controller.py:677:            self._logger.error(f"Adatb√°zis s√©ma friss√≠t√©s hiba: {e}")
src/gui/app_controller.py-678-            # Nem kritikus hiba, folytatjuk a m≈±k√∂d√©st
--
src/gui/app_controller.py-692-        # √Åltal√°nos worker signalok
src/gui/app_controller.py:693:        self.worker_manager.error_occurred.connect(self._on_worker_error)
src/gui/app_controller.py-694-        self.worker_manager.progress_updated.connect(self.progress_updated.emit)
--
src/gui/app_controller.py-766-                
src/gui/app_controller.py:767:        except Exception as e:
src/gui/app_controller.py:768:            self._logger.error(f"Provider selection error: {e}")
src/gui/app_controller.py-769-            return 'open-meteo'  # Fallback to free provider
--
src/gui/app_controller.py-811-                
src/gui/app_controller.py:812:        except Exception as e:
src/gui/app_controller.py:813:            self._logger.error(f"Usage tracking error: {e}")
src/gui/app_controller.py-814-    
--
src/gui/app_controller.py-843-            
src/gui/app_controller.py:844:        except Exception as e:
src/gui/app_controller.py:845:            self._logger.error(f"Provider change error: {e}")
src/gui/app_controller.py:846:            self.error_occurred.emit(f"Provider v√°lt√°si hiba: {e}")
src/gui/app_controller.py-847-    
--
src/gui/app_controller.py-861-        if not search_query or len(search_query.strip()) < 2:
src/gui/app_controller.py:862:            error_msg = "Legal√°bb 2 karakter sz√ºks√©ges a keres√©shez"
src/gui/app_controller.py:863:            self._logger.error(f"Validation error: {error_msg}")
src/gui/app_controller.py:864:            self.error_occurred.emit(error_msg)
src/gui/app_controller.py-865-            return
--
src/gui/app_controller.py-886-            
src/gui/app_controller.py:887:        except Exception as e:
src/gui/app_controller.py:888:            error_msg = f"Geocoding worker ind√≠t√°si hiba: {e}"
src/gui/app_controller.py:889:            self._logger.error(error_msg)
src/gui/app_controller.py-890-            import traceback
src/gui/app_controller.py-891-            traceback.print_exc()
src/gui/app_controller.py:892:            self.error_occurred.emit(error_msg)
src/gui/app_controller.py-893-            return
--
src/gui/app_controller.py-931-            
src/gui/app_controller.py:932:        except Exception as e:
src/gui/app_controller.py:933:            self._logger.error(f"Geocoding feldolgoz√°si hiba: {e}")
src/gui/app_controller.py-934-            import traceback
src/gui/app_controller.py-935-            traceback.print_exc()
src/gui/app_controller.py:936:            self.error_occurred.emit(f"Keres√©si eredm√©nyek feldolgoz√°si hiba: {e}")
src/gui/app_controller.py-937-    
--
src/gui/app_controller.py-979-                
src/gui/app_controller.py:980:            except Exception as e:
src/gui/app_controller.py-981-                self._logger.warning(f"‚ö†Ô∏è Eredm√©ny {i} feldolgoz√°si hiba: {e}")
--
src/gui/app_controller.py-1048-            
src/gui/app_controller.py:1049:        except Exception as e:
src/gui/app_controller.py:1050:            self._logger.error(f"Telep√ºl√©s kiv√°laszt√°si hiba: {e}")
src/gui/app_controller.py:1051:            self.error_occurred.emit(f"Telep√ºl√©s kiv√°laszt√°si hiba: {e}")
src/gui/app_controller.py-1052-    
--
src/gui/app_controller.py-1083-            
src/gui/app_controller.py:1084:        except Exception as e:
src/gui/app_controller.py:1085:            self._logger.error(f"Adatb√°zis ment√©si hiba: {e}")
src/gui/app_controller.py-1086-            # Nem kritikus hiba, nem szak√≠tjuk meg a folyamatot
--
src/gui/app_controller.py-1140-            if not processed_data:
src/gui/app_controller.py:1141:                self.error_occurred.emit("Nincs feldolgozhat√≥ id≈ëj√°r√°si adat")
src/gui/app_controller.py-1142-                return
--
src/gui/app_controller.py-1177-            
src/gui/app_controller.py:1178:        except Exception as e:
src/gui/app_controller.py:1179:            self._logger.error(f"Weather data feldolgoz√°si hiba: {e}")
src/gui/app_controller.py-1180-            import traceback
src/gui/app_controller.py-1181-            traceback.print_exc()
src/gui/app_controller.py:1182:            self.error_occurred.emit(f"Adatok feldolgoz√°si hiba: {e}")
src/gui/app_controller.py-1183-    
--
src/gui/app_controller.py-1265-            
src/gui/app_controller.py:1266:        except Exception as e:
src/gui/app_controller.py:1267:            self._logger.error(f"Weather data feldolgoz√°si hiba: {e}")
src/gui/app_controller.py-1268-            import traceback
--
src/gui/app_controller.py-1333-                        
src/gui/app_controller.py:1334:                except Exception as e:
src/gui/app_controller.py:1335:                    self._logger.warning(f"‚ö†Ô∏è Error processing day {daily_time}: {e}")
src/gui/app_controller.py-1336-                    daily_max_gusts.append(None)
--
src/gui/app_controller.py-1364-            
src/gui/app_controller.py:1365:        except Exception as e:
src/gui/app_controller.py:1366:            self._logger.error(f"Daily wind gusts calculation error: {e}")
src/gui/app_controller.py-1367-            import traceback
--
src/gui/app_controller.py-1432-                        
src/gui/app_controller.py:1433:                except Exception as e:
src/gui/app_controller.py-1434-                    self._logger.warning(f"‚ö†Ô∏è Rekord ment√©si hiba: {e}")
--
src/gui/app_controller.py-1444-            
src/gui/app_controller.py:1445:        except Exception as e:
src/gui/app_controller.py:1446:            self._logger.error(f"Weather data adatb√°zis hiba: {e}")
src/gui/app_controller.py-1447-            self.weather_saved_to_db.emit(False)
--
src/gui/app_controller.py-1451-    @Slot(str)
src/gui/app_controller.py:1452:    def _on_worker_error(self, error_message: str) -> None:
src/gui/app_controller.py-1453-        """
--
src/gui/app_controller.py-1456-        Args:
src/gui/app_controller.py:1457:            error_message: Hiba√ºzenet
src/gui/app_controller.py-1458-        """
src/gui/app_controller.py:1459:        self._logger.error(f"Worker error: {error_message}")
src/gui/app_controller.py-1460-        
src/gui/app_controller.py:1461:        self.status_updated.emit(f"Hiba: {error_message}")
src/gui/app_controller.py:1462:        self.error_occurred.emit(error_message)
src/gui/app_controller.py-1463-    
--
src/gui/app_controller.py-1490-            }
src/gui/app_controller.py:1491:        except Exception as e:
src/gui/app_controller.py:1492:            self._logger.error(f"Provider info hiba: {e}")
src/gui/app_controller.py-1493-            return {}
--
src/gui/app_controller.py-1511-            
src/gui/app_controller.py:1512:        except Exception as e:
src/gui/app_controller.py:1513:            self._logger.error(f"M≈±veletek megszak√≠t√°si hiba: {e}")
src/gui/app_controller.py-1514-    
--
src/gui/app_controller.py-1539-            
src/gui/app_controller.py:1540:        except Exception as e:
src/gui/app_controller.py-1541-            self._logger.warning(f"‚ö†Ô∏è Controller le√°ll√≠t√°si hiba: {e}")
--
src/gui/data_widgets.py-701-            
src/gui/data_widgets.py:702:        except Exception as e:
src/gui/data_widgets.py-703-            QMessageBox.critical(self, "Export hiba", f"Hiba az export sor√°n:\n{str(e)}")
--
src/gui/data_widgets.py-720-            if not data:
src/gui/data_widgets.py:721:                logger.error("‚ùå √úres adatok √©rkeztek a t√°bl√°zatba!")
src/gui/data_widgets.py-722-                self.clear_data()
--
src/gui/data_widgets.py-725-            if "daily" not in data:
src/gui/data_widgets.py:726:                logger.error("‚ùå Hi√°nyzik a 'daily' kulcs az adatokb√≥l!")
src/gui/data_widgets.py-727-                self.clear_data()
--
src/gui/data_widgets.py-736-            if df.empty:
src/gui/data_widgets.py:737:                logger.error("‚ùå DataFrame konvert√°l√°s sikertelen vagy √ºres!")
src/gui/data_widgets.py-738-                self.clear_data()
--
src/gui/data_widgets.py-771-            
src/gui/data_widgets.py:772:        except Exception as e:
src/gui/data_widgets.py:773:            logger.error(f"‚ùå WeatherDataTable.update_data() HIBA: {e}")
src/gui/data_widgets.py:774:            logger.exception("R√©szletes hiba:")
src/gui/data_widgets.py-775-            self.clear_data()
--
src/gui/data_widgets.py-784-        - R√©szletes debug logging
src/gui/data_widgets.py:785:        - Exception handling
src/gui/data_widgets.py-786-        
--
src/gui/data_widgets.py-819-            if not dates or len(dates) == 0:
src/gui/data_widgets.py:820:                logger.error("‚ùå Nincs d√°tum adat!")
src/gui/data_widgets.py-821-                return pd.DataFrame()
--
src/gui/data_widgets.py-823-            if not temp_max or len(temp_max) == 0:
src/gui/data_widgets.py:824:                logger.error("‚ùå Nincs maximum h≈ëm√©rs√©klet adat!")
src/gui/data_widgets.py-825-                return pd.DataFrame()
--
src/gui/data_widgets.py-885-            if df.empty:
src/gui/data_widgets.py:886:                logger.error("‚ùå L√©trehozott DataFrame √ºres!")
src/gui/data_widgets.py-887-                return pd.DataFrame()
--
src/gui/data_widgets.py-896-            
src/gui/data_widgets.py:897:        except Exception as e:
src/gui/data_widgets.py:898:            logger.error(f"‚ùå _convert_to_dataframe() HIBA: {e}")
src/gui/data_widgets.py:899:            logger.exception("R√©szletes hiba:")
src/gui/data_widgets.py-900-            return pd.DataFrame()
--
src/gui/main_windowold.py-33-‚úÖ Analytics View bypass - k√∂zvetlen t√©rk√©p friss√≠t√©s
src/gui/main_windowold.py:34:‚úÖ Error handling multi-city requestekhez
src/gui/main_windowold.py-35-‚úÖ Debug √ºzenetek teljes workflow k√∂vet√©s√©hez
--
src/gui/main_windowold.py-253-            self.current_theme = ThemeType(theme_name)
src/gui/main_windowold.py:254:        except ValueError:
src/gui/main_windowold.py-255-            self.current_theme = ThemeType.LIGHT
--
src/gui/main_windowold.py-744-            
src/gui/main_windowold.py:745:        except Exception as e:
src/gui/main_windowold.py:746:            print(f"‚ùå DEBUG: Provider status initialization error: {e}")
src/gui/main_windowold.py-747-            # Fallback to default values
--
src/gui/main_windowold.py-792-            
src/gui/main_windowold.py:793:        except Exception as e:
src/gui/main_windowold.py:794:            print(f"‚ùå DEBUG: Provider status display update error: {e}")
src/gui/main_windowold.py-795-    
--
src/gui/main_windowold.py-943-                print("‚úÖ DEBUG: Initial parameter sync triggered successfully")
src/gui/main_windowold.py:944:            except Exception as e:
src/gui/main_windowold.py:945:                print(f"‚ö†Ô∏è DEBUG: Initial parameter sync error: {e}")
src/gui/main_windowold.py-946-    
--
src/gui/main_windowold.py-1115-            # Analytics hib√°k
src/gui/main_windowold.py:1116:            def debug_analytics_error_occurred(error_msg: str):
src/gui/main_windowold.py:1117:                print(f"‚ùå DEBUG [ANALYTICS‚ÜíMAIN_WINDOW]: error_occurred: {error_msg}")
src/gui/main_windowold.py-1118-            
src/gui/main_windowold.py:1119:            self.analytics_panel.error_occurred.connect(debug_analytics_error_occurred)
src/gui/main_windowold.py:1120:            self.analytics_panel.error_occurred.connect(
src/gui/main_windowold.py-1121-                lambda msg: self.status_bar.showMessage(f"‚ùå Analytics hiba: {msg}")
src/gui/main_windowold.py-1122-            )
src/gui/main_windowold.py:1123:            print("‚úÖ DEBUG: AnalyticsView.error_occurred ‚Üí MainWindow status update CONNECTED")
src/gui/main_windowold.py-1124-            
--
src/gui/main_windowold.py-1165-            # Trend analysis hib√°k
src/gui/main_windowold.py:1166:            def debug_trend_error_occurred(error_msg: str):
src/gui/main_windowold.py:1167:                print(f"‚ùå DEBUG [TREND_ANALYTICS‚ÜíMAIN_WINDOW]: error_occurred: {error_msg}")
src/gui/main_windowold.py-1168-            
src/gui/main_windowold.py:1169:            self.trend_analytics_tab.error_occurred.connect(debug_trend_error_occurred)
src/gui/main_windowold.py:1170:            self.trend_analytics_tab.error_occurred.connect(self._on_trend_analysis_error)
src/gui/main_windowold.py:1171:            print("‚úÖ DEBUG: TrendAnalyticsTab.error_occurred ‚Üí MainWindow._on_trend_analysis_error CONNECTED")
src/gui/main_windowold.py-1172-            
--
src/gui/main_windowold.py-1228-        # Hibakezel√©s
src/gui/main_windowold.py:1229:        def debug_controller_error_occurred(message: str):
src/gui/main_windowold.py:1230:            print(f"‚ùå DEBUG [CONTROLLER‚ÜíMAIN_WINDOW]: error_occurred: '{message}'")
src/gui/main_windowold.py-1231-        
src/gui/main_windowold.py:1232:        self.controller.error_occurred.connect(debug_controller_error_occurred)
src/gui/main_windowold.py:1233:        self.controller.error_occurred.connect(self._show_error)
src/gui/main_windowold.py:1234:        print("‚úÖ DEBUG: Controller.error_occurred ‚Üí MainWindow._show_error CONNECTED")
src/gui/main_windowold.py-1235-        
--
src/gui/main_windowold.py-1266-            )
src/gui/main_windowold.py:1267:            self.controller.error_occurred.connect(
src/gui/main_windowold.py:1268:                self.control_panel.on_controller_error
src/gui/main_windowold.py-1269-            )
--
src/gui/main_windowold.py-1410-            
src/gui/main_windowold.py:1411:        except Exception as e:
src/gui/main_windowold.py:1412:            print(f"‚ùå DEBUG: Multi-city result distribution error: {e}")
src/gui/main_windowold.py:1413:            self._show_error(f"Multi-city eredm√©ny sz√©toszt√°si hiba: {e}")
src/gui/main_windowold.py-1414-    
--
src/gui/main_windowold.py-1494-                print(f"‚ùå DEBUG: Multi-city engine returned invalid result type: {type(result)}")
src/gui/main_windowold.py:1495:                error_msg = f"Multi-city engine hib√°s eredm√©ny t√≠pus: {type(result)}"
src/gui/main_windowold.py:1496:                self.status_bar.showMessage(f"‚ùå {error_msg}")
src/gui/main_windowold.py:1497:                self._show_error(error_msg)
src/gui/main_windowold.py-1498-                return
--
src/gui/main_windowold.py-1533-            
src/gui/main_windowold.py:1534:        except ImportError as e:
src/gui/main_windowold.py:1535:            print(f"‚ùå DEBUG: Multi-City Engine import error: {e}")
src/gui/main_windowold.py:1536:            error_msg = f"Multi-City Engine nem el√©rhet≈ë: {e}"
src/gui/main_windowold.py:1537:            self.status_bar.showMessage(f"‚ùå {error_msg}")
src/gui/main_windowold.py:1538:            self._show_error(error_msg)
src/gui/main_windowold.py-1539-            
src/gui/main_windowold.py:1540:        except Exception as e:
src/gui/main_windowold.py:1541:            print(f"‚ùå DEBUG: Multi-city request error: {e}")
src/gui/main_windowold.py-1542-            import traceback
--
src/gui/main_windowold.py-1544-            
src/gui/main_windowold.py:1545:            error_msg = f"Multi-city lek√©rdez√©s hiba: {e}"
src/gui/main_windowold.py:1546:            self.status_bar.showMessage(f"‚ùå {error_msg}")
src/gui/main_windowold.py:1547:            self._show_error(error_msg)
src/gui/main_windowold.py-1548-        
--
src/gui/main_windowold.py-1683-            
src/gui/main_windowold.py:1684:        except Exception as e:
src/gui/main_windowold.py:1685:            print(f"‚ùå DEBUG: Trend analysis completion handling error: {e}")
src/gui/main_windowold.py:1686:            self._show_error(f"Trend elemz√©s eredm√©ny feldolgoz√°si hiba: {e}")
src/gui/main_windowold.py-1687-    
src/gui/main_windowold.py:1688:    def _on_trend_analysis_error(self, error_msg: str) -> None:
src/gui/main_windowold.py-1689-        """
src/gui/main_windowold.py:1690:        üìà Trend analysis error handler - √öJ SLOT MET√ìDUS.
src/gui/main_windowold.py-1691-        
src/gui/main_windowold.py-1692-        Args:
src/gui/main_windowold.py:1693:            error_msg: Hiba√ºzenet
src/gui/main_windowold.py-1694-        """
src/gui/main_windowold.py:1695:        print(f"‚ùå DEBUG: _on_trend_analysis_error called: {error_msg}")
src/gui/main_windowold.py-1696-        
src/gui/main_windowold.py-1697-        # Status message
src/gui/main_windowold.py:1698:        error_message = f"‚ùå Trend elemz√©s hiba: {error_msg}"
src/gui/main_windowold.py:1699:        self.status_bar.showMessage(error_message)
src/gui/main_windowold.py-1700-        
src/gui/main_windowold.py:1701:        # Error dialog (opcion√°lis - lehet t√∫l zavar√≥)
src/gui/main_windowold.py:1702:        # self._show_error(f"Trend elemz√©s hiba: {error_msg}")
src/gui/main_windowold.py-1703-        
src/gui/main_windowold.py:1704:        print(f"‚úÖ DEBUG: Trend analysis error handled: {error_msg}")
src/gui/main_windowold.py-1705-    
--
src/gui/main_windowold.py-1749-            
src/gui/main_windowold.py:1750:        except Exception as e:
src/gui/main_windowold.py-1751-            print(f"‚ùå DEBUG: UI friss√≠t√©si hiba: {e}")
--
src/gui/main_windowold.py-1753-            traceback.print_exc()
src/gui/main_windowold.py:1754:            self._show_error(f"UI friss√≠t√©si hiba: {e}")
src/gui/main_windowold.py-1755-    
--
src/gui/main_windowold.py-1783-    
src/gui/main_windowold.py:1784:    def _show_error(self, message: str) -> None:
src/gui/main_windowold.py-1785-        """Hiba√ºzenet megjelen√≠t√©se."""
--
src/gui/main_windowold.py-1799-        else:
src/gui/main_windowold.py:1800:            self._show_error(f"Nem t√°mogatott export form√°tum: {format}")
src/gui/main_windowold.py-1801-    
--
src/gui/main_windowold.py-1806-        else:
src/gui/main_windowold.py:1807:            self._show_error(f"Grafikon export hiba: {filepath}")
src/gui/main_windowold.py-1808-    
--
src/gui/main_windowold.py-1813-        else:
src/gui/main_windowold.py:1814:            self._show_error(f"Adatok export hiba: {filepath}")
src/gui/main_windowold.py-1815-    
--
src/gui/main_windowold.py-1825-        if not weather_data:
src/gui/main_windowold.py:1826:            self._show_error("Nincsenek export√°lhat√≥ adatok. El≈ësz√∂r k√©rdezzen le adatokat.")
src/gui/main_windowold.py-1827-            return
--
src/gui/main_windowold.py-1835-        else:
src/gui/main_windowold.py:1836:            self._show_error("Adatt√°bl√°zat nem el√©rhet≈ë az exporthoz.")
src/gui/main_windowold.py-1837-    
--
src/gui/main_windowold.py-1843-        if not weather_data or not city_data:
src/gui/main_windowold.py:1844:            self._show_error("Nincsenek megjelen√≠thet≈ë adatok. El≈ësz√∂r k√©rdezzen le id≈ëj√°r√°si adatokat.")
src/gui/main_windowold.py-1845-            return
--
src/gui/main_windowold.py-1851-            dialog.exec()
src/gui/main_windowold.py:1852:        except Exception as e:
src/gui/main_windowold.py:1853:            self._show_error(f"Extr√©m id≈ëj√°r√°s ablak hiba: {e}")
src/gui/main_windowold.py-1854-    
--
src/gui/main_windowold.py-1894-        <p><i>üìä Analytics View bypass multi-city eset√©n - optimaliz√°lt workflow</i></p>
src/gui/main_windowold.py:1895:        <p><i>üîß Error handling + debug √ºzenetek teljes multi-city workflow-hoz</i></p>
src/gui/main_windowold.py-1896-        <p><i>üå§Ô∏è Tiszta Analytics ‚Üí T√©rk√©p Integration - Automatikus weather overlay!</i></p>
--
src/gui/main_windowold.py-2041-            self._apply_theme(theme_type)
src/gui/main_windowold.py:2042:        except ValueError:
src/gui/main_windowold.py-2043-            # Ha invalid t√©ma √©rt√©k, alap√©rtelmezett light
--
src/gui/main_windowold.py-2097-            
src/gui/main_windowold.py:2098:        except Exception as e:
src/gui/main_windowold.py-2099-            print(f"‚ö†Ô∏è DEBUG: Bez√°r√°si hiba: {e}")

üö® 9. SIGNAL CONNECTION PROBL√âM√ÅK keres√©se...
src/gui/trend_analytics_tab.py-1414-        """Signal connections be√°ll√≠t√°sa (V√ÅLTOZATLAN)"""
src/gui/trend_analytics_tab.py-1415-        # Analyze button
src/gui/trend_analytics_tab.py:1416:        self.analyze_button.clicked.connect(self.start_trend_analysis)
src/gui/trend_analytics_tab.py-1417-        
src/gui/trend_analytics_tab.py-1418-        # Location selection
--
src/gui/trend_analytics_tab.py-1463-            # Worker signals connecting
src/gui/trend_analytics_tab.py-1464-            self.current_worker.progress_updated.connect(self.progress_bar.setValue)
src/gui/trend_analytics_tab.py:1465:            self.current_worker.data_received.connect(self.on_analysis_completed)
src/gui/trend_analytics_tab.py:1466:            self.current_worker.error_occurred.connect(self.on_analysis_error)
src/gui/trend_analytics_tab.py-1467-            self.current_worker.finished.connect(self.on_worker_finished)
src/gui/trend_analytics_tab.py-1468-            
--
src/gui/hungarian_map_tab.py-2176-    
src/gui/hungarian_map_tab.py-2177-    # Analytics Sync button connections
src/gui/hungarian_map_tab.py:2178:    analysis_sync_btn.clicked.connect(test_analysis_sync)
src/gui/hungarian_map_tab.py-2179-    weather_sync_btn.clicked.connect(test_weather_sync)
src/gui/hungarian_map_tab.py-2180-    date_sync_btn.clicked.connect(test_date_sync)
--
src/gui/control_panel.py-191-        
src/gui/control_panel.py-192-        # === 1. ANALYSIS TYPE WIDGET ===
src/gui/control_panel.py:193:        self.analysis_type_widget.analysis_type_changed.connect(self._on_analysis_type_changed)
src/gui/control_panel.py-194-        
src/gui/control_panel.py-195-        # === 2. LOCATION WIDGET ===
--
src/gui/control_panel.py-218-        self.query_control_widget.cancel_requested.connect(self._on_cancel_requested)
src/gui/control_panel.py-219-        
src/gui/control_panel.py:220:        print("üéØ Clean signal routing connected + MULTI-CITY signals - Single analysis_requested signal")
src/gui/control_panel.py-221-    
src/gui/control_panel.py-222-    def _setup_theme(self) -> None:
--
src/gui/main_window.py-197-        
src/gui/main_window.py-198-        print("üîó DEBUG: Connecting CLEAN signals + ANALYTICS SIGNAL HANDLING + V√ÅROS ELEMZ√âS FIX...")
src/gui/main_window.py:199:        self._connect_mvc_signals_clean_with_city_analysis_fix()
src/gui/main_window.py-200-        print("‚úÖ DEBUG: CLEAN SIGNAL CHAIN + ANALYTICS SIGNAL HANDLING + V√ÅROS ELEMZ√âS SIGNAL FIX CONNECTED!")
src/gui/main_window.py-201-        
--
src/gui/main_window.py-410-        self.trend_action = QAction("Trend Elemz√©s", self)
src/gui/main_window.py-411-        self.trend_action.setToolTip("Hossz√∫ t√°v√∫ klimatikus trendek elemz√©se professional vizualiz√°ci√≥kkal")
src/gui/main_window.py:412:        self.trend_action.triggered.connect(lambda: self._switch_view("trend_analysis"))
src/gui/main_window.py-413-        self.trend_action.setCheckable(True)
src/gui/main_window.py-414-        self.toolbar.addAction(self.trend_action)
--
src/gui/main_window.py-939-    # === üßπ CLEAN SIGNAL CHAIN - DRASZTIKUSAN EGYSZER≈∞S√çTVE + üö® ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çTVA + V√ÅROS ELEMZ√âS SIGNAL FIX! ===
src/gui/main_window.py-940-    
src/gui/main_window.py:941:    def _connect_mvc_signals_clean_with_city_analysis_fix(self) -> None:
src/gui/main_window.py-942-        """
src/gui/main_window.py-943-        üö® KRITIKUS: ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çTVA + CLEAN MVC komponensek signal-slot √∂sszek√∂t√©se + V√ÅROS ELEMZ√âS ADATFOLYAM FIX!
--
src/gui/main_window.py-987-        # Elemz√©s indul√°sa
src/gui/main_window.py-988-        if hasattr(self.controller, 'analysis_started'):
src/gui/main_window.py:989:            self.controller.analysis_started.connect(self._on_analysis_started)
src/gui/main_window.py-990-            print("‚úÖ CLEAN: AppController.analysis_started ‚Üí MainWindow._on_analysis_started CONNECTED")
src/gui/main_window.py-991-        
src/gui/main_window.py-992-        # üéØ KRITIKUS: Elemz√©s befejez√©se (SIKER) - V√ÅROS ELEMZ√âS FIX!
src/gui/main_window.py-993-        if hasattr(self.controller, 'analysis_completed'):
src/gui/main_window.py:994:            self.controller.analysis_completed.connect(self._on_analysis_completed_with_city_fix)
src/gui/main_window.py-995-            print("üéØ ‚úÖ KRITIKUS: AppController.analysis_completed ‚Üí MainWindow._on_analysis_completed_with_city_fix CONNECTED (V√ÅROS ELEMZ√âS FIX)!")
src/gui/main_window.py-996-        
src/gui/main_window.py-997-        # Elemz√©s hiba
src/gui/main_window.py-998-        if hasattr(self.controller, 'analysis_failed'):
src/gui/main_window.py:999:            self.controller.analysis_failed.connect(self._on_analysis_failed)
src/gui/main_window.py-1000-            print("‚úÖ CLEAN: AppController.analysis_failed ‚Üí MainWindow._on_analysis_failed CONNECTED")
src/gui/main_window.py-1001-        
src/gui/main_window.py-1002-        # Elemz√©s megszak√≠tva
src/gui/main_window.py-1003-        if hasattr(self.controller, 'analysis_cancelled'):
src/gui/main_window.py:1004:            self.controller.analysis_cancelled.connect(self._on_analysis_cancelled)
src/gui/main_window.py-1005-            print("‚úÖ CLEAN: AppController.analysis_cancelled ‚Üí MainWindow._on_analysis_cancelled CONNECTED")
src/gui/main_window.py-1006-        
--
src/gui/app_controller.py-119-        # Signal kapcsol√°sok
src/gui/app_controller.py-120-        self._connect_worker_signals()
src/gui/app_controller.py:121:        self._connect_analysis_worker_signals()
src/gui/app_controller.py-122-        
src/gui/app_controller.py-123-        # Provider preferences bet√∂lt√©se
--
src/gui/app_controller.py-126-        self._logger.info("‚úÖ AppController inicializ√°lva (CLEAN ARCHITECTURE)")
src/gui/app_controller.py-127-    
src/gui/app_controller.py:128:    def _connect_analysis_worker_signals(self) -> None:
src/gui/app_controller.py-129-        """üéØ ANALYSIS WORKER signal bek√∂t√©sek."""
src/gui/app_controller.py-130-        self._logger.info("üîó Analysis worker signals kapcsol√°sa...")
--
src/gui/app_controller.py-198-            
src/gui/app_controller.py-199-            # === 4. WORKER SIGNAL BEK√ñT√âSEK ===
src/gui/app_controller.py:200:            self.active_analysis_worker.progress_updated.connect(self._on_analysis_progress)
src/gui/app_controller.py:201:            self.active_analysis_worker.analysis_completed.connect(self._on_analysis_completed)
src/gui/app_controller.py:202:            self.active_analysis_worker.analysis_failed.connect(self._on_analysis_failed)
src/gui/app_controller.py:203:            self.active_analysis_worker.analysis_cancelled.connect(self._on_analysis_cancelled)
src/gui/app_controller.py-204-            
src/gui/app_controller.py-205-            # === 5. PROVIDER ROUTING INTEGR√ÅCI√ì ===
--
src/gui/main_windowold.py-9-‚úÖ _setup_control_panel_connections() met√≥dus implement√°lva
src/gui/main_windowold.py-10-‚úÖ Debug wrappers minden signal t√≠pushoz
src/gui/main_windowold.py:11:‚úÖ Signal connections: analysis_parameters_changed, weather_parameters_changed, date_range_changed, parameters_bundle_changed
src/gui/main_windowold.py-12-‚úÖ ControlPanel ‚Üí HungarianMapTab direkt signal connections
src/gui/main_windowold.py-13-‚úÖ Comprehensive parameter bundle alap√∫ sync
--
src/gui/main_windowold.py-298-        self.trend_action = QAction("Trend Elemz√©s", self)
src/gui/main_windowold.py-299-        self.trend_action.setToolTip("Hossz√∫ t√°v√∫ klimatikus trendek elemz√©se professional vizualiz√°ci√≥kkal")
src/gui/main_windowold.py:300:        self.trend_action.triggered.connect(lambda: self._switch_view("trend_analysis"))
src/gui/main_windowold.py-301-        self.trend_action.setCheckable(True)
src/gui/main_windowold.py-302-        self.toolbar.addAction(self.trend_action)
--
src/gui/main_windowold.py-1104-                print("üî• DEBUG [ANALYTICS‚ÜíMAIN_WINDOW]: analysis_started (refaktor√°lt)")
src/gui/main_windowold.py-1105-            
src/gui/main_windowold.py:1106:            self.analytics_panel.analysis_started.connect(debug_analytics_analysis_started)
src/gui/main_windowold.py-1107-            self.analytics_panel.analysis_started.connect(
src/gui/main_windowold.py-1108-                lambda: self.status_bar.showMessage("üî• Analytics elemz√©s folyamatban... (refaktor√°lt)")
--
src/gui/main_windowold.py-1148-                print("üìà DEBUG [TREND_ANALYTICS‚ÜíMAIN_WINDOW]: analysis_started")
src/gui/main_windowold.py-1149-            
src/gui/main_windowold.py:1150:            self.trend_analytics_tab.analysis_started.connect(debug_trend_analysis_started)
src/gui/main_windowold.py-1151-            self.trend_analytics_tab.analysis_started.connect(
src/gui/main_windowold.py-1152-                lambda: self.status_bar.showMessage("üìà Trend elemz√©s folyamatban...")
--
src/gui/main_windowold.py-1159-                print(f"üìà DEBUG [TREND_ANALYTICS‚ÜíMAIN_WINDOW]: analysis_completed: {city_name}")
src/gui/main_windowold.py-1160-            
src/gui/main_windowold.py:1161:            self.trend_analytics_tab.analysis_completed.connect(debug_trend_analysis_completed)
src/gui/main_windowold.py:1162:            self.trend_analytics_tab.analysis_completed.connect(self._on_trend_analysis_completed)
src/gui/main_windowold.py-1163-            print("‚úÖ DEBUG: TrendAnalyticsTab.analysis_completed ‚Üí MainWindow._on_trend_analysis_completed CONNECTED")
src/gui/main_windowold.py-1164-            
--
src/gui/main_windowold.py-1168-            
src/gui/main_windowold.py-1169-            self.trend_analytics_tab.error_occurred.connect(debug_trend_error_occurred)
src/gui/main_windowold.py:1170:            self.trend_analytics_tab.error_occurred.connect(self._on_trend_analysis_error)
src/gui/main_windowold.py-1171-            print("‚úÖ DEBUG: TrendAnalyticsTab.error_occurred ‚Üí MainWindow._on_trend_analysis_error CONNECTED")
src/gui/main_windowold.py-1172-            

üö® 10. SIGNAL EMIT PROBL√âM√ÅK keres√©se...
src/gui/workers/analysis_worker.py-144-                self._run_county_analysis()
src/gui/workers/analysis_worker.py-145-            else:
src/gui/workers/analysis_worker.py:146:                self._emit_error(f"Ismeretlen elemz√©s t√≠pus: {analysis_type}")
src/gui/workers/analysis_worker.py-147-                
src/gui/workers/analysis_worker.py-148-        except Exception as e:
--
src/gui/hungarian_map_tab.py-778-            
src/gui/hungarian_map_tab.py-779-            # Signal kik√ºld√©se
src/gui/hungarian_map_tab.py:780:            self.analytics_sync_completed.emit("analysis_parameters")
src/gui/hungarian_map_tab.py-781-            
src/gui/hungarian_map_tab.py-782-        except Exception as e:
--
src/gui/control_panel.py-327-            
src/gui/control_panel.py-328-            # üéØ F≈êSIGNAL KIBOCS√ÅT√ÅSA - CLEAN ARCHITECTURE
src/gui/control_panel.py:329:            self.analysis_requested.emit(analysis_request)
src/gui/control_panel.py-330-            
src/gui/control_panel.py:331:            print(f"üéØ CLEAN: analysis_requested emitted ‚Üí {analysis_request['analysis_type']}")
src/gui/control_panel.py-332-            
src/gui/control_panel.py-333-            # üîß AUTO-RESET FETCH STATE - Error eset√©re timeout
--
src/gui/app_controller.py-211-            if success:
src/gui/app_controller.py-212-                # Ind√≠t√°s signalok
src/gui/app_controller.py:213:                self.analysis_started.emit(analysis_type)
src/gui/app_controller.py:214:                self.status_updated.emit(f"üéØ {analysis_type.replace('_', ' ').title()} elemz√©s ind√≠tva...")
src/gui/app_controller.py-215-                
src/gui/app_controller.py-216-                self._logger.info(f"‚úÖ Analysis worker elind√≠tva: {analysis_type}")
--
src/gui/app_controller.py-247-            
src/gui/app_controller.py-248-            if analysis_type not in valid_types:
src/gui/app_controller.py:249:                self.analysis_failed.emit(f"√ârv√©nytelen elemz√©s t√≠pus: {analysis_type}")
src/gui/app_controller.py-250-                return False
src/gui/app_controller.py-251-            
--
src/gui/app_controller.py-421-            # Success signalok
src/gui/app_controller.py-422-            self.analysis_completed.emit(processed_result)
src/gui/app_controller.py:423:            self.status_updated.emit(f"‚úÖ {analysis_type.replace('_', ' ').title()} elemz√©s befejezve ({duration:.1f}s)")
src/gui/app_controller.py-424-            
src/gui/app_controller.py-425-            # T√≠pus-specifikus eredm√©ny tov√°bb√≠t√°s (backwards compatibility)

üêõ 11. DEBUG PRINT keres√©se...
src/gui/map_visualizer.py-1392-        """
src/gui/map_visualizer.py:1393:        print(f"üåê DEBUG: HTTP Server map generated - {file_path}")
src/gui/map_visualizer.py-1394-        
--
src/gui/map_visualizer.py-1431-        try:
src/gui/map_visualizer.py:1432:            print("üåê DEBUG: Starting HTTP URL loading...")
src/gui/map_visualizer.py-1433-            
--
src/gui/map_visualizer.py-1439-            
src/gui/map_visualizer.py:1440:            print(f"üåê DEBUG: Loading map from HTTP URL: {http_url}")
src/gui/map_visualizer.py-1441-            
--
src/gui/map_visualizer.py-1598-        """
src/gui/map_visualizer.py:1599:        print(f"üé® DEBUG: Setting active overlay parameter: {parameter}")
src/gui/map_visualizer.py-1600-        
--
src/gui/map_visualizer.py-1615-        
src/gui/map_visualizer.py:1616:        print(f"‚úÖ DEBUG: Active overlay parameter set: {parameter} ‚Üí {display_name}")
src/gui/map_visualizer.py-1617-    
--
src/gui/map_visualizer.py-1621-        """
src/gui/map_visualizer.py:1622:        print("üßπ DEBUG: Clearing active overlay parameter")
src/gui/map_visualizer.py-1623-        
--
src/gui/map_visualizer.py-2090-    def show_debug_info():
src/gui/map_visualizer.py:2091:        print("üîç HTTP szerver debug info megjelen√≠t√©se...")
src/gui/map_visualizer.py-2092-        http_info = map_visualizer.get_http_debug_info()
--
src/gui/workers/data_fetch_worker.py-204-            
src/gui/workers/data_fetch_worker.py:205:            print(f"üåç DEBUG: Provider routing - {get_source_display_name(selected_provider)}")
src/gui/workers/data_fetch_worker.py:206:            print(f"üå™Ô∏è DEBUG: Wind gusts k√©r√©s: {self.latitude:.4f}, {self.longitude:.4f}")
src/gui/workers/data_fetch_worker.py:207:            print(f"üìÖ DEBUG: Id≈ëszak: {self.start_date} - {self.end_date}")
src/gui/workers/data_fetch_worker.py:208:            print(f"üîó DEBUG: API URL: {api_url}")
src/gui/workers/data_fetch_worker.py-209-            
--
src/gui/workers/data_fetch_worker.py-227-                        if provider != selected_provider:
src/gui/workers/data_fetch_worker.py:228:                            print(f"üîÑ DEBUG: Provider fallback: {selected_provider} ‚Üí {provider}")
src/gui/workers/data_fetch_worker.py-229-                            self.provider_fallback_occurred.emit(selected_provider, provider)
--
src/gui/workers/data_fetch_worker.py-235-                except Exception as e:
src/gui/workers/data_fetch_worker.py:236:                    print(f"‚ùå DEBUG: Provider {provider} failed: {e}")
src/gui/workers/data_fetch_worker.py-237-                    log_provider_usage_event(provider, "weather_data", False)
--
src/gui/workers/data_fetch_worker.py-356-                if response.status_code != 200:
src/gui/workers/data_fetch_worker.py:357:                    print(f"‚ùå DEBUG: {provider} API hiba: {response.status_code}")
src/gui/workers/data_fetch_worker.py-358-                    return False
--
src/gui/workers/data_fetch_worker.py-368-        except httpx.TimeoutException:
src/gui/workers/data_fetch_worker.py:369:            print(f"‚è±Ô∏è DEBUG: {provider} API timeout")
src/gui/workers/data_fetch_worker.py-370-            return False
src/gui/workers/data_fetch_worker.py-371-        except httpx.RequestError as e:
src/gui/workers/data_fetch_worker.py:372:            print(f"üåê DEBUG: {provider} network error: {e}")
src/gui/workers/data_fetch_worker.py-373-            return False
src/gui/workers/data_fetch_worker.py-374-        except json.JSONDecodeError:
src/gui/workers/data_fetch_worker.py:375:            print(f"üìÑ DEBUG: {provider} JSON decode error")
src/gui/workers/data_fetch_worker.py-376-            return False
src/gui/workers/data_fetch_worker.py-377-        except Exception as e:
src/gui/workers/data_fetch_worker.py:378:            print(f"‚ùå DEBUG: {provider} unexpected error: {e}")
src/gui/workers/data_fetch_worker.py-379-            return False
--
src/gui/workers/data_fetch_worker.py-416-        
src/gui/workers/data_fetch_worker.py:417:        print(f"‚úÖ DEBUG: {daily_record_count} napi rekord lek√©rdezve")
src/gui/workers/data_fetch_worker.py:418:        print(f"‚úÖ DEBUG: {hourly_record_count} √≥r√°nk√©nti rekord lek√©rdezve")
src/gui/workers/data_fetch_worker.py:419:        print(f"üå™Ô∏è DEBUG: {wind_gusts_count} sz√©ll√∂k√©s rekord lek√©rdezve")
src/gui/workers/data_fetch_worker.py-420-        
--
src/gui/workers/data_fetch_worker.py-426-                max_gust = max(valid_gusts)
src/gui/workers/data_fetch_worker.py:427:                print(f"üå™Ô∏è DEBUG: Maximum sz√©ll√∂k√©s: {max_gust:.1f} km/h")
src/gui/workers/data_fetch_worker.py-428-                
--
src/gui/workers/data_fetch_worker.py-430-                if max_gust < 60:
src/gui/workers/data_fetch_worker.py:431:                    print(f"‚ö†Ô∏è  DEBUG: Sz√©ll√∂k√©s m√©g mindig alacsony: {max_gust:.1f} km/h")
src/gui/workers/data_fetch_worker.py-432-                else:
src/gui/workers/data_fetch_worker.py:433:                    print(f"‚úÖ DEBUG: Realistic sz√©ll√∂k√©s √©rt√©kek: {max_gust:.1f} km/h")
src/gui/workers/data_fetch_worker.py-434-            else:
src/gui/workers/data_fetch_worker.py:435:                print(f"‚ùå DEBUG: Nincs √©rv√©nyes sz√©ll√∂k√©s adat!")
src/gui/workers/data_fetch_worker.py-436-        else:
src/gui/workers/data_fetch_worker.py:437:            print(f"‚ùå DEBUG: Nincs sz√©ll√∂k√©s adat az API v√°laszban!")
src/gui/workers/data_fetch_worker.py-438-
--
src/gui/workers/data_fetch_worker.py-564-        
src/gui/workers/data_fetch_worker.py:565:        print("‚úÖ DEBUG: WorkerManager inicializ√°lva (PROVIDER ROUTING + WIND GUSTS t√°mogat√°ssal)")
src/gui/workers/data_fetch_worker.py-566-    
--
src/gui/workers/data_fetch_worker.py-590-        self.worker_started.emit("geocoding")
src/gui/workers/data_fetch_worker.py:591:        print(f"‚úÖ DEBUG: Geocoding worker ind√≠tva - {worker_id}")
src/gui/workers/data_fetch_worker.py-592-        return worker_id
--
src/gui/workers/data_fetch_worker.py-620-        self.worker_started.emit("weather_data")
src/gui/workers/data_fetch_worker.py:621:        print(f"‚úÖ DEBUG: Weather worker ind√≠tva PROVIDER ROUTING + WIND GUSTS t√°mogat√°ssal - {worker_id}")
src/gui/workers/data_fetch_worker.py-622-        return worker_id
--
src/gui/workers/data_fetch_worker.py-642-        self.worker_started.emit("sql_query")
src/gui/workers/data_fetch_worker.py:643:        print(f"‚úÖ DEBUG: SQL query worker ind√≠tva - {worker_id}")
src/gui/workers/data_fetch_worker.py-644-        return worker_id
--
src/gui/workers/data_fetch_worker.py-647-        """Worker hiba kezel√©se."""
src/gui/workers/data_fetch_worker.py:648:        print(f"‚ùå DEBUG: Worker error: {error_message}")
src/gui/workers/data_fetch_worker.py-649-        self.error_occurred.emit(error_message)
--
src/gui/workers/data_fetch_worker.py-670-                self.worker_finished.emit(worker_type)
src/gui/workers/data_fetch_worker.py:671:                print(f"‚úÖ DEBUG: Worker befejezve: {worker_id}")
src/gui/workers/data_fetch_worker.py-672-        finally:
--
src/gui/workers/data_fetch_worker.py-678-        """Provider v√°ltoz√°s kezel√©se."""
src/gui/workers/data_fetch_worker.py:679:        print(f"üîÑ DEBUG: Provider changed to: {get_source_display_name(new_provider)}")
src/gui/workers/data_fetch_worker.py-680-        self.last_successful_provider = new_provider
--
src/gui/workers/data_fetch_worker.py-684-        """Provider fallback kezel√©se."""
src/gui/workers/data_fetch_worker.py:685:        print(f"üîÑ DEBUG: Provider fallback: {original_provider} ‚Üí {fallback_provider}")
src/gui/workers/data_fetch_worker.py-686-        
--
src/gui/workers/data_fetch_worker.py-697-        """Provider valid√°l√°si hiba kezel√©se."""
src/gui/workers/data_fetch_worker.py:698:        print(f"‚ùå DEBUG: Provider validation failed: {provider} - {error_message}")
src/gui/workers/data_fetch_worker.py-699-        
--
src/gui/workers/data_fetch_worker.py-710-        """Provider haszn√°lat tracking."""
src/gui/workers/data_fetch_worker.py:711:        print(f"üìä DEBUG: Provider usage tracked: {provider} - {'SUCCESS' if success else 'FAILED'}")
src/gui/workers/data_fetch_worker.py-712-        
--
src/gui/workers/data_fetch_worker.py-746-            self.last_successful_provider = None
src/gui/workers/data_fetch_worker.py:747:            print("üîÑ DEBUG: Provider states reset")
src/gui/workers/data_fetch_worker.py-748-        finally:
--
src/gui/workers/data_fetch_worker.py-759-                worker.cancel()
src/gui/workers/data_fetch_worker.py:760:                print(f"üõë DEBUG: Worker megszak√≠tva: {worker_id}")
src/gui/workers/data_fetch_worker.py-761-                return True
--
src/gui/workers/data_fetch_worker.py-771-                worker.cancel()
src/gui/workers/data_fetch_worker.py:772:                print(f"üõë DEBUG: Worker cancel: {worker_id}")
src/gui/workers/data_fetch_worker.py-773-        finally:
--
src/gui/workers/data_fetch_worker.py-775-        
src/gui/workers/data_fetch_worker.py:776:        print("üõë DEBUG: √ñsszes worker megszak√≠tva")
src/gui/workers/data_fetch_worker.py-777-    
--
src/gui/workers/data_fetch_worker.py-795-        """üåç PROVIDER ROUTING + üå™Ô∏è WIND GUSTS: WorkerManager le√°ll√≠t√°sa."""
src/gui/workers/data_fetch_worker.py:796:        print("üõë DEBUG: WorkerManager le√°ll√≠t√°sa...")
src/gui/workers/data_fetch_worker.py-797-        
--
src/gui/workers/data_fetch_worker.py-823-        
src/gui/workers/data_fetch_worker.py:824:        print("‚úÖ DEBUG: WorkerManager le√°ll√≠tva (PROVIDER ROUTING + WIND GUSTS)")
src/gui/workers/data_fetch_worker.py-825-
--
src/gui/workers/data_fetch_worker.py-899-    
src/gui/workers/data_fetch_worker.py:900:    print(f"üåç DEBUG: Weather worker created with provider: {preferred_provider}")
src/gui/workers/data_fetch_worker.py-901-    return worker
--
src/gui/map_view.py-69-        
src/gui/map_view.py:70:        print("üó∫Ô∏è DEBUG: MapView initialized with Folium HungarianMapTab integration")
src/gui/map_view.py-71-    
--
src/gui/map_view.py-83-        
src/gui/map_view.py:84:        print("‚úÖ DEBUG: MapView UI setup complete with Folium HungarianMapTab")
src/gui/map_view.py-85-    
--
src/gui/map_view.py-105-            
src/gui/map_view.py:106:            print("‚úÖ DEBUG: MapView Folium signal forwarding setup complete")
src/gui/map_view.py-107-        else:
src/gui/map_view.py:108:            print("‚ùå DEBUG: MapTab is None - cannot setup signal forwarding")
src/gui/map_view.py-109-    
--
src/gui/map_view.py-267-            self.map_tab.set_theme(theme)
src/gui/map_view.py:268:            print(f"üé® DEBUG: MapView Folium theme set to: {theme}")
src/gui/map_view.py-269-    
--
src/gui/map_view.py-278-            self.map_tab.set_weather_data(weather_data)
src/gui/map_view.py:279:            print("üå§Ô∏è DEBUG: Weather data set for Folium overlay via MapView")
src/gui/map_view.py-280-    
--
src/gui/map_view.py-289-            self.map_tab.toggle_auto_sync(enabled)
src/gui/map_view.py:290:            print(f"üîó DEBUG: MapView auto-sync {'enabled' if enabled else 'disabled'}")
src/gui/map_view.py-291-    
--
src/gui/map_view.py-323-        if county_name and self.focus_on_county(county_name):
src/gui/map_view.py:324:            print(f"üéØ DEBUG: Folium map focused on county from external selection: {county_name}")
src/gui/map_view.py-325-        else:
src/gui/map_view.py:326:            print(f"‚ö†Ô∏è DEBUG: Could not focus Folium map on county from external selection: {county_name}")
src/gui/map_view.py-327-    
--
src/gui/map_view.py-335-        if self.focus_on_county(county_name):
src/gui/map_view.py:336:            print(f"üéØ DEBUG: Folium map focused on external county click: {county_name}")
src/gui/map_view.py-337-            
--
src/gui/map_view.py-342-        else:
src/gui/map_view.py:343:            print(f"‚ö†Ô∏è DEBUG: Could not handle external county click: {county_name}")
src/gui/map_view.py-344-    
--
src/gui/map_view.py-383-            map_visualizer.highlight_counties(county_names)
src/gui/map_view.py:384:            print(f"‚ú® DEBUG: Highlighted counties on Folium map: {county_names}")
src/gui/map_view.py-385-    
--
src/gui/map_view.py-395-            map_visualizer.set_selected_county(county_name)
src/gui/map_view.py:396:            print(f"üéØ DEBUG: Selected county set on Folium map: {county_name}")
src/gui/map_view.py-397-    
--
src/gui/map_view.py-407-            map_visualizer.toggle_weather_overlay(enabled)
src/gui/map_view.py:408:            print(f"üå§Ô∏è DEBUG: Folium weather overlay {'enabled' if enabled else 'disabled'}")
src/gui/map_view.py-409-    
--
src/gui/map_view.py-435-        
src/gui/map_view.py:436:        print(f"üé® DEBUG: MapView Folium theme applied: {theme_name}")
src/gui/map_view.py-437-    
--
src/gui/chart_container.py-92-        
src/gui/chart_container.py:93:        print("‚úÖ DEBUG: ChartsContainer initialized with refactored chart modules + SimplifiedThemeManager integration + Wind Gusts")
src/gui/chart_container.py-94-    
--
src/gui/chart_container.py-192-        
src/gui/chart_container.py:193:        print("‚úÖ DEBUG: ChartsContainer signals connected including SimplifiedThemeManager + Wind Gusts")
src/gui/chart_container.py-194-    
--
src/gui/chart_container.py-201-        """
src/gui/chart_container.py:202:        print(f"üé® DEBUG: ChartsContainer theme changing to: {theme_name}")
src/gui/chart_container.py-203-        
--
src/gui/chart_container.py-214-                except Exception as e:
src/gui/chart_container.py:215:                    print(f"‚ö†Ô∏è DEBUG: Chart theme update error for {chart.__class__.__name__}: {e}")
src/gui/chart_container.py-216-        
src/gui/chart_container.py:217:        print(f"‚úÖ DEBUG: ChartsContainer theme updated: {theme_name} - ALL CHARTS SYNCHRONIZED")
src/gui/chart_container.py-218-    
--
src/gui/chart_container.py-223-        """
src/gui/chart_container.py:224:        print(f"üîß DEBUG: _toggle_grid_optimized({enabled}) - OPTIMALIZ√ÅLT VERZI√ì + SIMPLIFIED THEMEMANAGER")
src/gui/chart_container.py-225-        
--
src/gui/chart_container.py-248-            
src/gui/chart_container.py:249:            print(f"‚úÖ DEBUG: Grid toggle optimaliz√°lva: {enabled} (SimplifiedThemeManager colors)")
src/gui/chart_container.py-250-            
src/gui/chart_container.py-251-        except Exception as e:
src/gui/chart_container.py:252:            print(f"‚ùå DEBUG: Grid toggle hiba: {e}")
src/gui/chart_container.py-253-    
--
src/gui/chart_container.py-257-        """
src/gui/chart_container.py:258:        print(f"üîß DEBUG: _toggle_legend_optimized({enabled}) - OPTIMALIZ√ÅLT VERZI√ì + SIMPLIFIED THEMEMANAGER")
src/gui/chart_container.py-259-        
--
src/gui/chart_container.py-296-            
src/gui/chart_container.py:297:            print(f"‚úÖ DEBUG: Legend toggle optimaliz√°lva: {enabled} (SimplifiedThemeManager colors)")
src/gui/chart_container.py-298-            
src/gui/chart_container.py-299-        except Exception as e:
src/gui/chart_container.py:300:            print(f"‚ùå DEBUG: Legend toggle hiba: {e}")
src/gui/chart_container.py-301-    
--
src/gui/chart_container.py-321-        """
src/gui/chart_container.py:322:        print("üìà DEBUG: ChartsContainer.update_charts() - DUPLIK√ÅCI√ì MENTES + SIMPLIFIED THEMEMANAGER + WIND GUSTS VERZI√ì")
src/gui/chart_container.py-323-        
--
src/gui/chart_container.py-326-            
src/gui/chart_container.py:327:            print("üìà DEBUG: Updating all professional charts with SimplifiedThemeManager + Wind Gusts...")
src/gui/chart_container.py-328-            
--
src/gui/chart_container.py-338-            
src/gui/chart_container.py:339:            print("‚úÖ DEBUG: All professional charts updated - DUPLIK√ÅCI√ì MENTES + SIMPLIFIED THEMEMANAGER + WIND GUSTS")
src/gui/chart_container.py-340-            
src/gui/chart_container.py-341-        except Exception as e:
src/gui/chart_container.py:342:            print(f"‚ùå DEBUG: ChartsContainer friss√≠t√©si hiba: {e}")
src/gui/chart_container.py-343-    
--
src/gui/chart_container.py-355-        
src/gui/chart_container.py:356:        print("üßπ DEBUG: All professional charts cleared (including Wind Gusts)")
src/gui/chart_container.py-357-    
--
src/gui/chart_container.py-364-        """
src/gui/chart_container.py:365:        print("‚ö†Ô∏è DEBUG: apply_theme() DEPRECATED - use SimplifiedThemeManager.set_theme() instead")
src/gui/chart_container.py-366-        
--
src/gui/hungarian_map_tab.py-166-        
src/gui/hungarian_map_tab.py:167:        print("üó∫Ô∏è DEBUG: HungarianMapTab initialized with Analytics ‚Üí Map Sync TELJES IMPLEMENT√ÅCI√ì + PARAM√âTER MEM√ìRIA v3.0")
src/gui/hungarian_map_tab.py-168-    
--
src/gui/hungarian_map_tab.py-175-            self.weather_bridge = WeatherDataBridge()
src/gui/hungarian_map_tab.py:176:            print("‚úÖ DEBUG: WeatherDataBridge initialized")
src/gui/hungarian_map_tab.py-177-            
--
src/gui/hungarian_map_tab.py-179-            self.multi_city_engine = MultiCityEngine()
src/gui/hungarian_map_tab.py:180:            print("‚úÖ DEBUG: MultiCityEngine initialized")
src/gui/hungarian_map_tab.py-181-            
src/gui/hungarian_map_tab.py-182-        except Exception as e:
src/gui/hungarian_map_tab.py:183:            print(f"‚ùå DEBUG: Weather components initialization error: {e}")
src/gui/hungarian_map_tab.py-184-            self.weather_bridge = None
--
src/gui/hungarian_map_tab.py-351-        
src/gui/hungarian_map_tab.py:352:        print("‚úÖ DEBUG: HungarianMapTab UI setup complete with Analytics ‚Üí Map Sync + Param√©ter Mem√≥ria v3.0")
src/gui/hungarian_map_tab.py-353-    
--
src/gui/hungarian_map_tab.py-363-        """
src/gui/hungarian_map_tab.py:364:        print("üîó DEBUG: Connecting HungarianMapTab signals with Analytics ‚Üí Map Sync...")
src/gui/hungarian_map_tab.py-365-        
--
src/gui/hungarian_map_tab.py-383-            self.location_selector.county_selected.connect(self._on_county_selected)
src/gui/hungarian_map_tab.py:384:            print("‚úÖ DEBUG: LocationSelector.county_selected ‚Üí MapTab._on_county_selected CONNECTED")
src/gui/hungarian_map_tab.py-385-            
--
src/gui/hungarian_map_tab.py-387-            self.location_selector.map_update_requested.connect(self._on_map_update_requested)
src/gui/hungarian_map_tab.py:388:            print("‚úÖ DEBUG: LocationSelector.map_update_requested ‚Üí MapTab._on_map_update_requested CONNECTED")
src/gui/hungarian_map_tab.py-389-            
--
src/gui/hungarian_map_tab.py-391-            self.location_selector.location_selected.connect(self._on_location_selected)
src/gui/hungarian_map_tab.py:392:            print("‚úÖ DEBUG: LocationSelector.location_selected ‚Üí MapTab._on_location_selected CONNECTED")
src/gui/hungarian_map_tab.py-393-            
--
src/gui/hungarian_map_tab.py-395-            self.location_selector.selection_changed.connect(self._on_selection_changed)
src/gui/hungarian_map_tab.py:396:            print("‚úÖ DEBUG: LocationSelector.selection_changed ‚Üí MapTab._on_selection_changed CONNECTED")
src/gui/hungarian_map_tab.py-397-        
--
src/gui/hungarian_map_tab.py-402-            self.map_visualizer.map_ready.connect(self._on_folium_map_ready)
src/gui/hungarian_map_tab.py:403:            print("‚úÖ DEBUG: FoliumMapVisualizer.map_ready ‚Üí MapTab._on_folium_map_ready CONNECTED")
src/gui/hungarian_map_tab.py-404-            
--
src/gui/hungarian_map_tab.py-406-            self.map_visualizer.county_clicked.connect(self._on_folium_county_clicked)
src/gui/hungarian_map_tab.py:407:            print("‚úÖ DEBUG: FoliumMapVisualizer.county_clicked ‚Üí MapTab._on_folium_county_clicked CONNECTED")
src/gui/hungarian_map_tab.py-408-            
--
src/gui/hungarian_map_tab.py-410-            self.map_visualizer.coordinates_clicked.connect(self._on_folium_coordinates_clicked)
src/gui/hungarian_map_tab.py:411:            print("‚úÖ DEBUG: FoliumMapVisualizer.coordinates_clicked ‚Üí MapTab._on_folium_coordinates_clicked CONNECTED")
src/gui/hungarian_map_tab.py-412-            
--
src/gui/hungarian_map_tab.py-414-            self.map_visualizer.map_moved.connect(self._on_folium_map_moved)
src/gui/hungarian_map_tab.py:415:            print("‚úÖ DEBUG: FoliumMapVisualizer.map_moved ‚Üí MapTab._on_folium_map_moved CONNECTED")
src/gui/hungarian_map_tab.py-416-            
--
src/gui/hungarian_map_tab.py-418-            self.map_visualizer.county_hovered.connect(self._on_folium_county_hovered)
src/gui/hungarian_map_tab.py:419:            print("‚úÖ DEBUG: FoliumMapVisualizer.county_hovered ‚Üí MapTab._on_folium_county_hovered CONNECTED")
src/gui/hungarian_map_tab.py-420-            
--
src/gui/hungarian_map_tab.py-422-            self.map_visualizer.export_completed.connect(self._on_export_completed)
src/gui/hungarian_map_tab.py:423:            print("‚úÖ DEBUG: FoliumMapVisualizer.export_completed ‚Üí MapTab._on_export_completed CONNECTED")
src/gui/hungarian_map_tab.py-424-            
--
src/gui/hungarian_map_tab.py-426-            self.map_visualizer.error_occurred.connect(self._on_error_occurred)
src/gui/hungarian_map_tab.py:427:            print("‚úÖ DEBUG: FoliumMapVisualizer.error_occurred ‚Üí MapTab._on_error_occurred CONNECTED")
src/gui/hungarian_map_tab.py-428-        
src/gui/hungarian_map_tab.py:429:        print("‚úÖ DEBUG: All HungarianMapTab Analytics ‚Üí Map Sync + Param√©ter Mem√≥ria signals connected successfully")
src/gui/hungarian_map_tab.py-430-    
--
src/gui/hungarian_map_tab.py-434-        """
src/gui/hungarian_map_tab.py:435:        print("üîß DEBUG: Initializing HungarianMapTab components with Analytics ‚Üí Map Sync + Param√©ter Mem√≥ria...")
src/gui/hungarian_map_tab.py-436-        
--
src/gui/hungarian_map_tab.py-483-        """
src/gui/hungarian_map_tab.py:484:        print("üîß DEBUG: Initialization step 1 - Location selector data")
src/gui/hungarian_map_tab.py-485-        
--
src/gui/hungarian_map_tab.py-496-        """
src/gui/hungarian_map_tab.py:497:        print("üîß DEBUG: Initialization step 2 - GeoDataFrame sharing with Folium")
src/gui/hungarian_map_tab.py-498-        
--
src/gui/hungarian_map_tab.py-506-            if self.counties_gdf is not None:
src/gui/hungarian_map_tab.py:507:                print(f"‚úÖ DEBUG: Counties GeoDataFrame received: {len(self.counties_gdf)} counties")
src/gui/hungarian_map_tab.py-508-                
--
src/gui/hungarian_map_tab.py-511-                    self.map_visualizer.set_counties_geodataframe(self.counties_gdf)
src/gui/hungarian_map_tab.py:512:                    print("‚úÖ DEBUG: Counties GeoDataFrame shared with Folium MapVisualizer")
src/gui/hungarian_map_tab.py-513-            else:
src/gui/hungarian_map_tab.py:514:                print("‚ö†Ô∏è DEBUG: Counties GeoDataFrame not available yet")
src/gui/hungarian_map_tab.py-515-        
--
src/gui/hungarian_map_tab.py-521-        """
src/gui/hungarian_map_tab.py:522:        print("üîß DEBUG: Initialization step 3 - Folium map generation")
src/gui/hungarian_map_tab.py-523-        
--
src/gui/hungarian_map_tab.py-537-        """
src/gui/hungarian_map_tab.py:538:        print("üîß DEBUG: Initialization step 4 - Finalization")
src/gui/hungarian_map_tab.py-539-        
--
src/gui/hungarian_map_tab.py-553-        """
src/gui/hungarian_map_tab.py:554:        print("‚úÖ DEBUG: HungarianMapTab initialization complete with Analytics ‚Üí Map Sync + Param√©ter Mem√≥ria")
src/gui/hungarian_map_tab.py-555-        
--
src/gui/hungarian_map_tab.py-583-        """
src/gui/hungarian_map_tab.py:584:        print(f"üß† DEBUG: Analytics param√©ter be√°ll√≠tva: {parameter_name}")
src/gui/hungarian_map_tab.py-585-        
--
src/gui/hungarian_map_tab.py-595-        
src/gui/hungarian_map_tab.py:596:        print(f"‚úÖ DEBUG: Current analytics parameter stored: {self.current_analytics_parameter}")
src/gui/hungarian_map_tab.py-597-    
--
src/gui/hungarian_map_tab.py-607-        """
src/gui/hungarian_map_tab.py:608:        print(f"üå§Ô∏è DEBUG: Analytics result received: {len(analytics_result.city_results) if analytics_result.city_results else 0} cities")
src/gui/hungarian_map_tab.py:609:        print(f"üß† DEBUG: Current stored parameter: {self.current_analytics_parameter}")
src/gui/hungarian_map_tab.py-610-        
--
src/gui/hungarian_map_tab.py-625-        """
src/gui/hungarian_map_tab.py:626:        print(f"üó∫Ô∏è DEBUG: County selected in LocationSelector: {county_name}")
src/gui/hungarian_map_tab.py-627-        
src/gui/hungarian_map_tab.py-628-        if not self.auto_sync_enabled:
src/gui/hungarian_map_tab.py:629:            print("üîó DEBUG: Auto-sync disabled, skipping Folium update")
src/gui/hungarian_map_tab.py-630-            return
--
src/gui/hungarian_map_tab.py-632-        if not self.map_visualizer or not self.is_folium_ready:
src/gui/hungarian_map_tab.py:633:            print("‚ö†Ô∏è DEBUG: Folium MapVisualizer not ready for county selection")
src/gui/hungarian_map_tab.py-634-            return
--
src/gui/hungarian_map_tab.py-638-            bounds = geometry.bounds  # (minx, miny, maxx, maxy)
src/gui/hungarian_map_tab.py:639:            print(f"üéØ DEBUG: County bounds: {bounds}")
src/gui/hungarian_map_tab.py-640-            
--
src/gui/hungarian_map_tab.py-658-            error_msg = f"Megye Folium t√©rk√©pes megjelen√≠t√©si hiba: {e}"
src/gui/hungarian_map_tab.py:659:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-660-            self._on_error_occurred(error_msg)
--
src/gui/hungarian_map_tab.py-668-        """
src/gui/hungarian_map_tab.py:669:        print(f"üéØ DEBUG: Map update requested with bounds: {bounds}")
src/gui/hungarian_map_tab.py-670-        
--
src/gui/hungarian_map_tab.py-674-        else:
src/gui/hungarian_map_tab.py:675:            print("‚ö†Ô∏è DEBUG: Folium MapVisualizer not ready for bounds update")
src/gui/hungarian_map_tab.py-676-    
--
src/gui/hungarian_map_tab.py-683-        """
src/gui/hungarian_map_tab.py:684:        print(f"üîç DEBUG: Location selected: {location.display_name if location else 'None'}")
src/gui/hungarian_map_tab.py-685-        
--
src/gui/hungarian_map_tab.py-698-        """
src/gui/hungarian_map_tab.py:699:        print("üîÑ DEBUG: Location selector selection changed")
src/gui/hungarian_map_tab.py-700-        
--
src/gui/hungarian_map_tab.py-733-        """
src/gui/hungarian_map_tab.py:734:        print(f"üöÄ DEBUG [ANALYTICS‚ÜíMAP]: update_analysis_parameters called: {params}")
src/gui/hungarian_map_tab.py-735-        
src/gui/hungarian_map_tab.py-736-        if self.sync_in_progress:
src/gui/hungarian_map_tab.py:737:            print("‚ö†Ô∏è DEBUG: Sync already in progress, skipping")
src/gui/hungarian_map_tab.py-738-            return
--
src/gui/hungarian_map_tab.py-745-            analysis_type = params.get("analysis_type", "single_location")
src/gui/hungarian_map_tab.py:746:            print(f"üîÑ DEBUG: Processing analysis type: {analysis_type}")
src/gui/hungarian_map_tab.py-747-            
--
src/gui/hungarian_map_tab.py-750-                if location:
src/gui/hungarian_map_tab.py:751:                    print(f"üîç DEBUG: Single location sync: {location}")
src/gui/hungarian_map_tab.py-752-                    self._update_map_for_single_location(location)
--
src/gui/hungarian_map_tab.py-756-                if region:
src/gui/hungarian_map_tab.py:757:                    print(f"üåç DEBUG: Region sync: {region}")
src/gui/hungarian_map_tab.py-758-                    self._update_map_for_region(region)
--
src/gui/hungarian_map_tab.py-762-                if county:
src/gui/hungarian_map_tab.py:763:                    print(f"üèôÔ∏è DEBUG: County sync: {county}")
src/gui/hungarian_map_tab.py-764-                    self._update_map_for_county(county)
--
src/gui/hungarian_map_tab.py-770-            if self.auto_weather_refresh_enabled and self.current_analytics_result:
src/gui/hungarian_map_tab.py:771:                print("üå§Ô∏è DEBUG: Auto weather refresh triggered by analysis parameter change")
src/gui/hungarian_map_tab.py-772-                self._refresh_weather_overlay()
--
src/gui/hungarian_map_tab.py-783-            error_msg = f"Analysis parameters sync hiba: {e}"
src/gui/hungarian_map_tab.py:784:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-785-            self.analytics_sync_label.setText("‚ùå Analysis Sync")
--
src/gui/hungarian_map_tab.py-805-        """
src/gui/hungarian_map_tab.py:806:        print(f"üöÄ DEBUG [ANALYTICS‚ÜíMAP]: update_weather_parameters called: {params}")
src/gui/hungarian_map_tab.py-807-        
src/gui/hungarian_map_tab.py-808-        if self.sync_in_progress:
src/gui/hungarian_map_tab.py:809:            print("‚ö†Ô∏è DEBUG: Sync already in progress, skipping")
src/gui/hungarian_map_tab.py-810-            return
--
src/gui/hungarian_map_tab.py-821-            
src/gui/hungarian_map_tab.py:822:            print(f"üå§Ô∏è DEBUG: Processing weather parameters - Provider: {provider}, Cache: {cache}")
src/gui/hungarian_map_tab.py-823-            
--
src/gui/hungarian_map_tab.py-829-                # Engine param√©terek friss√≠t√©se (ha van ilyen API)
src/gui/hungarian_map_tab.py:830:                print(f"‚öôÔ∏è DEBUG: Updating MultiCityEngine config: provider={provider}, timeout={timeout}")
src/gui/hungarian_map_tab.py-831-            
--
src/gui/hungarian_map_tab.py-844-            error_msg = f"Weather parameters sync hiba: {e}"
src/gui/hungarian_map_tab.py:845:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-846-            self.analytics_sync_label.setText("‚ùå Weather Sync")
--
src/gui/hungarian_map_tab.py-863-        """
src/gui/hungarian_map_tab.py:864:        print(f"üöÄ DEBUG [ANALYTICS‚ÜíMAP]: update_date_range called: {start_date} ‚Üí {end_date}")
src/gui/hungarian_map_tab.py-865-        
src/gui/hungarian_map_tab.py-866-        if self.sync_in_progress:
src/gui/hungarian_map_tab.py:867:            print("‚ö†Ô∏è DEBUG: Sync already in progress, skipping")
src/gui/hungarian_map_tab.py-868-            return
--
src/gui/hungarian_map_tab.py-874-            
src/gui/hungarian_map_tab.py:875:            print(f"üìÖ DEBUG: Processing date range change: {start_date} to {end_date}")
src/gui/hungarian_map_tab.py-876-            
--
src/gui/hungarian_map_tab.py-888-            if self.auto_weather_refresh_enabled and self.current_analytics_result:
src/gui/hungarian_map_tab.py:889:                print("üå§Ô∏è DEBUG: Auto weather refresh triggered by date range change")
src/gui/hungarian_map_tab.py-890-                # √öj analytics lek√©rdez√©s az √∫j d√°tum tartom√°nnyal
--
src/gui/hungarian_map_tab.py-902-            error_msg = f"Date range sync hiba: {e}"
src/gui/hungarian_map_tab.py:903:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-904-            self.analytics_sync_label.setText("‚ùå Date Sync")
--
src/gui/hungarian_map_tab.py-924-        """
src/gui/hungarian_map_tab.py:925:        print(f"üöÄ DEBUG [ANALYTICS‚ÜíMAP]: refresh_with_new_parameters called: {len(str(bundle))} chars")
src/gui/hungarian_map_tab.py-926-        
src/gui/hungarian_map_tab.py-927-        if self.sync_in_progress:
src/gui/hungarian_map_tab.py:928:            print("‚ö†Ô∏è DEBUG: Sync already in progress, skipping")
src/gui/hungarian_map_tab.py-929-            return
--
src/gui/hungarian_map_tab.py-940-            
src/gui/hungarian_map_tab.py:941:            print(f"üì¶ DEBUG: Processing parameter bundle:")
src/gui/hungarian_map_tab.py-942-            print(f"   - Analysis: {analysis}")
--
src/gui/hungarian_map_tab.py-964-            error_msg = f"Parameter bundle sync hiba: {e}"
src/gui/hungarian_map_tab.py:965:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-966-            self.analytics_sync_label.setText("‚ùå Full Sync")
--
src/gui/hungarian_map_tab.py-986-        try:
src/gui/hungarian_map_tab.py:987:            print(f"üîç DEBUG: Updating map for single location: {location}")
src/gui/hungarian_map_tab.py-988-            
src/gui/hungarian_map_tab.py-989-            if not self.map_visualizer or not self.is_folium_ready:
src/gui/hungarian_map_tab.py:990:                print("‚ö†Ô∏è DEBUG: Map visualizer not ready for single location update")
src/gui/hungarian_map_tab.py-991-                return
--
src/gui/hungarian_map_tab.py-1005-                
src/gui/hungarian_map_tab.py:1006:                print(f"‚úÖ DEBUG: Map updated for single location: {name} ({lat:.4f}, {lon:.4f})")
src/gui/hungarian_map_tab.py-1007-                self.loading_status.setText(f"üîç T√©rk√©p friss√≠tve: {name}")
src/gui/hungarian_map_tab.py-1008-            else:
src/gui/hungarian_map_tab.py:1009:                print("‚ö†Ô∏è DEBUG: Invalid coordinates for single location update")
src/gui/hungarian_map_tab.py-1010-                
src/gui/hungarian_map_tab.py-1011-        except Exception as e:
src/gui/hungarian_map_tab.py:1012:            print(f"‚ùå DEBUG: Single location map update error: {e}")
src/gui/hungarian_map_tab.py-1013-    
--
src/gui/hungarian_map_tab.py-1021-        try:
src/gui/hungarian_map_tab.py:1022:            print(f"üåç DEBUG: Updating map for region: {region}")
src/gui/hungarian_map_tab.py-1023-            
src/gui/hungarian_map_tab.py-1024-            if not self.location_selector:
src/gui/hungarian_map_tab.py:1025:                print("‚ö†Ô∏è DEBUG: Location selector not available for region update")
src/gui/hungarian_map_tab.py-1026-                return
--
src/gui/hungarian_map_tab.py-1030-            if success:
src/gui/hungarian_map_tab.py:1031:                print(f"‚úÖ DEBUG: Region set in location selector: {region}")
src/gui/hungarian_map_tab.py-1032-                
--
src/gui/hungarian_map_tab.py-1036-                    # Ha van geometria info, t√©rk√©p bounds friss√≠t√©se
src/gui/hungarian_map_tab.py:1037:                    print(f"üó∫Ô∏è DEBUG: Region bounds update for: {region}")
src/gui/hungarian_map_tab.py-1038-                    
--
src/gui/hungarian_map_tab.py-1040-            else:
src/gui/hungarian_map_tab.py:1041:                print(f"‚ö†Ô∏è DEBUG: Failed to set region: {region}")
src/gui/hungarian_map_tab.py-1042-                
src/gui/hungarian_map_tab.py-1043-        except Exception as e:
src/gui/hungarian_map_tab.py:1044:            print(f"‚ùå DEBUG: Region map update error: {e}")
src/gui/hungarian_map_tab.py-1045-    
--
src/gui/hungarian_map_tab.py-1053-        try:
src/gui/hungarian_map_tab.py:1054:            print(f"üèôÔ∏è DEBUG: Updating map for county: {county}")
src/gui/hungarian_map_tab.py-1055-            
src/gui/hungarian_map_tab.py-1056-            if not self.location_selector:
src/gui/hungarian_map_tab.py:1057:                print("‚ö†Ô∏è DEBUG: Location selector not available for county update")
src/gui/hungarian_map_tab.py-1058-                return
--
src/gui/hungarian_map_tab.py-1062-            if success:
src/gui/hungarian_map_tab.py:1063:                print(f"‚úÖ DEBUG: County set in location selector: {county}")
src/gui/hungarian_map_tab.py-1064-                
--
src/gui/hungarian_map_tab.py-1069-            else:
src/gui/hungarian_map_tab.py:1070:                print(f"‚ö†Ô∏è DEBUG: Failed to set county: {county}")
src/gui/hungarian_map_tab.py-1071-                
src/gui/hungarian_map_tab.py-1072-        except Exception as e:
src/gui/hungarian_map_tab.py:1073:            print(f"‚ùå DEBUG: County map update error: {e}")
src/gui/hungarian_map_tab.py-1074-    
--
src/gui/hungarian_map_tab.py-1083-        try:
src/gui/hungarian_map_tab.py:1084:            print(f"üå§Ô∏è DEBUG: Refreshing weather overlays with provider: {provider}, cache: {cache}")
src/gui/hungarian_map_tab.py-1085-            
src/gui/hungarian_map_tab.py-1086-            if not self.current_weather_overlay:
src/gui/hungarian_map_tab.py:1087:                print("‚ö†Ô∏è DEBUG: No current weather overlay to refresh")
src/gui/hungarian_map_tab.py-1088-                return
--
src/gui/hungarian_map_tab.py-1090-            if not self.multi_city_engine:
src/gui/hungarian_map_tab.py:1091:                print("‚ö†Ô∏è DEBUG: MultiCityEngine not available for provider change")
src/gui/hungarian_map_tab.py-1092-                return
--
src/gui/hungarian_map_tab.py-1096-                self.multi_city_engine.set_provider(provider)
src/gui/hungarian_map_tab.py:1097:                print(f"‚úÖ DEBUG: MultiCityEngine provider updated to: {provider}")
src/gui/hungarian_map_tab.py-1098-            
--
src/gui/hungarian_map_tab.py-1101-                self.multi_city_engine.set_cache_enabled(cache)
src/gui/hungarian_map_tab.py:1102:                print(f"‚úÖ DEBUG: MultiCityEngine cache updated to: {cache}")
src/gui/hungarian_map_tab.py-1103-            
--
src/gui/hungarian_map_tab.py-1105-            if self.current_analytics_result:
src/gui/hungarian_map_tab.py:1106:                print("üîÑ DEBUG: Regenerating weather overlay with new provider")
src/gui/hungarian_map_tab.py-1107-                self._generate_weather_overlay_from_analytics(self.current_analytics_result)
--
src/gui/hungarian_map_tab.py-1111-        except Exception as e:
src/gui/hungarian_map_tab.py:1112:            print(f"‚ùå DEBUG: Weather overlay refresh error: {e}")
src/gui/hungarian_map_tab.py-1113-    
--
src/gui/hungarian_map_tab.py-1122-        try:
src/gui/hungarian_map_tab.py:1123:            print(f"üìÖ DEBUG: Refreshing temporal data for range: {start_date} ‚Üí {end_date}")
src/gui/hungarian_map_tab.py-1124-            
--
src/gui/hungarian_map_tab.py-1130-                if start_dt > end_dt:
src/gui/hungarian_map_tab.py:1131:                    print("‚ö†Ô∏è DEBUG: Invalid date range - start date after end date")
src/gui/hungarian_map_tab.py-1132-                    return
--
src/gui/hungarian_map_tab.py-1134-            except ValueError as e:
src/gui/hungarian_map_tab.py:1135:                print(f"‚ö†Ô∏è DEBUG: Date parsing error: {e}")
src/gui/hungarian_map_tab.py-1136-                return
--
src/gui/hungarian_map_tab.py-1140-                self.multi_city_engine.set_date_range(start_date, end_date)
src/gui/hungarian_map_tab.py:1141:                print(f"‚úÖ DEBUG: MultiCityEngine date range updated: {start_date} ‚Üí {end_date}")
src/gui/hungarian_map_tab.py-1142-            
--
src/gui/hungarian_map_tab.py-1144-            if self.current_analytics_result:
src/gui/hungarian_map_tab.py:1145:                print("üîÑ DEBUG: Temporal weather overlay refresh triggered")
src/gui/hungarian_map_tab.py-1146-                # Itt lehetne √∫j analytics lek√©rdez√©st ind√≠tani az √∫j d√°tum tartom√°nnyal
--
src/gui/hungarian_map_tab.py-1150-        except Exception as e:
src/gui/hungarian_map_tab.py:1151:            print(f"‚ùå DEBUG: Temporal data refresh error: {e}")
src/gui/hungarian_map_tab.py-1152-    
--
src/gui/hungarian_map_tab.py-1161-        try:
src/gui/hungarian_map_tab.py:1162:            print(f"üå§Ô∏è DEBUG: Refreshing weather overlay with new date range: {start_date} ‚Üí {end_date}")
src/gui/hungarian_map_tab.py-1163-            
src/gui/hungarian_map_tab.py-1164-            if not self.multi_city_engine:
src/gui/hungarian_map_tab.py:1165:                print("‚ö†Ô∏è DEBUG: MultiCityEngine not available for date-based refresh")
src/gui/hungarian_map_tab.py-1166-                return
--
src/gui/hungarian_map_tab.py-1172-                # √öj analytics lek√©rdez√©s az √∫j d√°tum tartom√°nnyal
src/gui/hungarian_map_tab.py:1173:                print(f"üîÑ DEBUG: Re-running analytics with new date range...")
src/gui/hungarian_map_tab.py-1174-                
--
src/gui/hungarian_map_tab.py-1180-        except Exception as e:
src/gui/hungarian_map_tab.py:1181:            print(f"‚ùå DEBUG: Weather overlay date refresh error: {e}")
src/gui/hungarian_map_tab.py-1182-    
--
src/gui/hungarian_map_tab.py-1192-        try:
src/gui/hungarian_map_tab.py:1193:            print(f"üîÑ DEBUG: Full map refresh with comprehensive parameters")
src/gui/hungarian_map_tab.py-1194-            
--
src/gui/hungarian_map_tab.py-1219-            if analysis and weather and date and self.current_analytics_result:
src/gui/hungarian_map_tab.py:1220:                print("üå§Ô∏è DEBUG: Comprehensive weather overlay refresh")
src/gui/hungarian_map_tab.py-1221-                self._generate_weather_overlay_from_analytics(self.current_analytics_result)
src/gui/hungarian_map_tab.py-1222-            
src/gui/hungarian_map_tab.py:1223:            print("‚úÖ DEBUG: Full map refresh completed successfully")
src/gui/hungarian_map_tab.py-1224-            self.loading_status.setText("üîÑ Teljes t√©rk√©p refresh befejezve - minden param√©ter alkalmazva")
--
src/gui/hungarian_map_tab.py-1226-        except Exception as e:
src/gui/hungarian_map_tab.py:1227:            print(f"‚ùå DEBUG: Full map refresh error: {e}")
src/gui/hungarian_map_tab.py-1228-            self.loading_status.setText(f"‚ùå Full map refresh hiba: {e}")
--
src/gui/hungarian_map_tab.py-1235-        """
src/gui/hungarian_map_tab.py:1236:        print("‚úÖ DEBUG: Folium map ready - enabling functionality")
src/gui/hungarian_map_tab.py-1237-        
--
src/gui/hungarian_map_tab.py-1264-        """
src/gui/hungarian_map_tab.py:1265:        print(f"üñ±Ô∏è DEBUG: County clicked on Folium map: {county_name}")
src/gui/hungarian_map_tab.py-1266-        
--
src/gui/hungarian_map_tab.py-1270-            if success:
src/gui/hungarian_map_tab.py:1271:                print(f"‚úÖ DEBUG: Location selector synced to county: {county_name}")
src/gui/hungarian_map_tab.py-1272-            else:
src/gui/hungarian_map_tab.py:1273:                print(f"‚ö†Ô∏è DEBUG: Failed to sync location selector to county: {county_name}")
src/gui/hungarian_map_tab.py-1274-        
--
src/gui/hungarian_map_tab.py-1292-        """
src/gui/hungarian_map_tab.py:1293:        print(f"üîç DEBUG: Coordinates clicked on Folium map: {lat:.4f}, {lon:.4f}")
src/gui/hungarian_map_tab.py-1294-        
--
src/gui/hungarian_map_tab.py-1313-        """
src/gui/hungarian_map_tab.py:1314:        print(f"üó∫Ô∏è DEBUG: Folium map moved: center=({lat:.4f}, {lon:.4f}), zoom={zoom}")
src/gui/hungarian_map_tab.py-1315-        
--
src/gui/hungarian_map_tab.py-1330-        """
src/gui/hungarian_map_tab.py:1331:        print(f"üëÜ DEBUG: County hovered on Folium map: {county_name}")
src/gui/hungarian_map_tab.py-1332-        
--
src/gui/hungarian_map_tab.py-1348-        """
src/gui/hungarian_map_tab.py:1349:        print(f"üíæ DEBUG: Folium export completed: {file_path}")
src/gui/hungarian_map_tab.py-1350-        
--
src/gui/hungarian_map_tab.py-1363-        """
src/gui/hungarian_map_tab.py:1364:        print(f"‚ùå DEBUG: Folium error occurred: {error_message}")
src/gui/hungarian_map_tab.py-1365-        
--
src/gui/hungarian_map_tab.py-1381-        self.auto_sync_enabled = enabled
src/gui/hungarian_map_tab.py:1382:        print(f"üîó DEBUG: Auto-sync {'enabled' if enabled else 'disabled'}")
src/gui/hungarian_map_tab.py-1383-        
--
src/gui/hungarian_map_tab.py-1396-        self.auto_weather_refresh_enabled = enabled
src/gui/hungarian_map_tab.py:1397:        print(f"üå§Ô∏è DEBUG: Auto weather refresh {'enabled' if enabled else 'disabled'}")
src/gui/hungarian_map_tab.py-1398-        
--
src/gui/hungarian_map_tab.py-1407-        """
src/gui/hungarian_map_tab.py:1408:        print("üîÑ DEBUG: Resetting Folium map view to default Hungary view")
src/gui/hungarian_map_tab.py-1409-        
--
src/gui/hungarian_map_tab.py-1427-        """
src/gui/hungarian_map_tab.py:1428:        print("üíæ DEBUG: Folium map export requested")
src/gui/hungarian_map_tab.py-1429-        
--
src/gui/hungarian_map_tab.py-1440-        """
src/gui/hungarian_map_tab.py:1441:        print("üó∫Ô∏è DEBUG: Manual Folium map refresh requested")
src/gui/hungarian_map_tab.py-1442-        
--
src/gui/hungarian_map_tab.py-1446-        else:
src/gui/hungarian_map_tab.py:1447:            print("‚ö†Ô∏è DEBUG: Folium MapVisualizer not available for refresh")
src/gui/hungarian_map_tab.py-1448-    
--
src/gui/hungarian_map_tab.py-1454-        """
src/gui/hungarian_map_tab.py:1455:        print("üå§Ô∏è DEBUG: Manual weather overlay refresh requested")
src/gui/hungarian_map_tab.py-1456-        
--
src/gui/hungarian_map_tab.py-1473-                error_msg = "WeatherDataBridge nem el√©rhet≈ë"
src/gui/hungarian_map_tab.py:1474:                print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-1475-                self._on_error_occurred(error_msg)
--
src/gui/hungarian_map_tab.py-1477-            
src/gui/hungarian_map_tab.py:1478:            print(f"üîÑ DEBUG: Generating weather overlay from analytics result...")
src/gui/hungarian_map_tab.py:1479:            print(f"üîÑ DEBUG: Analytics result - Cities: {len(analytics_result.city_results)}, Metric: {analytics_result.question.metric}")
src/gui/hungarian_map_tab.py:1480:            print(f"üß† DEBUG: Stored parameter: {self.current_analytics_parameter}")
src/gui/hungarian_map_tab.py-1481-            
src/gui/hungarian_map_tab.py-1482-            # üîß KRITIKUS DEBUG: Analytics city results r√©szletek
src/gui/hungarian_map_tab.py:1483:            print("üîÑ DEBUG: City results details:")
src/gui/hungarian_map_tab.py-1484-            for i, city in enumerate(analytics_result.city_results[:5]):  # Els≈ë 5 v√°ros
--
src/gui/hungarian_map_tab.py-1492-                folium_format = self.weather_bridge.convert_analytics_result(analytics_result, self.current_analytics_parameter)
src/gui/hungarian_map_tab.py:1493:                print(f"üß† DEBUG: Explicit parameter conversion: {self.current_analytics_parameter}")
src/gui/hungarian_map_tab.py-1494-            else:
--
src/gui/hungarian_map_tab.py-1496-                folium_format = self.weather_bridge.convert_analytics_result(analytics_result)
src/gui/hungarian_map_tab.py:1497:                print("üîÑ DEBUG: Auto-detect parameter conversion")
src/gui/hungarian_map_tab.py-1498-            
--
src/gui/hungarian_map_tab.py-1503-                error_msg = "Weather overlay konverzi√≥ sikertelen"
src/gui/hungarian_map_tab.py:1504:                print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-1505-                self._on_error_occurred(error_msg)
--
src/gui/hungarian_map_tab.py-1511-            
src/gui/hungarian_map_tab.py:1512:            print(f"‚úÖ DEBUG: Weather overlay generated: {weather_overlay.overlay_type}, {len(weather_overlay.data)} cities")
src/gui/hungarian_map_tab.py:1513:            print(f"‚úÖ DEBUG: Folium format generated: {list(folium_format.keys())}")
src/gui/hungarian_map_tab.py-1514-            
--
src/gui/hungarian_map_tab.py-1519-                    self.map_visualizer.set_weather_data(folium_format)
src/gui/hungarian_map_tab.py:1520:                    print("‚úÖ DEBUG: Weather data passed to Folium map visualizer (direct format)")
src/gui/hungarian_map_tab.py-1521-                    
--
src/gui/hungarian_map_tab.py-1530-                else:
src/gui/hungarian_map_tab.py:1531:                    print("‚ùå DEBUG: Weather data format conversion failed")
src/gui/hungarian_map_tab.py-1532-                    self.loading_status.setText("‚ùå Weather overlay form√°tum konverzi√≥ sikertelen")
src/gui/hungarian_map_tab.py-1533-            else:
src/gui/hungarian_map_tab.py:1534:                print("‚ö†Ô∏è DEBUG: Folium map not ready for weather data")
src/gui/hungarian_map_tab.py-1535-                self.loading_status.setText("‚ö†Ô∏è Folium t√©rk√©p nem k√©sz a weather overlay-hez")
--
src/gui/hungarian_map_tab.py-1538-            error_msg = f"Weather overlay gener√°l√°si hiba: {e}"
src/gui/hungarian_map_tab.py:1539:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-1540-            import traceback
--
src/gui/hungarian_map_tab.py-1558-                error_msg = "MultiCityEngine nem el√©rhet≈ë"
src/gui/hungarian_map_tab.py:1559:                print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-1560-                self._on_error_occurred(error_msg)
--
src/gui/hungarian_map_tab.py-1562-            
src/gui/hungarian_map_tab.py:1563:            print(f"üå§Ô∏è DEBUG: Loading weather data: {question_type}, {region}, limit={limit}")
src/gui/hungarian_map_tab.py-1564-            self.loading_status.setText(f"üå§Ô∏è Weather adatok bet√∂lt√©se: {question_type}...")
--
src/gui/hungarian_map_tab.py-1590-            if analytics_result and analytics_result.city_results:
src/gui/hungarian_map_tab.py:1591:                print(f"‚úÖ DEBUG: Weather data loaded: {len(analytics_result.city_results)} cities")
src/gui/hungarian_map_tab.py-1592-                
--
src/gui/hungarian_map_tab.py-1597-                error_msg = f"Nincs weather adat: {question_type}"
src/gui/hungarian_map_tab.py:1598:                print(f"‚ö†Ô∏è DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-1599-                self.loading_status.setText(f"‚ö†Ô∏è {error_msg}")
--
src/gui/hungarian_map_tab.py-1602-            error_msg = f"Weather adatok bet√∂lt√©si hiba: {e}"
src/gui/hungarian_map_tab.py:1603:            print(f"‚ùå DEBUG: {error_msg}")
src/gui/hungarian_map_tab.py-1604-            self._on_error_occurred(error_msg)
--
src/gui/hungarian_map_tab.py-1749-        except Exception as e:
src/gui/hungarian_map_tab.py:1750:            print(f"‚ùå DEBUG: Focus on county error: {e}")
src/gui/hungarian_map_tab.py-1751-        
--
src/gui/hungarian_map_tab.py-1810-            self.map_visualizer.set_map_style(theme)
src/gui/hungarian_map_tab.py:1811:            print(f"üé® DEBUG: Folium theme set to: {theme}")
src/gui/hungarian_map_tab.py-1812-    
--
src/gui/hungarian_map_tab.py-1823-            self.map_visualizer.set_weather_data(weather_data)
src/gui/hungarian_map_tab.py:1824:            print("üå§Ô∏è DEBUG: Weather data set for Folium overlay (legacy method)")
src/gui/hungarian_map_tab.py-1825-    
--
src/gui/hungarian_map_tab.py-1829-        """
src/gui/hungarian_map_tab.py:1830:        print("üîÑ DEBUG: Refreshing all HungarianMapTab components with Analytics Sync + Weather Integration 100% + Param√©ter Mem√≥ria")
src/gui/hungarian_map_tab.py-1831-        
--
src/gui/hungarian_map_tab.py-1851-        """
src/gui/hungarian_map_tab.py:1852:        print("üßπ DEBUG: Clearing all selections in HungarianMapTab with Analytics Sync + Weather Integration 100% + Param√©ter Mem√≥ria")
src/gui/hungarian_map_tab.py-1853-        
--
src/gui/hungarian_map_tab.py-2207-    print("   ‚úÖ MainWindow koordin√°ci√≥ t√°mogat√°s")
src/gui/hungarian_map_tab.py:2208:    print("   ‚úÖ Enhanced debug logging minden l√©p√©shez")
src/gui/hungarian_map_tab.py-2209-    print("   ‚úÖ get_current_analytics_parameter() API met√≥dus")
--
src/gui/hungarian_map_tab.py-2217-    print("   üõ†Ô∏è 6 helper met√≥dus minden sync t√≠pushoz")
src/gui/hungarian_map_tab.py:2218:    print("   üîÑ Enhanced debug logging minden sync l√©p√©sn√©l")
src/gui/hungarian_map_tab.py-2219-    print("   üå§Ô∏è Auto-refresh weather overlays parameter change-kor")
--
src/gui/hungarian_map_tab.py-2236-    print("   ‚è±Ô∏è Val√≥s idej≈± weather overlay friss√≠t√©s")
src/gui/hungarian_map_tab.py:2237:    print("   üîç Enhanced debug logging minden l√©p√©sn√©l")
src/gui/hungarian_map_tab.py-2238-    print("   üõ°Ô∏è Error handling √©s fallback mechanizmusok")
--
src/gui/color_palette.py-238-        
src/gui/color_palette.py:239:        print("üé® DEBUG: ColorPalette initialized - RED THEME VERSION")
src/gui/color_palette.py-240-    
--
src/gui/color_palette.py-260-        
src/gui/color_palette.py:261:        print(f"üé® DEBUG: Base color set: {semantic_name} = {hsl_color.to_hex()}")
src/gui/color_palette.py-262-    
--
src/gui/color_palette.py-340-            
src/gui/color_palette.py:341:            print(f"üé® DEBUG: Theme type changed to {theme_type.value}, variants regenerated")
src/gui/color_palette.py-342-    
--
src/gui/color_palette.py-407-            self.set_multiple_base_colors(presets[preset_name])
src/gui/color_palette.py:408:            print(f"üé® DEBUG: Semantic preset loaded: {preset_name}")
src/gui/color_palette.py-409-            
--
src/gui/color_palette.py-413-        else:
src/gui/color_palette.py:414:            print(f"‚ùå DEBUG: Unknown preset: {preset_name}")
src/gui/color_palette.py-415-    
--
src/gui/color_palette.py-478-        
src/gui/color_palette.py:479:        print(f"üé® DEBUG: {harmony_type.value} harmony generated from {base_semantic}")
src/gui/color_palette.py-480-        return harmony_colors
--
src/gui/color_palette.py-670-        
src/gui/color_palette.py:671:        print(f"üå¶Ô∏è DEBUG: Weather palette generated from {base_temperature}")
src/gui/color_palette.py-672-        return weather_palette
--
src/gui/color_palette.py-697-        
src/gui/color_palette.py:698:        print(f"üö® DEBUG: Alert gradient generated: {levels} levels")
src/gui/color_palette.py-699-        return gradient
--
src/gui/color_palette.py-775-            
src/gui/color_palette.py:776:            print("üé® DEBUG: Palette imported successfully")
src/gui/color_palette.py-777-            return True
--
src/gui/color_palette.py-779-        except Exception as e:
src/gui/color_palette.py:780:            print(f"‚ùå DEBUG: Palette import failed: {e}")
src/gui/color_palette.py-781-            return False
--
src/gui/color_palette.py-805-        
src/gui/color_palette.py:806:        print(f"üé® DEBUG: Generated {len(variants)} variants for {semantic_name}")
src/gui/color_palette.py-807-    
--
src/gui/analytics_view.py-447-            daily_data = data.get('daily', {})
src/gui/analytics_view.py:448:            print("üîç DEBUG SZ√âL TAB - El√©rhet≈ë daily adatok:", list(daily_data.keys()))
src/gui/analytics_view.py-449-            print("üîç windspeed_10m_max el√©rhet≈ë:", 'windspeed_10m_max' in daily_data)
--
src/gui/analytics_view.py-512-            daily_data = data.get('daily', {})
src/gui/analytics_view.py:513:            print("üîç DEBUG MAX SZ√âLL√ñK√âS TAB - El√©rhet≈ë daily adatok:", list(daily_data.keys()))
src/gui/analytics_view.py-514-            print("üîç windspeed_10m_max el√©rhet≈ë:", 'windspeed_10m_max' in daily_data)
--
src/gui/dialogs.py-180-        """
src/gui/dialogs.py:181:        print("üé® DEBUG: Registering ExtremeWeatherDialog widgets for theming...")
src/gui/dialogs.py-182-        
--
src/gui/dialogs.py-195-        
src/gui/dialogs.py:196:        print("‚úÖ DEBUG: ExtremeWeatherDialog widgets registered for theming")
src/gui/dialogs.py-197-    
--
src/gui/dialogs.py-464-        """
src/gui/dialogs.py:465:        print(f"üé® DEBUG: ExtremeWeatherDialog applying theme via ThemeManager: {'dark' if dark_theme else 'light'}")
src/gui/dialogs.py-466-        
--
src/gui/dialogs.py-475-        
src/gui/dialogs.py:476:        print(f"‚úÖ DEBUG: ExtremeWeatherDialog theme applied via ThemeManager: {'dark' if dark_theme else 'light'}")
--
src/gui/panel_widgets/provider_widget.py-57-        
src/gui/panel_widgets/provider_widget.py:58:        print("üåç DEBUG: ProviderWidget inicializ√°lva - OPEN-METEO ALAP√âRTELMEZETT")
src/gui/panel_widgets/provider_widget.py-59-        
--
src/gui/panel_widgets/provider_widget.py-96-        
src/gui/panel_widgets/provider_widget.py:97:        print("‚úÖ DEBUG: ProviderWidget initialized - OPEN-METEO ALAP√âRTELMEZETT")
src/gui/panel_widgets/provider_widget.py-98-    
--
src/gui/panel_widgets/provider_widget.py-100-        """UI komponensek inicializ√°l√°sa."""
src/gui/panel_widgets/provider_widget.py:101:        print("üîß DEBUG: Setting up ProviderWidget UI...")
src/gui/panel_widgets/provider_widget.py-102-        
--
src/gui/panel_widgets/provider_widget.py-197-        
src/gui/panel_widgets/provider_widget.py:198:        print("‚úÖ DEBUG: ProviderWidget UI setup complete - OPEN-METEO ALAP√âRTELMEZETT")
src/gui/panel_widgets/provider_widget.py-199-    
--
src/gui/panel_widgets/provider_widget.py-220-        
src/gui/panel_widgets/provider_widget.py:221:        print("üåç DEBUG: Provider combo populated - OPEN-METEO ALAP√âRTELMEZETT")
src/gui/panel_widgets/provider_widget.py-222-    
--
src/gui/panel_widgets/provider_widget.py-227-        
src/gui/panel_widgets/provider_widget.py:228:        print("‚úÖ DEBUG: ProviderWidget signals connected")
src/gui/panel_widgets/provider_widget.py-229-    
--
src/gui/panel_widgets/provider_widget.py-232-        self.usage_timer.start()
src/gui/panel_widgets/provider_widget.py:233:        print("üîÑ DEBUG: Usage monitoring started (5s interval)")
src/gui/panel_widgets/provider_widget.py-234-    
--
src/gui/panel_widgets/provider_widget.py-242-                
src/gui/panel_widgets/provider_widget.py:243:                print(f"üåç DEBUG: Provider changed: {old_provider} ‚Üí {self.current_provider}")
src/gui/panel_widgets/provider_widget.py-244-                
--
src/gui/panel_widgets/provider_widget.py-251-        except Exception as e:
src/gui/panel_widgets/provider_widget.py:252:            print(f"‚ùå DEBUG: Provider selection change error: {e}")
src/gui/panel_widgets/provider_widget.py-253-    
--
src/gui/panel_widgets/provider_widget.py-313-        except Exception as e:
src/gui/panel_widgets/provider_widget.py:314:            print(f"‚ùå DEBUG: Usage display update error: {e}")
src/gui/panel_widgets/provider_widget.py-315-            # Fallback display - OPEN-METEO alap√©rtelmezett
--
src/gui/panel_widgets/provider_widget.py-378-        """Usage statisztik√°k friss√≠t√©se."""
src/gui/panel_widgets/provider_widget.py:379:        print("üîÑ DEBUG: Refreshing usage statistics...")
src/gui/panel_widgets/provider_widget.py-380-        
--
src/gui/panel_widgets/provider_widget.py-384-        
src/gui/panel_widgets/provider_widget.py:385:        print("‚úÖ DEBUG: Usage statistics refreshed")
src/gui/panel_widgets/provider_widget.py-386-    
--
src/gui/panel_widgets/provider_widget.py-388-        """Usage statisztik√°k resetel√©se."""
src/gui/panel_widgets/provider_widget.py:389:        print("üóëÔ∏è DEBUG: Resetting usage statistics...")
src/gui/panel_widgets/provider_widget.py-390-        
--
src/gui/panel_widgets/provider_widget.py-404-        
src/gui/panel_widgets/provider_widget.py:405:        print("‚úÖ DEBUG: Usage statistics reset")
src/gui/panel_widgets/provider_widget.py-406-    
--
src/gui/panel_widgets/provider_widget.py-417-            
src/gui/panel_widgets/provider_widget.py:418:            print(f"‚úÖ DEBUG: Provider set to: {provider_name}")
src/gui/panel_widgets/provider_widget.py-419-            
src/gui/panel_widgets/provider_widget.py-420-        except Exception as e:
src/gui/panel_widgets/provider_widget.py:421:            print(f"‚ùå DEBUG: Set provider error: {e}")
src/gui/panel_widgets/provider_widget.py-422-    
--
src/gui/panel_widgets/provider_widget.py-432-            
src/gui/panel_widgets/provider_widget.py:433:            print(f"‚úÖ DEBUG: Usage stats updated: {len(stats)} providers")
src/gui/panel_widgets/provider_widget.py-434-            
src/gui/panel_widgets/provider_widget.py-435-        except Exception as e:
src/gui/panel_widgets/provider_widget.py:436:            print(f"‚ùå DEBUG: Update usage stats error: {e}")
src/gui/panel_widgets/provider_widget.py-437-    
--
src/gui/panel_widgets/provider_widget.py-453-            self.usage_timer.stop()
src/gui/panel_widgets/provider_widget.py:454:            print("üõë DEBUG: Usage monitoring stopped")
src/gui/panel_widgets/provider_widget.py-455-    
--
src/gui/panel_widgets/provider_widget.py-459-            self.usage_timer.start()
src/gui/panel_widgets/provider_widget.py:460:            print("üîÑ DEBUG: Usage monitoring started")
src/gui/panel_widgets/provider_widget.py-461-    
--
src/gui/panel_widgets/provider_widget.py-480-            
src/gui/panel_widgets/provider_widget.py:481:            print(f"‚úÖ DEBUG: ProviderWidget state set: {provider}")
src/gui/panel_widgets/provider_widget.py-482-            return True
--
src/gui/panel_widgets/provider_widget.py-495-        
src/gui/panel_widgets/provider_widget.py:496:        print(f"üåç DEBUG: ProviderWidget enabled state: {enabled}")
src/gui/panel_widgets/provider_widget.py-497-    
--
src/gui/panel_widgets/provider_widget.py-506-        self.stop_monitoring()
src/gui/panel_widgets/provider_widget.py:507:        print("üßπ DEBUG: ProviderWidget cleanup completed")
src/gui/panel_widgets/provider_widget.py-508-    
--
src/gui/panel_widgets/date_range_widget.py-73-        
src/gui/panel_widgets/date_range_widget.py:74:        print("üìÖ DEBUG: DateRangeWidget inicializ√°lva - Multi-Year Batch Support")
src/gui/panel_widgets/date_range_widget.py-75-    
--
src/gui/panel_widgets/date_range_widget.py-298-        
src/gui/panel_widgets/date_range_widget.py:299:        print(f"üìÖ DEBUG: Date mode changed: {old_mode} ‚Üí {self.date_mode}")
src/gui/panel_widgets/date_range_widget.py-300-        
--
src/gui/panel_widgets/date_range_widget.py-310-        
src/gui/panel_widgets/date_range_widget.py:311:        print(f"üìÖ DEBUG: Time range changed: {time_range_text}")
src/gui/panel_widgets/date_range_widget.py-312-        
--
src/gui/panel_widgets/date_range_widget.py-339-            self.date_range_changed.emit(start_date, end_date)
src/gui/panel_widgets/date_range_widget.py:340:            print(f"üìÖ DEBUG: Manual dates changed: {start_date} ‚Üí {end_date}")
src/gui/panel_widgets/date_range_widget.py-341-    
--
src/gui/panel_widgets/date_range_widget.py-371-            
src/gui/panel_widgets/date_range_widget.py:372:            print(f"üìÖ DEBUG: Computed dates: {start_date} ‚Üí {end_date} ({years} years)")
src/gui/panel_widgets/date_range_widget.py-373-            
--
src/gui/panel_widgets/date_range_widget.py-447-        
src/gui/panel_widgets/date_range_widget.py:448:        print(f"üìÖ DEBUG: Set {years} years back: {start.toString()} ‚Üí {end.toString()}")
src/gui/panel_widgets/date_range_widget.py-449-    
--
src/gui/panel_widgets/date_range_widget.py-504-            
src/gui/panel_widgets/date_range_widget.py:505:            print(f"‚úÖ DEBUG: DateRangeWidget state set: {date_mode}")
src/gui/panel_widgets/date_range_widget.py-506-            return True
--
src/gui/panel_widgets/date_range_widget.py-550-        
src/gui/panel_widgets/date_range_widget.py:551:        print(f"üìÖ DEBUG: DateRangeWidget enabled state: {enabled}")
src/gui/panel_widgets/date_range_widget.py-552-    
--
src/gui/panel_widgets/api_settings_widget.py-64-        
src/gui/panel_widgets/api_settings_widget.py:65:        print("‚öôÔ∏è DEBUG: ApiSettingsWidget inicializ√°lva - Multi-Year Optimized")
src/gui/panel_widgets/api_settings_widget.py-66-    
--
src/gui/panel_widgets/api_settings_widget.py-132-        
src/gui/panel_widgets/api_settings_widget.py:133:        print(f"‚öôÔ∏è DEBUG: API settings changed: {settings}")
src/gui/panel_widgets/api_settings_widget.py-134-        
--
src/gui/panel_widgets/api_settings_widget.py-182-            
src/gui/panel_widgets/api_settings_widget.py:183:            print(f"‚úÖ DEBUG: ApiSettingsWidget state set: timeout={api_timeout}s, cache={cache_data}, auto_tz={auto_timezone}")
src/gui/panel_widgets/api_settings_widget.py-184-            return True
--
src/gui/panel_widgets/api_settings_widget.py-226-        
src/gui/panel_widgets/api_settings_widget.py:227:        print(f"‚öôÔ∏è DEBUG: ApiSettingsWidget enabled state: {enabled}")
src/gui/panel_widgets/api_settings_widget.py-228-    
--
src/gui/panel_widgets/multi_city_widget.py-83-        
src/gui/panel_widgets/multi_city_widget.py:84:        print("üèôÔ∏è DEBUG: MultiCityWidget (DROPDOWN) inicializ√°lva - Clean Architecture + COMBO FIX")
src/gui/panel_widgets/multi_city_widget.py-85-    
--
src/gui/panel_widgets/multi_city_widget.py-137-            self._available_counties = self.city_manager.get_hungarian_counties()
src/gui/panel_widgets/multi_city_widget.py:138:            print(f"üèõÔ∏è DEBUG: Bet√∂lt√∂tt megy√©k: {len(self._available_counties)} db")
src/gui/panel_widgets/multi_city_widget.py:139:            print(f"üìã DEBUG: Megy√©k list√°ja: {self._available_counties[:5]}...")  # Els≈ë 5
src/gui/panel_widgets/multi_city_widget.py-140-            
--
src/gui/panel_widgets/multi_city_widget.py-231-        if mode == self._current_mode:
src/gui/panel_widgets/multi_city_widget.py:232:            print(f"üîÑ DEBUG: Mode already set to {mode}, skipping...")
src/gui/panel_widgets/multi_city_widget.py-233-            return  # Nincs v√°ltoz√°s
src/gui/panel_widgets/multi_city_widget.py-234-        
src/gui/panel_widgets/multi_city_widget.py:235:        print(f"üîÑ DEBUG: Analysis mode v√°lt√°s: {self._current_mode} ‚Üí {mode}")
src/gui/panel_widgets/multi_city_widget.py-236-        
--
src/gui/panel_widgets/multi_city_widget.py-241-        
src/gui/panel_widgets/multi_city_widget.py:242:        print(f"‚úÖ DEBUG: Analysis mode v√°lt√°s befejezve: {mode}")
src/gui/panel_widgets/multi_city_widget.py-243-    
--
src/gui/panel_widgets/multi_city_widget.py-248-        """
src/gui/panel_widgets/multi_city_widget.py:249:        print(f"üîÑ DEBUG: _populate_combo_box() started - mode: {self._current_mode}")
src/gui/panel_widgets/multi_city_widget.py-250-        
--
src/gui/panel_widgets/multi_city_widget.py-265-                
src/gui/panel_widgets/multi_city_widget.py:266:                print(f"üèûÔ∏è DEBUG: ComboBox felt√∂ltve {len(self._available_regions)} r√©gi√≥val")
src/gui/panel_widgets/multi_city_widget.py-267-                
--
src/gui/panel_widgets/multi_city_widget.py-275-                
src/gui/panel_widgets/multi_city_widget.py:276:                print(f"üèõÔ∏è DEBUG: ComboBox felt√∂ltve {len(self._available_counties)} megy√©vel")
src/gui/panel_widgets/multi_city_widget.py-277-            
--
src/gui/panel_widgets/multi_city_widget.py-279-            self.combo_box.setEnabled(True)
src/gui/panel_widgets/multi_city_widget.py:280:            print(f"‚úÖ DEBUG: ComboBox enabled state: {self.combo_box.isEnabled()}")
src/gui/panel_widgets/multi_city_widget.py-281-            
--
src/gui/panel_widgets/multi_city_widget.py-288-            self._updating_state = False
src/gui/panel_widgets/multi_city_widget.py:289:            print(f"‚úÖ DEBUG: _populate_combo_box() completed")
src/gui/panel_widgets/multi_city_widget.py-290-    
--
src/gui/panel_widgets/multi_city_widget.py-297-                    self.combo_box.setCurrentIndex(i)
src/gui/panel_widgets/multi_city_widget.py:298:                    print(f"üîÑ DEBUG: R√©gi√≥ vissza√°ll√≠tva: {self._selected_region}")
src/gui/panel_widgets/multi_city_widget.py-299-                    break
--
src/gui/panel_widgets/multi_city_widget.py-305-                    self.combo_box.setCurrentIndex(i)
src/gui/panel_widgets/multi_city_widget.py:306:                    print(f"üîÑ DEBUG: Megye vissza√°ll√≠tva: {self._selected_county}")
src/gui/panel_widgets/multi_city_widget.py-307-                    break
--
src/gui/panel_widgets/multi_city_widget.py-320-        if self._updating_state:
src/gui/panel_widgets/multi_city_widget.py:321:            print(f"‚è∏Ô∏è DEBUG: Skipping combo change (updating state): {text}")
src/gui/panel_widgets/multi_city_widget.py-322-            return
--
src/gui/panel_widgets/multi_city_widget.py-324-        current_index = self.combo_box.currentIndex()
src/gui/panel_widgets/multi_city_widget.py:325:        print(f"üîÑ DEBUG: Combo selection changed - index: {current_index}, text: '{text}'")
src/gui/panel_widgets/multi_city_widget.py-326-        
--
src/gui/panel_widgets/multi_city_widget.py-328-        if current_index == 0:
src/gui/panel_widgets/multi_city_widget.py:329:            print(f"üîÑ DEBUG: Placeholder selected - clearing selection")
src/gui/panel_widgets/multi_city_widget.py-330-            self._clear_current_selection()
--
src/gui/panel_widgets/multi_city_widget.py-334-        selected_data = self.combo_box.currentData()
src/gui/panel_widgets/multi_city_widget.py:335:        print(f"‚úÖ DEBUG: Valid selection - data: {selected_data}")
src/gui/panel_widgets/multi_city_widget.py-336-        
--
src/gui/panel_widgets/multi_city_widget.py-339-            self._selected_county = None  # Clear other mode
src/gui/panel_widgets/multi_city_widget.py:340:            print(f"üèûÔ∏è DEBUG: R√©gi√≥ kiv√°lasztva: {self._selected_region}")
src/gui/panel_widgets/multi_city_widget.py-341-            
--
src/gui/panel_widgets/multi_city_widget.py-344-            self._selected_region = None  # Clear other mode
src/gui/panel_widgets/multi_city_widget.py:345:            print(f"üèõÔ∏è DEBUG: Megye kiv√°lasztva: {self._selected_county}")
src/gui/panel_widgets/multi_city_widget.py-346-        
--
src/gui/panel_widgets/multi_city_widget.py-354-            self._selected_region = None
src/gui/panel_widgets/multi_city_widget.py:355:            print(f"üèûÔ∏è DEBUG: R√©gi√≥ selection t√∂r√∂lve")
src/gui/panel_widgets/multi_city_widget.py-356-        else:
src/gui/panel_widgets/multi_city_widget.py-357-            self._selected_county = None
src/gui/panel_widgets/multi_city_widget.py:358:            print(f"üèõÔ∏è DEBUG: Megye selection t√∂r√∂lve")
src/gui/panel_widgets/multi_city_widget.py-359-        
--
src/gui/panel_widgets/multi_city_widget.py-375-        self.selection_changed.emit(selection_data)
src/gui/panel_widgets/multi_city_widget.py:376:        print(f"üì° DEBUG: selection_changed signal emitted: {selection_data}")
src/gui/panel_widgets/multi_city_widget.py-377-    
--
src/gui/panel_widgets/multi_city_widget.py-428-        
src/gui/panel_widgets/multi_city_widget.py:429:        print(f"‚ùå DEBUG: Selection t√∂rl√©se - {self._current_mode} mode")
src/gui/panel_widgets/multi_city_widget.py-430-        
--
src/gui/panel_widgets/multi_city_widget.py-493-            
src/gui/panel_widgets/multi_city_widget.py:494:            print(f"‚úÖ DEBUG: MultiCityWidget state restored successfully")
src/gui/panel_widgets/multi_city_widget.py-495-            return True
--
src/gui/panel_widgets/multi_city_widget.py-541-            
src/gui/panel_widgets/multi_city_widget.py:542:            print(f"üèôÔ∏è DEBUG: Kiv√°lasztott v√°rosok: {len(cities)} db ({self._current_mode}: {current_selection})")
src/gui/panel_widgets/multi_city_widget.py-543-            return cities
--
src/gui/panel_widgets/multi_city_widget.py-575-        
src/gui/panel_widgets/multi_city_widget.py:576:        print(f"üèôÔ∏è DEBUG: MultiCityWidget enabled state: {enabled}")
src/gui/panel_widgets/multi_city_widget.py:577:        print(f"üîß DEBUG: ComboBox enabled after set_enabled: {self.combo_box.isEnabled()}")
src/gui/panel_widgets/multi_city_widget.py-578-    
--
src/gui/panel_widgets/location_widget.py-76-        
src/gui/panel_widgets/location_widget.py:77:        print("üåç DEBUG: LocationWidget inicializ√°lva - Clean Architecture")
src/gui/panel_widgets/location_widget.py-78-    
--
src/gui/panel_widgets/location_widget.py-164-        """Keres√©si k√©r√©s tov√°bb√≠t√°sa."""
src/gui/panel_widgets/location_widget.py:165:        print(f"üîç DEBUG: LocationWidget search requested: {query}")
src/gui/panel_widgets/location_widget.py-166-        self.search_requested.emit(query)
--
src/gui/panel_widgets/location_widget.py-173-        try:
src/gui/panel_widgets/location_widget.py:174:            print(f"üèôÔ∏è DEBUG: LocationWidget city selected: {name} [{lat:.4f}, {lon:.4f}]")
src/gui/panel_widgets/location_widget.py-175-            
--
src/gui/panel_widgets/location_widget.py-191-            
src/gui/panel_widgets/location_widget.py:192:            print(f"‚úÖ DEBUG: LocationWidget city selection processed: {name}")
src/gui/panel_widgets/location_widget.py-193-            
--
src/gui/panel_widgets/location_widget.py-202-        try:
src/gui/panel_widgets/location_widget.py:203:            print(f"üåç DEBUG: LocationWidget location changed: {location}")
src/gui/panel_widgets/location_widget.py-204-            
--
src/gui/panel_widgets/location_widget.py-230-            
src/gui/panel_widgets/location_widget.py:231:            print(f"‚úÖ DEBUG: LocationWidget location change processed: {location.identifier}")
src/gui/panel_widgets/location_widget.py-232-            
--
src/gui/panel_widgets/location_widget.py-241-        try:
src/gui/panel_widgets/location_widget.py:242:            print("üóëÔ∏è DEBUG: LocationWidget clear location")
src/gui/panel_widgets/location_widget.py-243-            
--
src/gui/panel_widgets/location_widget.py-255-            
src/gui/panel_widgets/location_widget.py:256:            print("‚úÖ DEBUG: LocationWidget location cleared")
src/gui/panel_widgets/location_widget.py-257-            
--
src/gui/panel_widgets/location_widget.py-270-        """UI teljes friss√≠t√©se - REAKTIV√ÅL√ÅS T√ÅMOGAT√ÅS."""
src/gui/panel_widgets/location_widget.py:271:        print("üîÑ DEBUG: LocationWidget refresh_ui() called")
src/gui/panel_widgets/location_widget.py-272-        
--
src/gui/panel_widgets/location_widget.py-293-            
src/gui/panel_widgets/location_widget.py:294:            print("‚úÖ DEBUG: LocationWidget refresh_ui() completed")
src/gui/panel_widgets/location_widget.py-295-            
--
src/gui/panel_widgets/location_widget.py-300-        """K√©nyszer√≠tett refresh - WIDGET REAKTIV√ÅL√ÅS."""
src/gui/panel_widgets/location_widget.py:301:        print("‚ö° DEBUG: LocationWidget force_refresh() called")
src/gui/panel_widgets/location_widget.py-302-        
--
src/gui/panel_widgets/location_widget.py-317-            
src/gui/panel_widgets/location_widget.py:318:            print("‚úÖ DEBUG: LocationWidget force_refresh() completed")
src/gui/panel_widgets/location_widget.py-319-            
--
src/gui/panel_widgets/location_widget.py-372-            
src/gui/panel_widgets/location_widget.py:373:            print(f"‚úÖ DEBUG: LocationWidget state set successfully")
src/gui/panel_widgets/location_widget.py-374-            return True
--
src/gui/panel_widgets/location_widget.py-405-        
src/gui/panel_widgets/location_widget.py:406:        print(f"üåç DEBUG: LocationWidget enabled state: {enabled}")
src/gui/panel_widgets/location_widget.py-407-    
--
src/gui/panel_widgets/__init__.py-115-    """
src/gui/panel_widgets/__init__.py:116:    print("üéØ DEBUG: Panel Widgets Info:")
src/gui/panel_widgets/__init__.py-117-    for widget in widgets:
--
src/gui/panel_widgets/__init__.py-121-
src/gui/panel_widgets/__init__.py:122:print("üéØ DEBUG: Panel Widgets package loaded - Clean Architecture Components")
--
src/gui/panel_widgets/analysis_type_widget.py-63-        
src/gui/panel_widgets/analysis_type_widget.py:64:        print("üéØ DEBUG: AnalysisTypeWidget inicializ√°lva - Clean Architecture")
src/gui/panel_widgets/analysis_type_widget.py-65-    
--
src/gui/panel_widgets/analysis_type_widget.py-141-            
src/gui/panel_widgets/analysis_type_widget.py:142:            print(f"üéØ DEBUG: Analysis type changed: {old_type} ‚Üí {new_type}")
src/gui/panel_widgets/analysis_type_widget.py-143-            
--
src/gui/panel_widgets/analysis_type_widget.py-191-            
src/gui/panel_widgets/analysis_type_widget.py:192:            print(f"üéØ DEBUG: Analysis type set programmatically: {old_type} ‚Üí {analysis_type}")
src/gui/panel_widgets/analysis_type_widget.py-193-            
--
src/gui/panel_widgets/analysis_type_widget.py-243-        
src/gui/panel_widgets/analysis_type_widget.py:244:        print(f"üéØ DEBUG: AnalysisTypeWidget enabled state: {enabled}")
src/gui/panel_widgets/analysis_type_widget.py-245-    
--
src/gui/control_panel.py-162-        
src/gui/control_panel.py:163:        print("üèôÔ∏è DEBUG: MultiCityWidget l√©trehozva √©s hozz√°adva a layout-hoz")
src/gui/control_panel.py-164-        
--
src/gui/control_panel.py-186-        
src/gui/control_panel.py:187:        print("‚úÖ DEBUG: ControlPanel UI setup complete - MULTI-CITY WIDGET INTEGR√ÅLVA")
src/gui/control_panel.py-188-    
--
src/gui/control_panel.py-237-        """
src/gui/control_panel.py:238:        print(f"üéØ DEBUG: Analysis type changed from '{self._last_analysis_type}' to '{analysis_type}'")
src/gui/control_panel.py-239-        
--
src/gui/control_panel.py-254-        
src/gui/control_panel.py:255:        print(f"‚úÖ DEBUG: Analysis type change completed: {analysis_type}")
src/gui/control_panel.py-256-    
--
src/gui/control_panel.py-365-        """
src/gui/control_panel.py:366:        print("üíæ DEBUG: Preserving widget states before analysis type change...")
src/gui/control_panel.py-367-        
--
src/gui/control_panel.py-378-            multi_city_valid = self._preserved_states['multi_city'].get('is_valid', False)
src/gui/control_panel.py:379:            print(f"‚úÖ DEBUG: Widget states preserved - location: {location_valid}, multi-city: {multi_city_valid}")
src/gui/control_panel.py-380-            
src/gui/control_panel.py-381-        except Exception as e:
src/gui/control_panel.py:382:            print(f"‚ö†Ô∏è DEBUG: Error preserving widget states: {e}")
src/gui/control_panel.py-383-            self._preserved_states = {}
--
src/gui/control_panel.py-391-        """
src/gui/control_panel.py:392:        print(f"üîÑ DEBUG: Restoring widget states for analysis type: {analysis_type}")
src/gui/control_panel.py-393-        
--
src/gui/control_panel.py-398-                if location_state.get("has_location", False):
src/gui/control_panel.py:399:                    print("üîÑ DEBUG: Restoring location widget state...")
src/gui/control_panel.py-400-                    self.location_widget.set_state(location_state)
--
src/gui/control_panel.py-405-                if multi_city_state.get("is_valid", False):
src/gui/control_panel.py:406:                    print(f"üèôÔ∏è DEBUG: Restoring multi-city widget state for {analysis_type}...")
src/gui/control_panel.py-407-                    self.multi_city_widget.set_state(multi_city_state)
--
src/gui/control_panel.py-418-            
src/gui/control_panel.py:419:            print("‚úÖ DEBUG: Widget states restored successfully")
src/gui/control_panel.py-420-            
src/gui/control_panel.py-421-        except Exception as e:
src/gui/control_panel.py:422:            print(f"‚ö†Ô∏è DEBUG: Error restoring widget states: {e}")
src/gui/control_panel.py-423-    
--
src/gui/control_panel.py-430-        """
src/gui/control_panel.py:431:        print(f"üîß DEBUG: _update_ui_for_analysis_type_fixed called: {analysis_type}")
src/gui/control_panel.py-432-        
src/gui/control_panel.py-433-        if analysis_type == "single_location":
src/gui/control_panel.py:434:            print("üîß DEBUG: Setting UI to single_location mode - LocationWidget MEGJELEN√çT√âSE...")
src/gui/control_panel.py-435-            
--
src/gui/control_panel.py-451-            
src/gui/control_panel.py:452:            print("‚úÖ DEBUG: UI set to single_location mode - LOCATION WIDGET VISIBLE, MULTI-CITY HIDDEN")
src/gui/control_panel.py-453-            
src/gui/control_panel.py-454-        elif analysis_type in ["region", "county"]:
src/gui/control_panel.py:455:            print(f"üîß DEBUG: Setting UI to {analysis_type} mode - MultiCityWidget MEGJELEN√çT√âSE...")
src/gui/control_panel.py-456-            
--
src/gui/control_panel.py-468-            
src/gui/control_panel.py:469:            print(f"‚úÖ DEBUG: UI set to {analysis_type} mode - MULTI-CITY WIDGET VISIBLE ({analysis_type} mode), LOCATION HIDDEN")
src/gui/control_panel.py-470-        
--
src/gui/control_panel.py-494-                
src/gui/control_panel.py:495:                print("üîß DEBUG: Delayed widget refresh completed for single_location - LocationWidget VISIBLE")
src/gui/control_panel.py-496-            
--
src/gui/control_panel.py-502-                
src/gui/control_panel.py:503:                print(f"üîß DEBUG: Delayed widget refresh completed for {analysis_type} - MultiCityWidget VISIBLE")
src/gui/control_panel.py-504-            
src/gui/control_panel.py-505-        except Exception as e:
src/gui/control_panel.py:506:            print(f"‚ö†Ô∏è DEBUG: Error during delayed widget refresh: {e}")
src/gui/control_panel.py-507-    
--
src/gui/control_panel.py-517-        
src/gui/control_panel.py:518:        print(f"üöÄ DEBUG: Fetch button enabled: {can_fetch} (comprehensive validation + multi-city)")
src/gui/control_panel.py-519-    
--
src/gui/control_panel.py-530-            if not analysis_type:
src/gui/control_panel.py:531:                print("‚ùå DEBUG: No analysis type selected")
src/gui/control_panel.py-532-                return False
--
src/gui/control_panel.py-538-                if not location_valid:
src/gui/control_panel.py:539:                    print("‚ùå DEBUG: Location not valid in single_location mode")
src/gui/control_panel.py-540-                    return False
--
src/gui/control_panel.py-544-                if not location_state.get("has_location", False):
src/gui/control_panel.py:545:                    print("‚ùå DEBUG: No location selected in single_location mode")
src/gui/control_panel.py-546-                    return False
--
src/gui/control_panel.py-549-                if not city_data or not all(key in city_data for key in ["latitude", "longitude"]):
src/gui/control_panel.py:550:                    print("‚ùå DEBUG: Invalid city data in single_location mode")
src/gui/control_panel.py-551-                    return False
--
src/gui/control_panel.py-556-                if not multi_city_valid:
src/gui/control_panel.py:557:                    print(f"‚ùå DEBUG: Multi-city selection not valid in {analysis_type} mode")
src/gui/control_panel.py-558-                    return False
--
src/gui/control_panel.py-562-                if multi_city_state.get("selection_count", 0) == 0:
src/gui/control_panel.py:563:                    print(f"‚ùå DEBUG: No {analysis_type} selected in multi-city mode")
src/gui/control_panel.py-564-                    return False
src/gui/control_panel.py-565-                
src/gui/control_panel.py:566:                print(f"‚úÖ DEBUG: Multi-city validation passed for {analysis_type}")
src/gui/control_panel.py-567-            
--
src/gui/control_panel.py-570-            if not date_valid:
src/gui/control_panel.py:571:                print("‚ùå DEBUG: Date range not valid")
src/gui/control_panel.py-572-                return False
--
src/gui/control_panel.py-576-            if not api_valid:
src/gui/control_panel.py:577:                print("‚ùå DEBUG: API settings not valid")
src/gui/control_panel.py-578-                return False
--
src/gui/control_panel.py-582-            if not provider_valid:
src/gui/control_panel.py:583:                print("‚ùå DEBUG: Provider not valid")
src/gui/control_panel.py-584-                return False
--
src/gui/control_panel.py-588-            if not not_fetching:
src/gui/control_panel.py:589:                print("‚ùå DEBUG: Fetch already in progress")
src/gui/control_panel.py-590-                return False
src/gui/control_panel.py-591-            
src/gui/control_panel.py:592:            print(f"‚úÖ DEBUG: Comprehensive validation passed for {analysis_type}")
src/gui/control_panel.py-593-            return True
--
src/gui/control_panel.py-595-        except Exception as e:
src/gui/control_panel.py:596:            print(f"‚ùå DEBUG: Error during comprehensive fetch validation: {e}")
src/gui/control_panel.py-597-            return False
--
src/gui/control_panel.py-682-            
src/gui/control_panel.py:683:            print(f"üèôÔ∏è DEBUG: Multi-city analysis request - {len(selected_cities)} cities selected")
src/gui/control_panel.py:684:            print(f"üö® DEBUG: Analysis type converted: {analysis_type} ‚Üí {converted_analysis_type}")
src/gui/control_panel.py-685-        
--
src/gui/control_panel.py-731-        if analysis_type not in valid_types:
src/gui/control_panel.py:732:            print(f"‚ùå DEBUG: Invalid analysis type: {analysis_type}")
src/gui/control_panel.py-733-            return False
--
src/gui/control_panel.py-848-        if self.query_control_widget._is_fetching:
src/gui/control_panel.py:849:            print("üîß DEBUG: Auto-resetting fetch state after timeout")
src/gui/control_panel.py-850-            self.query_control_widget.set_fetching_state(False)
--
src/gui/charts/comparison_chart.py-46-        """
src/gui/charts/comparison_chart.py:47:        print("üìä DEBUG: MultiYearComparisonChart.update_data() - DUPLIK√ÅCI√ì BUGFIX + SIMPLIFIED THEMEMANAGER VERZI√ì")
src/gui/charts/comparison_chart.py-48-        
--
src/gui/charts/comparison_chart.py-56-            if df.empty:
src/gui/charts/comparison_chart.py:57:                print("‚ö†Ô∏è DEBUG: √úres DataFrame, comparison t√∂rl√©se")
src/gui/charts/comparison_chart.py-58-                self.clear_chart()
--
src/gui/charts/comparison_chart.py-63-            # === KRITIKUS: TELJES FIGURE T√ñRL√âSE ===
src/gui/charts/comparison_chart.py:64:            print("üßπ DEBUG: MultiYear Figure.clear() - DUPLIK√ÅCI√ì ELLEN")
src/gui/charts/comparison_chart.py-65-            self.figure.clear()
--
src/gui/charts/comparison_chart.py-75-            
src/gui/charts/comparison_chart.py:76:            print("‚úÖ DEBUG: MultiYearComparisonChart friss√≠t√©s k√©sz - DUPLIK√ÅCI√ì MENTES + THEMED")
src/gui/charts/comparison_chart.py-77-            
src/gui/charts/comparison_chart.py-78-        except Exception as e:
src/gui/charts/comparison_chart.py:79:            print(f"‚ùå DEBUG: Multi-year comparison chart hiba: {e}")
src/gui/charts/comparison_chart.py-80-            self._is_updating = False
--
src/gui/charts/comparison_chart.py-92-        if not dates or not temp_max or not temp_min or not temp_mean:
src/gui/charts/comparison_chart.py:93:            print("‚ö†Ô∏è DEBUG: Hi√°nyz√≥ t√∂bb√©vi adatok - chart nem jelen√≠thet≈ë meg")
src/gui/charts/comparison_chart.py-94-            return pd.DataFrame()
--
src/gui/charts/comparison_chart.py-97-        if len(dates) != len(temp_max) or len(dates) != len(temp_min) or len(dates) != len(temp_mean):
src/gui/charts/comparison_chart.py:98:            print("‚ùå DEBUG: Elt√©r≈ë hossz√∫s√°g√∫ t√∂bb√©vi adatok - chart nem jelen√≠thet≈ë meg")
src/gui/charts/comparison_chart.py-99-            return pd.DataFrame()
--
src/gui/charts/comparison_chart.py-116-        if df.empty:
src/gui/charts/comparison_chart.py:117:            print("‚ö†Ô∏è DEBUG: Nincs √©rv√©nyes t√∂bb√©vi adat - chart nem jelen√≠thet≈ë meg")
src/gui/charts/comparison_chart.py-118-        
--
src/gui/charts/comparison_chart.py-125-        """
src/gui/charts/comparison_chart.py:126:        print("üé® DEBUG: _plot_multi_year_comparison() - DUPLIK√ÅCI√ì MENTES + SIMPLIFIED THEMEMANAGER")
src/gui/charts/comparison_chart.py-127-        
--
src/gui/charts/comparison_chart.py-150-        
src/gui/charts/comparison_chart.py:151:        print(f"üé® DEBUG: Using SimplifiedThemeManager trend colors: {trend_colors}")
src/gui/charts/comparison_chart.py-152-        
--
src/gui/charts/precipitation_chart.py-43-        """
src/gui/charts/precipitation_chart.py:44:        print("üåßÔ∏è DEBUG: PrecipitationChart.update_data() - DUPLIK√ÅCI√ì BUGFIX + SIMPLIFIED THEMEMANAGER VERZI√ì")
src/gui/charts/precipitation_chart.py-45-        
--
src/gui/charts/precipitation_chart.py-53-            if df.empty:
src/gui/charts/precipitation_chart.py:54:                print("‚ö†Ô∏è DEBUG: √úres DataFrame, csapad√©k chart t√∂rl√©se")
src/gui/charts/precipitation_chart.py-55-                self.clear_chart()
--
src/gui/charts/precipitation_chart.py-60-            # === KRITIKUS: TELJES FIGURE T√ñRL√âSE ===
src/gui/charts/precipitation_chart.py:61:            print("üßπ DEBUG: Precipitation Figure.clear() - DUPLIK√ÅCI√ì ELLEN")
src/gui/charts/precipitation_chart.py-62-            self.figure.clear()
--
src/gui/charts/precipitation_chart.py-72-            
src/gui/charts/precipitation_chart.py:73:            print("‚úÖ DEBUG: PrecipitationChart friss√≠t√©s k√©sz - DUPLIK√ÅCI√ì MENTES + THEMED")
src/gui/charts/precipitation_chart.py-74-            
src/gui/charts/precipitation_chart.py-75-        except Exception as e:
src/gui/charts/precipitation_chart.py:76:            print(f"‚ùå DEBUG: Csapad√©k chart hiba: {e}")
src/gui/charts/precipitation_chart.py-77-            self._is_updating = False
--
src/gui/charts/precipitation_chart.py-100-        """
src/gui/charts/precipitation_chart.py:101:        print("üé® DEBUG: _plot_precipitation() - DUPLIK√ÅCI√ì MENTES + SIMPLIFIED THEMEMANAGER")
src/gui/charts/precipitation_chart.py-102-        
--
src/gui/charts/precipitation_chart.py-116-        
src/gui/charts/precipitation_chart.py:117:        print(f"üé® DEBUG: Using SimplifiedThemeManager precipitation colors: {precip_colors}")
src/gui/charts/precipitation_chart.py-118-        
--
src/gui/charts/wind_chart.py-47-        """
src/gui/charts/wind_chart.py:48:        print("üí® DEBUG: WindChart.update_data() - MAGYAR SZABV√ÅNY + SIMPLIFIED THEMEMANAGER VERZI√ì")
src/gui/charts/wind_chart.py-49-        
--
src/gui/charts/wind_chart.py-57-            if df.empty:
src/gui/charts/wind_chart.py:58:                print("‚ö†Ô∏è DEBUG: √úres DataFrame, sz√©l chart t√∂rl√©se")
src/gui/charts/wind_chart.py-59-                self.clear_chart()
--
src/gui/charts/wind_chart.py-64-            # === KRITIKUS: TELJES FIGURE T√ñRL√âSE ===
src/gui/charts/wind_chart.py:65:            print("üßπ DEBUG: Wind Figure.clear() - DUPLIK√ÅCI√ì ELLEN")
src/gui/charts/wind_chart.py-66-            self.figure.clear()
--
src/gui/charts/wind_chart.py-76-            
src/gui/charts/wind_chart.py:77:            print("‚úÖ DEBUG: WindChart friss√≠t√©s k√©sz - MAGYAR SZABV√ÅNY + THEMED")
src/gui/charts/wind_chart.py-78-            
src/gui/charts/wind_chart.py-79-        except Exception as e:
src/gui/charts/wind_chart.py:80:            print(f"‚ùå DEBUG: Sz√©l chart hiba: {e}")
src/gui/charts/wind_chart.py-81-            self._is_updating = False
--
src/gui/charts/wind_chart.py-99-        
src/gui/charts/wind_chart.py:100:        print(f"üå™Ô∏è DEBUG: WindChart data sources - wind_gusts_max: {len(wind_gusts_max) if wind_gusts_max else 0}, windspeed_10m_max: {len(windspeed_10m_max) if windspeed_10m_max else 0}")
src/gui/charts/wind_chart.py-101-        
--
src/gui/charts/wind_chart.py-103-        if not dates:
src/gui/charts/wind_chart.py:104:            print("‚ö†Ô∏è DEBUG: Nincs d√°tum adat - WindChart nem jelen√≠thet≈ë meg")
src/gui/charts/wind_chart.py-105-            return pd.DataFrame()
--
src/gui/charts/wind_chart.py-116-            self.y_label = "Sz√©ll√∂k√©sek (km/h)"
src/gui/charts/wind_chart.py:117:            print(f"‚úÖ DEBUG: WindChart using PRIMARY source: {data_source}")
src/gui/charts/wind_chart.py-118-        elif windspeed_10m_max and len(windspeed_10m_max) == len(dates):
--
src/gui/charts/wind_chart.py-123-            self.y_label = "Sz√©lsebess√©g (km/h)"
src/gui/charts/wind_chart.py:124:            print(f"‚ö†Ô∏è DEBUG: WindChart using FALLBACK source: {data_source}")
src/gui/charts/wind_chart.py-125-        else:
src/gui/charts/wind_chart.py:126:            print(f"‚ùå DEBUG: Nincs haszn√°lhat√≥ sz√©l adat - WindChart nem jelen√≠thet≈ë meg")
src/gui/charts/wind_chart.py-127-            print(f"   - wind_gusts_max: {len(wind_gusts_max) if wind_gusts_max else 0} elem")
--
src/gui/charts/wind_chart.py-142-        if df.empty:
src/gui/charts/wind_chart.py:143:            print(f"‚ùå DEBUG: √úres DataFrame {data_source} adatok ut√°n - WindChart nem jelen√≠thet≈ë meg")
src/gui/charts/wind_chart.py-144-        else:
--
src/gui/charts/wind_chart.py-146-            avg_wind = df['windspeed'].mean()
src/gui/charts/wind_chart.py:147:            print(f"‚úÖ DEBUG: WindChart DataFrame k√©sz - {data_source}, max: {max_wind:.1f} km/h, avg: {avg_wind:.1f} km/h")
src/gui/charts/wind_chart.py-148-        
--
src/gui/charts/wind_chart.py-156-        """
src/gui/charts/wind_chart.py:157:        print("üé® DEBUG: _plot_wind() - MAGYAR SZ√âLKATEG√ìRI√ÅK + SIMPLIFIED THEMEMANAGER")
src/gui/charts/wind_chart.py-158-        
--
src/gui/charts/wind_chart.py-174-        
src/gui/charts/wind_chart.py:175:        print(f"üé® DEBUG: Using Magyar szabv√°ny wind colors: {wind_colors}")
src/gui/charts/wind_chart.py-176-        
--
src/gui/charts/temperature_chart.py-47-        """
src/gui/charts/temperature_chart.py:48:        print("üå°Ô∏è DEBUG: EnhancedTemperatureChart.update_data() - DUPLIK√ÅCI√ì BUGFIX + SIMPLIFIED THEMEMANAGER VERZI√ì")
src/gui/charts/temperature_chart.py-49-        
--
src/gui/charts/temperature_chart.py-52-            if self._is_updating:
src/gui/charts/temperature_chart.py:53:                print("‚ö†Ô∏è DEBUG: Update m√°r folyamatban, skip")
src/gui/charts/temperature_chart.py-54-                return
--
src/gui/charts/temperature_chart.py-59-            if df.empty:
src/gui/charts/temperature_chart.py:60:                print("‚ö†Ô∏è DEBUG: √úres DataFrame, chart t√∂rl√©se")
src/gui/charts/temperature_chart.py-61-                self.clear_chart()
--
src/gui/charts/temperature_chart.py-67-            # === KRITIKUS: TELJES FIGURE T√ñRL√âSE DUPLIK√ÅCI√ì ELLEN ===
src/gui/charts/temperature_chart.py:68:            print("üßπ DEBUG: Figure.clear() h√≠v√°sa duplik√°ci√≥ ellen")
src/gui/charts/temperature_chart.py-69-            self.figure.clear()
--
src/gui/charts/temperature_chart.py-81-            
src/gui/charts/temperature_chart.py:82:            print("‚úÖ DEBUG: EnhancedTemperatureChart friss√≠t√©s k√©sz - DUPLIK√ÅCI√ì MENTES + THEMED")
src/gui/charts/temperature_chart.py-83-            
src/gui/charts/temperature_chart.py-84-        except Exception as e:
src/gui/charts/temperature_chart.py:85:            print(f"‚ùå DEBUG: Enhanced h≈ëm√©rs√©klet chart hiba: {e}")
src/gui/charts/temperature_chart.py-86-            self._is_updating = False
--
src/gui/charts/temperature_chart.py-98-        if not dates or not temp_max or not temp_min or not temp_mean:
src/gui/charts/temperature_chart.py:99:            print("‚ö†Ô∏è DEBUG: Hi√°nyz√≥ h≈ëm√©rs√©klet adatok - chart nem jelen√≠thet≈ë meg")
src/gui/charts/temperature_chart.py-100-            return pd.DataFrame()
--
src/gui/charts/temperature_chart.py-103-        if len(dates) != len(temp_max) or len(dates) != len(temp_min) or len(dates) != len(temp_mean):
src/gui/charts/temperature_chart.py:104:            print("‚ùå DEBUG: Elt√©r≈ë hossz√∫s√°g√∫ h≈ëm√©rs√©klet adatok - chart nem jelen√≠thet≈ë meg")
src/gui/charts/temperature_chart.py-105-            return pd.DataFrame()
--
src/gui/charts/temperature_chart.py-117-        if df.empty:
src/gui/charts/temperature_chart.py:118:            print("‚ö†Ô∏è DEBUG: Nincs √©rv√©nyes h≈ëm√©rs√©klet adat - chart nem jelen√≠thet≈ë meg")
src/gui/charts/temperature_chart.py-119-        
--
src/gui/charts/temperature_chart.py-127-        """
src/gui/charts/temperature_chart.py:128:        print("üé® DEBUG: _plot_enhanced_temperature() - DUPLIK√ÅCI√ì MENTES + SIMPLIFIED THEMEMANAGER")
src/gui/charts/temperature_chart.py-129-        
--
src/gui/charts/temperature_chart.py-153-        
src/gui/charts/temperature_chart.py:154:        print(f"üé® DEBUG: Using SimplifiedThemeManager colors: {temp_colors}")
src/gui/charts/temperature_chart.py-155-        
--
src/gui/charts/temperature_chart.py-293-            
src/gui/charts/temperature_chart.py:294:            print("üéØ DEBUG: Legend poz√≠ci√≥ jav√≠tva - k√≠v√ºlre helyezve (1.05, 1) + SimplifiedThemeManager sz√≠nek")
src/gui/charts/temperature_chart.py-295-        
--
src/gui/charts/temperature_chart.py-299-        
src/gui/charts/temperature_chart.py:300:        print("‚úÖ DEBUG: Enhanced temperature chart form√°zva - LEGEND NEM FEDI EL A TARTALMAT + SIMPLIFIED THEMEMANAGER")
--
src/gui/charts/base_chart.py-100-        
src/gui/charts/base_chart.py:101:        print(f"‚úÖ DEBUG: WeatherChart initialized with theme: {self.theme_manager.get_current_theme()}")
src/gui/charts/base_chart.py-102-    
--
src/gui/charts/base_chart.py-122-        
src/gui/charts/base_chart.py:123:        print(f"üé® DEBUG: Emoji font setup: {emoji_font_fallbacks[:3]}")
src/gui/charts/base_chart.py-124-        
--
src/gui/charts/base_chart.py-160-                self._font_cache_rebuilt = True
src/gui/charts/base_chart.py:161:                print("‚úÖ DEBUG: Matplotlib font cache √∫jra√©p√≠tve emoji fontokkal")
src/gui/charts/base_chart.py-162-        except Exception as e:
src/gui/charts/base_chart.py:163:            print(f"‚ö†Ô∏è DEBUG: Font cache √∫jra√©p√≠t√©s hiba (nem kritikus): {e}")
src/gui/charts/base_chart.py-164-        
src/gui/charts/base_chart.py:165:        print("‚úÖ DEBUG: Matplotlib font/size setup complete - colors will be applied per-figure")
src/gui/charts/base_chart.py-166-    
--
src/gui/charts/base_chart.py-173-        """
src/gui/charts/base_chart.py:174:        print(f"üé® DEBUG: WeatherChart theme changing: {self.theme_manager.get_current_theme()} ‚Üí {theme_name}")
src/gui/charts/base_chart.py-175-        
--
src/gui/charts/base_chart.py-183-        if self.current_data is not None:
src/gui/charts/base_chart.py:184:            print("üîÑ DEBUG: Re-applying data to chart with new theme colors")
src/gui/charts/base_chart.py-185-            # A chart tartalm√°t nem rajzoljuk √∫jra, csak a sz√≠neket friss√≠tj√ºk
--
src/gui/charts/base_chart.py-187-        
src/gui/charts/base_chart.py:188:        print(f"‚úÖ DEBUG: WeatherChart theme change complete: {theme_name}")
src/gui/charts/base_chart.py-189-    
--
src/gui/charts/base_chart.py-198-            
src/gui/charts/base_chart.py:199:            print(f"üé® DEBUG: Redrawing chart with new theme: {self.theme_manager.get_current_theme()}")
src/gui/charts/base_chart.py-200-            
--
src/gui/charts/base_chart.py-245-            
src/gui/charts/base_chart.py:246:            print(f"‚úÖ DEBUG: Chart successfully redrawn with theme: {self.theme_manager.get_current_theme()}")
src/gui/charts/base_chart.py-247-            
src/gui/charts/base_chart.py-248-        except Exception as e:
src/gui/charts/base_chart.py:249:            print(f"‚ùå DEBUG: Theme redraw error: {e}")
src/gui/charts/base_chart.py-250-    
--
src/gui/charts/base_chart.py-259-        """
src/gui/charts/base_chart.py:260:        print(f"üßπ DEBUG: {self.__class__.__name__}.clear_chart() - T√âMA SZINKRONIZ√ÅCI√ì")
src/gui/charts/base_chart.py-261-        try:
--
src/gui/charts/base_chart.py-281-            
src/gui/charts/base_chart.py:282:            print(f"‚úÖ DEBUG: {self.__class__.__name__} chart t√∂r√∂lve t√©ma sz√≠nekkel: {self.theme_manager.get_current_theme()}")
src/gui/charts/base_chart.py-283-            
src/gui/charts/base_chart.py-284-        except Exception as e:
src/gui/charts/base_chart.py:285:            print(f"‚ùå DEBUG: Chart t√∂rl√©si hiba: {e}")
src/gui/charts/base_chart.py-286-            self._is_updating = False
--
src/gui/charts/base_chart.py-295-        
src/gui/charts/base_chart.py:296:        print(f"üé® DEBUG: Applying theme colors to chart: {current_colors}")
src/gui/charts/base_chart.py-297-        
--
src/gui/charts/base_chart.py-344-        
src/gui/charts/base_chart.py:345:        print(f"‚úÖ DEBUG: Chart theme colors applied successfully")
src/gui/charts/base_chart.py-346-    
--
src/gui/charts/base_chart.py-372-        """
src/gui/charts/base_chart.py:373:        print("‚ö†Ô∏è DEBUG: update_style() DEPRECATED - use SimplifiedThemeManager.set_theme() instead")
src/gui/charts/base_chart.py-374-        
--
src/gui/charts/wind_rose_chart.py-44-        """
src/gui/charts/wind_rose_chart.py:45:        print("üåπ DEBUG: WindRoseChart.update_data() - DUPLIK√ÅCI√ì BUGFIX + SIMPLIFIED THEMEMANAGER VERZI√ì")
src/gui/charts/wind_rose_chart.py-46-        
--
src/gui/charts/wind_rose_chart.py-54-            if df.empty:
src/gui/charts/wind_rose_chart.py:55:                print("‚ö†Ô∏è DEBUG: √úres DataFrame, wind rose t√∂rl√©se")
src/gui/charts/wind_rose_chart.py-56-                self.clear_chart()
--
src/gui/charts/wind_rose_chart.py-61-            # === KRITIKUS: TELJES FIGURE T√ñRL√âSE ===
src/gui/charts/wind_rose_chart.py:62:            print("üßπ DEBUG: WindRose Figure.clear() - DUPLIK√ÅCI√ì ELLEN")
src/gui/charts/wind_rose_chart.py-63-            self.figure.clear()
--
src/gui/charts/wind_rose_chart.py-74-            
src/gui/charts/wind_rose_chart.py:75:            print("‚úÖ DEBUG: WindRoseChart friss√≠t√©s k√©sz - DUPLIK√ÅCI√ì MENTES + THEMED")
src/gui/charts/wind_rose_chart.py-76-            
src/gui/charts/wind_rose_chart.py-77-        except Exception as e:
src/gui/charts/wind_rose_chart.py:78:            print(f"‚ùå DEBUG: Wind rose chart hiba: {e}")
src/gui/charts/wind_rose_chart.py-79-            self._is_updating = False
--
src/gui/charts/wind_rose_chart.py-99-        
src/gui/charts/wind_rose_chart.py:100:        print(f"üå™Ô∏è DEBUG: WindRose data sources - wind_gusts_max: {len(wind_gusts_max) if wind_gusts_max else 0}, windspeed_10m_max: {len(windspeed_10m_max) if windspeed_10m_max else 0}, winddirection: {len(winddirection) if winddirection else 0}")
src/gui/charts/wind_rose_chart.py-101-        
--
src/gui/charts/wind_rose_chart.py-103-        if not dates or not winddirection:
src/gui/charts/wind_rose_chart.py:104:            print("‚ö†Ô∏è DEBUG: Hi√°nyz√≥ alapadatok (d√°tum/ir√°ny) - WindRose chart nem jelen√≠thet≈ë meg")
src/gui/charts/wind_rose_chart.py-105-            return pd.DataFrame()
--
src/gui/charts/wind_rose_chart.py-115-            self.chart_title = "üåπ Sz√©ll√∂k√©s R√≥zsadiagram"  # Dinamikus c√≠m
src/gui/charts/wind_rose_chart.py:116:            print(f"‚úÖ DEBUG: WindRose using PRIMARY source: {data_source}")
src/gui/charts/wind_rose_chart.py-117-        elif windspeed_10m_max and len(windspeed_10m_max) == len(dates) and len(winddirection) == len(dates):
--
src/gui/charts/wind_rose_chart.py-121-            self.chart_title = "üåπ Sz√©l R√≥zsadiagram (Fallback)"  # Jelz√©s a fallback-r≈ël
src/gui/charts/wind_rose_chart.py:122:            print(f"‚ö†Ô∏è DEBUG: WindRose using FALLBACK source: {data_source}")
src/gui/charts/wind_rose_chart.py-123-        else:
src/gui/charts/wind_rose_chart.py:124:            print(f"‚ùå DEBUG: Nincs haszn√°lhat√≥ sz√©l+ir√°ny adat - WindRose chart nem jelen√≠thet≈ë meg")
src/gui/charts/wind_rose_chart.py-125-            print(f"   - wind_gusts_max: {len(wind_gusts_max) if wind_gusts_max else 0} elem")
--
src/gui/charts/wind_rose_chart.py-146-        if df.empty:
src/gui/charts/wind_rose_chart.py:147:            print(f"‚ùå DEBUG: √úres DataFrame {data_source} adatok ut√°n - WindRose chart nem jelen√≠thet≈ë meg")
src/gui/charts/wind_rose_chart.py-148-        else:
--
src/gui/charts/wind_rose_chart.py-150-            avg_wind = df['windspeed'].mean()
src/gui/charts/wind_rose_chart.py:151:            print(f"‚úÖ DEBUG: WindRose DataFrame k√©sz - {data_source}, max: {max_wind:.1f} km/h, avg: {avg_wind:.1f} km/h, {len(df)} rekord")
src/gui/charts/wind_rose_chart.py-152-        
--
src/gui/charts/wind_rose_chart.py-159-        """
src/gui/charts/wind_rose_chart.py:160:        print("üé® DEBUG: _plot_wind_rose() - DUPLIK√ÅCI√ì MENTES + SIMPLIFIED THEMEMANAGER")
src/gui/charts/wind_rose_chart.py-161-        
--
src/gui/charts/wind_rose_chart.py-185-        
src/gui/charts/wind_rose_chart.py:186:        print(f"üé® DEBUG: Using SimplifiedThemeManager wind colors: {wind_colors}")
src/gui/charts/wind_rose_chart.py-187-        
--
src/gui/charts/__init__.py-167-
src/gui/charts/__init__.py:168:print(f"‚úÖ DEBUG: Charts package loaded - {len(__all__)} chart types available")
src/gui/charts/__init__.py:169:print(f"üé® DEBUG: All charts support ColorPalette API + Piros (#C43939) t√©ma")
src/gui/charts/__init__.py:170:print(f"üîß DEBUG: Duplik√°ci√≥ bugfix applied to all charts")
src/gui/charts/__init__.py:171:print(f"üå™Ô∏è DEBUG: Wind gusts support: WindChart + WindRoseChart")
src/gui/charts/__init__.py:172:print(f"üìà DEBUG: Available chart types: {', '.join(get_available_chart_types())}")
--
src/gui/map_visualizer (1).py-1344-
src/gui/map_visualizer (1).py:1345:        print(f"üîß DEBUG: Valid HTML generated - Size: {file_size} bytes, Timestamp: {self.last_generated_timestamp}")
src/gui/map_visualizer (1).py-1346-
--
src/gui/map_visualizer (1).py-1363-        try:
src/gui/map_visualizer (1).py:1364:            print("üîß DEBUG: Starting SAFE WebEngine reset...")
src/gui/map_visualizer (1).py-1365-
--
src/gui/map_visualizer (1).py-1399-        try:
src/gui/map_visualizer (1).py:1400:            print(f"üîß DEBUG: Loading HTML with cache fix: {html_path}")
src/gui/map_visualizer (1).py-1401-
--
src/gui/map_visualizer (1).py-1523-            print("‚ùå WebEngine load failed - diagnosing with cache fix...")
src/gui/map_visualizer (1).py:1524:            print(f"üîß DEBUG: Page URL: {page.url().toString()}")
src/gui/map_visualizer (1).py:1525:            print(f"üîß DEBUG: Page title: {page.title()}")
src/gui/map_visualizer (1).py:1526:            print(f"üîß DEBUG: Current HTML path: {self.current_html_path}")
src/gui/map_visualizer (1).py:1527:            print(f"üîß DEBUG: Retry count: {self.loading_retry_count}/{self.max_retry_attempts}")
src/gui/map_visualizer (1).py-1528-
--
src/gui/map_visualizer (1).py-1721-        """
src/gui/map_visualizer (1).py:1722:        print(f"üé® DEBUG: Setting active overlay parameter: {parameter}")
src/gui/map_visualizer (1).py-1723-
--
src/gui/map_visualizer (1).py-1738-
src/gui/map_visualizer (1).py:1739:        print(f"‚úÖ DEBUG: Active overlay parameter set: {parameter} ‚Üí {display_name}")
src/gui/map_visualizer (1).py-1740-
--
src/gui/map_visualizer (1).py-1744-        """
src/gui/map_visualizer (1).py:1745:        print("üßπ DEBUG: Clearing active overlay parameter")
src/gui/map_visualizer (1).py-1746-
--
src/gui/main_window.py-75-    HUNGARIAN_COUNTIES_AVAILABLE = True
src/gui/main_window.py:76:    print("üó∫Ô∏è DEBUG: Hungarian Counties Integration modul sikeresen import√°lva!")
src/gui/main_window.py-77-except ImportError as e:
src/gui/main_window.py:78:    print(f"‚ö†Ô∏è DEBUG: Hungarian Counties Integration modul nem el√©rhet≈ë: {e}")
src/gui/main_window.py-79-    HUNGARIAN_COUNTIES_AVAILABLE = False
--
src/gui/main_window.py-122-        
src/gui/main_window.py:123:        print("üö® DEBUG: ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çTVA + MAGYAR MEGY√âK INTEGR√ÅCI√ì + V√ÅROS ELEMZ√âS SIGNAL FIX MainWindow __init__ started")
src/gui/main_window.py-124-        
--
src/gui/main_window.py-143-        
src/gui/main_window.py:144:        print("üéØ DEBUG: Creating CLEAN AppController...")
src/gui/main_window.py-145-        # Controller (Model + business logic)
src/gui/main_window.py-146-        self.controller = AppController()
src/gui/main_window.py:147:        print("‚úÖ DEBUG: CLEAN AppController created")
src/gui/main_window.py-148-        
--
src/gui/main_window.py-187-        
src/gui/main_window.py:188:        print("üñºÔ∏è DEBUG: Setting up UI...")
src/gui/main_window.py-189-        self._setup_window()
--
src/gui/main_window.py-193-        self._init_status_bar_with_provider_display()
src/gui/main_window.py:194:        print("‚úÖ DEBUG: UI setup complete")
src/gui/main_window.py-195-        
--
src/gui/main_window.py-197-        
src/gui/main_window.py:198:        print("üîó DEBUG: Connecting CLEAN signals + ANALYTICS SIGNAL HANDLING + V√ÅROS ELEMZ√âS FIX...")
src/gui/main_window.py-199-        self._connect_mvc_signals_clean_with_city_analysis_fix()
src/gui/main_window.py:200:        print("‚úÖ DEBUG: CLEAN SIGNAL CHAIN + ANALYTICS SIGNAL HANDLING + V√ÅROS ELEMZ√âS SIGNAL FIX CONNECTED!")
src/gui/main_window.py-201-        
--
src/gui/main_window.py-203-        
src/gui/main_window.py:204:        print("üé® DEBUG: Setting up ThemeManager integration...")
src/gui/main_window.py-205-        self._setup_theme_integration()
src/gui/main_window.py:206:        print("‚úÖ DEBUG: ThemeManager integration complete")
src/gui/main_window.py-207-        
--
src/gui/main_window.py-209-        
src/gui/main_window.py:210:        print("üó∫Ô∏è DEBUG: Loading Hungarian counties automatically...")
src/gui/main_window.py-211-        self._load_hungarian_counties()
src/gui/main_window.py:212:        print("‚úÖ DEBUG: Hungarian counties loading completed")
src/gui/main_window.py-213-        
--
src/gui/main_window.py-217-        
src/gui/main_window.py:218:        print("‚úÖ DEBUG: ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çTVA + MAGYAR MEGY√âK INTEGR√ÅCI√ì + V√ÅROS ELEMZ√âS SIGNAL FIX MainWindow initialized!")
src/gui/main_window.py-219-    
--
src/gui/main_window.py-230-        try:
src/gui/main_window.py:231:            print("üó∫Ô∏è DEBUG: _load_hungarian_counties started...")
src/gui/main_window.py-232-            
--
src/gui/main_window.py-234-            if not HUNGARIAN_COUNTIES_AVAILABLE:
src/gui/main_window.py:235:                print("‚ö†Ô∏è DEBUG: Hungarian Counties Integration nem el√©rhet≈ë - counties loading skip")
src/gui/main_window.py-236-                self.hungarian_counties_loaded = False
--
src/gui/main_window.py-239-            # 2. HUNGARIAN COUNTIES LOADER L√âTREHOZ√ÅSA
src/gui/main_window.py:240:            print("üó∫Ô∏è DEBUG: Creating HungarianCountiesLoader...")
src/gui/main_window.py-241-            counties_loader = HungarianCountiesLoader()
--
src/gui/main_window.py-243-            # 3. MEGY√âK BET√ñLT√âSE (KSH ADATB√ÅZIS VAGY DEMO)
src/gui/main_window.py:244:            print("üó∫Ô∏è DEBUG: Loading counties geodataframe...")
src/gui/main_window.py-245-            self.counties_geodataframe = counties_loader.load_counties_geodataframe()
--
src/gui/main_window.py-247-            if self.counties_geodataframe is None:
src/gui/main_window.py:248:                print("‚ö†Ô∏è DEBUG: Nem siker√ºlt bet√∂lteni a megy√©ket - counties loading failed")
src/gui/main_window.py-249-                self.hungarian_counties_loaded = False
--
src/gui/main_window.py-251-            
src/gui/main_window.py:252:            print(f"‚úÖ DEBUG: Megy√©k sikeresen bet√∂ltve - {len(self.counties_geodataframe)} megye")
src/gui/main_window.py:253:            print(f"üó∫Ô∏è DEBUG: Megy√©k oszlopok: {list(self.counties_geodataframe.columns)}")
src/gui/main_window.py-254-            
--
src/gui/main_window.py-259-            self.hungarian_counties_loaded = True
src/gui/main_window.py:260:            print("üéâ DEBUG: Magyar megy√©k automatikus integr√°ci√≥ BEFEJEZVE!")
src/gui/main_window.py-261-            
src/gui/main_window.py-262-        except Exception as e:
src/gui/main_window.py:263:            print(f"‚ö†Ô∏è DEBUG: Magyar megy√©k bet√∂lt√©si hiba: {e}")
src/gui/main_window.py-264-            import traceback
--
src/gui/main_window.py-277-        try:
src/gui/main_window.py:278:            print("üó∫Ô∏è DEBUG: _configure_hungarian_map_with_counties started...")
src/gui/main_window.py-279-            
--
src/gui/main_window.py-281-            if self.hungarian_map_tab is None:
src/gui/main_window.py:282:                print("‚ö†Ô∏è DEBUG: HungarianMapTab m√©g nem l√©tezik - konfigur√°l√°s postpone")
src/gui/main_window.py-283-                # A HungarianMapTab k√©s≈ëbb j√∂n l√©tre a _create_hungarian_map_view()-ban
--
src/gui/main_window.py-287-            # MAP VISUALIZER KOMPONENS KERES√âSE A HUNGARIAN MAP TAB-BEN
src/gui/main_window.py:288:            print("üó∫Ô∏è DEBUG: Keresem a map_visualizer komponenst...")
src/gui/main_window.py-289-            
--
src/gui/main_window.py-292-                map_visualizer = self.hungarian_map_tab.map_visualizer
src/gui/main_window.py:293:                print("‚úÖ DEBUG: map_visualizer megtal√°lva a HungarianMapTab-ben")
src/gui/main_window.py-294-            else:
src/gui/main_window.py:295:                print("‚ö†Ô∏è DEBUG: map_visualizer nem tal√°lhat√≥ a HungarianMapTab-ben")
src/gui/main_window.py-296-                return
--
src/gui/main_window.py-299-            if hasattr(map_visualizer, 'set_counties_geodataframe'):
src/gui/main_window.py:300:                print("üó∫Ô∏è DEBUG: Megy√©k be√°ll√≠t√°sa a map_visualizer-en...")
src/gui/main_window.py-301-                map_visualizer.set_counties_geodataframe(self.counties_geodataframe)
src/gui/main_window.py:302:                print("‚úÖ DEBUG: Megy√©k sikeresen be√°ll√≠tva a map_visualizer-en!")
src/gui/main_window.py-303-                
--
src/gui/main_window.py-306-                    map_visualizer.show_county_borders = True
src/gui/main_window.py:307:                    print("‚úÖ DEBUG: Megyehat√°rok automatikusan bekapcsolva")
src/gui/main_window.py-308-            else:
src/gui/main_window.py:309:                print("‚ö†Ô∏è DEBUG: map_visualizer.set_counties_geodataframe met√≥dus nem tal√°lhat√≥")
src/gui/main_window.py-310-            
src/gui/main_window.py-311-        except Exception as e:
src/gui/main_window.py:312:            print(f"‚ö†Ô∏è DEBUG: HungarianMapTab konfigur√°l√°si hiba: {e}")
src/gui/main_window.py-313-            import traceback
--
src/gui/main_window.py-337-        
src/gui/main_window.py:338:        print("üîß DEBUG: Window setup complete")
src/gui/main_window.py-339-    
--
src/gui/main_window.py-343-        """
src/gui/main_window.py:344:        print("üé® DEBUG: Setting up ThemeManager integration...")
src/gui/main_window.py-345-        
--
src/gui/main_window.py-351-        
src/gui/main_window.py:352:        print("‚úÖ DEBUG: ThemeManager integration setup complete")
src/gui/main_window.py-353-    
--
src/gui/main_window.py-360-        """
src/gui/main_window.py:361:        print(f"üé® DEBUG: MainWindow received ThemeManager theme change: {theme_name}")
src/gui/main_window.py-362-        
--
src/gui/main_window.py-374-        
src/gui/main_window.py:375:        print(f"‚úÖ DEBUG: MainWindow theme change handled: {theme_name}")
src/gui/main_window.py-376-    
--
src/gui/main_window.py-380-        """
src/gui/main_window.py:381:        print("üß≠ DEBUG: Creating navigation toolbar...")
src/gui/main_window.py-382-        
--
src/gui/main_window.py-443-        
src/gui/main_window.py:444:        print("‚úÖ DEBUG: Navigation toolbar created")
src/gui/main_window.py-445-    
--
src/gui/main_window.py-449-        """
src/gui/main_window.py:450:        print("üìö DEBUG: Creating stacked views...")
src/gui/main_window.py-451-        
--
src/gui/main_window.py-494-        
src/gui/main_window.py:495:        print("‚úÖ DEBUG: Stacked views created")
src/gui/main_window.py-496-    
--
src/gui/main_window.py-500-        """
src/gui/main_window.py:501:        print("üîß DEBUG: Creating SPLITTER CONSTRAINTS OPTIMALIZ√ÅLT Single City View...")
src/gui/main_window.py-502-        
--
src/gui/main_window.py-513-        
src/gui/main_window.py:514:        print("üîß DEBUG: Configuring OPTIMALIZ√ÅLT splitter...")
src/gui/main_window.py-515-        
--
src/gui/main_window.py-525-        
src/gui/main_window.py:526:        print("üéõÔ∏è DEBUG: Creating ControlPanel with FINAL OPTIMALIZ√ÅLT size constraints...")
src/gui/main_window.py-527-        self.control_panel = ControlPanel(self.worker_manager)
--
src/gui/main_window.py-539-        main_splitter.addWidget(self.control_panel)
src/gui/main_window.py:540:        print(f"‚úÖ DEBUG: ControlPanel added with FINAL OPTIMALIZ√ÅLT constraints: {320}-{520}px")
src/gui/main_window.py-541-        
--
src/gui/main_window.py-543-        
src/gui/main_window.py:544:        print("üìä DEBUG: Creating ResultsPanel with OPTIMALIZ√ÅLT expand capability...")
src/gui/main_window.py-545-        self.results_panel = ResultsPanel()
--
src/gui/main_window.py-557-        main_splitter.addWidget(self.results_panel)
src/gui/main_window.py:558:        print("‚úÖ DEBUG: ResultsPanel added with OPTIMALIZ√ÅLT expand capability")
src/gui/main_window.py-559-        
--
src/gui/main_window.py-561-        
src/gui/main_window.py:562:        print("üîß DEBUG: Setting OPTIMALIZ√ÅLT stretch factors...")
src/gui/main_window.py-563-        
--
src/gui/main_window.py-569-        
src/gui/main_window.py:570:        print("‚úÖ DEBUG: OPTIMALIZ√ÅLT stretch factors set")
src/gui/main_window.py-571-        
--
src/gui/main_window.py-580-        
src/gui/main_window.py:581:        print(f"‚úÖ DEBUG: OPTIMALIZ√ÅLT initial sizes set - Control: {control_width}px, Results: {results_width}px")
src/gui/main_window.py-582-        
--
src/gui/main_window.py-586-        
src/gui/main_window.py:587:        print("üîß DEBUG: SPLITTER CONSTRAINTS OPTIMALIZ√ÅLT Single City View created")
src/gui/main_window.py-588-        
--
src/gui/main_window.py-594-        """
src/gui/main_window.py:595:        print("üìä DEBUG: Creating REFAKTOR√ÅLT AnalyticsView with ThemeManager + Signal Integration...")
src/gui/main_window.py-596-        
--
src/gui/main_window.py-602-        
src/gui/main_window.py:603:        print("‚úÖ DEBUG: REFAKTOR√ÅLT AnalyticsView created with ThemeManager + Signal Integration")
src/gui/main_window.py-604-        return self.analytics_panel
--
src/gui/main_window.py-609-        """
src/gui/main_window.py:610:        print("üìà DEBUG: Creating real TrendAnalyticsTab component with ThemeManager...")
src/gui/main_window.py-611-        
--
src/gui/main_window.py-617-        
src/gui/main_window.py:618:        print("‚úÖ DEBUG: Real TrendAnalyticsTab component created with ThemeManager")
src/gui/main_window.py-619-        return self.trend_analytics_tab
--
src/gui/main_window.py-624-        """
src/gui/main_window.py:625:        print("üå§Ô∏è DEBUG: Creating real HungarianMapTab component with ThemeManager + Weather Integration + Magyar Megy√©k...")
src/gui/main_window.py-626-        
--
src/gui/main_window.py-634-        if self.counties_geodataframe is not None:
src/gui/main_window.py:635:            print("üó∫Ô∏è DEBUG: HungarianMapTab l√©tezik - megy√©k automatikus konfigur√°l√°sa...")
src/gui/main_window.py-636-            self._configure_hungarian_map_with_counties()
src/gui/main_window.py-637-        else:
src/gui/main_window.py:638:            print("‚ö†Ô∏è DEBUG: Counties m√©g nincsenek bet√∂ltve a HungarianMapTab l√©trehoz√°sakor")
src/gui/main_window.py-639-        
src/gui/main_window.py:640:        print("‚úÖ DEBUG: Real HungarianMapTab component created with ThemeManager + Weather Integration + Magyar Megy√©k")
src/gui/main_window.py-641-        return self.hungarian_map_tab
--
src/gui/main_window.py-706-        """
src/gui/main_window.py:707:        print(f"üîÑ DEBUG: Switching to view: {view_name}")
src/gui/main_window.py-708-        
--
src/gui/main_window.py-718-        if view_name not in view_indices:
src/gui/main_window.py:719:            print(f"‚ö†Ô∏è DEBUG: Unknown view name: {view_name}")
src/gui/main_window.py-720-            return
--
src/gui/main_window.py-742-        
src/gui/main_window.py:743:        print(f"‚úÖ DEBUG: View switched to: {view_name} (index: {view_index})")
src/gui/main_window.py-744-    
--
src/gui/main_window.py-810-        """
src/gui/main_window.py:811:        print("üåç DEBUG: Creating enhanced status bar with provider display...")
src/gui/main_window.py-812-        
--
src/gui/main_window.py-843-        
src/gui/main_window.py:844:        print("‚úÖ DEBUG: Enhanced status bar created with provider display")
src/gui/main_window.py-845-    
--
src/gui/main_window.py-850-        try:
src/gui/main_window.py:851:            print("üåç DEBUG: Initializing provider status...")
src/gui/main_window.py-852-            
--
src/gui/main_window.py-861-            
src/gui/main_window.py:862:            print("‚úÖ DEBUG: Provider status initialized")
src/gui/main_window.py-863-            
src/gui/main_window.py-864-        except Exception as e:
src/gui/main_window.py:865:            print(f"‚ö†Ô∏è DEBUG: Provider status initialization error: {e}")
src/gui/main_window.py-866-            # Fallback to default values
--
src/gui/main_window.py-909-            
src/gui/main_window.py:910:            print(f"‚úÖ DEBUG: Provider status display updated: {self.current_provider}")
src/gui/main_window.py-911-            
src/gui/main_window.py-912-        except Exception as e:
src/gui/main_window.py:913:            print(f"‚ö†Ô∏è DEBUG: Provider status display update error: {e}")
src/gui/main_window.py-914-    
--
src/gui/main_window.py-955-        
src/gui/main_window.py:956:        print("üîó DEBUG: Starting CLEAN signals + ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çTVA + V√ÅROS ELEMZ√âS FIX...")
src/gui/main_window.py-957-        
--
src/gui/main_window.py-959-        
src/gui/main_window.py:960:        print("üéØ DEBUG: Setting up CENTRAL connection: ControlPanel ‚Üí AppController...")
src/gui/main_window.py-961-        
--
src/gui/main_window.py-969-            else:
src/gui/main_window.py:970:                print("‚ö†Ô∏è DEBUG: ControlPanel.analysis_requested signal NOT FOUND!")
src/gui/main_window.py-971-            
--
src/gui/main_window.py-978-            else:
src/gui/main_window.py:979:                print("‚ö†Ô∏è DEBUG: ControlPanel.cancel_requested signal NOT FOUND!")
src/gui/main_window.py-980-        else:
src/gui/main_window.py:981:            print("‚ö†Ô∏è DEBUG: ControlPanel is None!")
src/gui/main_window.py-982-        
--
src/gui/main_window.py-984-        
src/gui/main_window.py:985:        print("üì° DEBUG: Connecting AppController lifecycle signals + V√ÅROS ELEMZ√âS ADATFOLYAM FIX...")
src/gui/main_window.py-986-        
--
src/gui/main_window.py-1014-        if self.analytics_panel:
src/gui/main_window.py:1015:            print("üö® DEBUG: ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çT√ÅSA...")
src/gui/main_window.py-1016-            
--
src/gui/main_window.py-1019-                def debug_analytics_multi_city_query_requested(query_type: str, region_name: str):
src/gui/main_window.py:1020:                    print(f"üö® DEBUG [ANALYTICS‚ÜíMAIN_WINDOW]: multi_city_query_requested: {query_type}, {region_name}")
src/gui/main_window.py-1021-                
--
src/gui/main_window.py-1027-            else:
src/gui/main_window.py:1028:                print("‚ùå DEBUG: AnalyticsView.multi_city_query_requested signal NOT FOUND!")
src/gui/main_window.py-1029-            
--
src/gui/main_window.py-1034-                )
src/gui/main_window.py:1035:                print("‚úÖ DEBUG: AnalyticsView.analysis_started signal connected")
src/gui/main_window.py-1036-            
--
src/gui/main_window.py-1040-                )
src/gui/main_window.py:1041:                print("‚úÖ DEBUG: AnalyticsView.error_occurred signal connected")
src/gui/main_window.py-1042-        else:
src/gui/main_window.py:1043:            print("‚ùå DEBUG: Analytics panel is None - signalok nem kapcsol√≥dnak!")
src/gui/main_window.py-1044-        
--
src/gui/main_window.py-1046-        
src/gui/main_window.py:1047:        print("üåç DEBUG: Connecting Provider Status signals...")
src/gui/main_window.py-1048-        
--
src/gui/main_window.py-1050-        self.controller.provider_selected.connect(self._on_provider_selected)
src/gui/main_window.py:1051:        print("‚úÖ DEBUG: Controller.provider_selected ‚Üí MainWindow._on_provider_selected CONNECTED")
src/gui/main_window.py-1052-        
--
src/gui/main_window.py-1054-        self.controller.provider_usage_updated.connect(self._on_provider_usage_updated)
src/gui/main_window.py:1055:        print("‚úÖ DEBUG: Controller.provider_usage_updated ‚Üí MainWindow._on_provider_usage_updated CONNECTED")
src/gui/main_window.py-1056-        
--
src/gui/main_window.py-1058-        self.controller.provider_warning.connect(self._on_provider_warning)
src/gui/main_window.py:1059:        print("‚úÖ DEBUG: Controller.provider_warning ‚Üí MainWindow._on_provider_warning CONNECTED")
src/gui/main_window.py-1060-        
--
src/gui/main_window.py-1062-        self.controller.provider_fallback.connect(self._on_provider_fallback)
src/gui/main_window.py:1063:        print("‚úÖ DEBUG: Controller.provider_fallback ‚Üí MainWindow._on_provider_fallback CONNECTED")
src/gui/main_window.py-1064-        
--
src/gui/main_window.py-1069-            self.results_panel.export_requested.connect(self._handle_export_request)
src/gui/main_window.py:1070:            print("‚úÖ DEBUG: ResultsPanel.export_requested ‚Üí MainWindow._handle_export_request CONNECTED")
src/gui/main_window.py-1071-            
--
src/gui/main_window.py-1073-            self.results_panel.extreme_weather_requested.connect(self._show_extreme_weather)
src/gui/main_window.py:1074:            print("‚úÖ DEBUG: ResultsPanel.extreme_weather_requested ‚Üí MainWindow._show_extreme_weather CONNECTED")
src/gui/main_window.py-1075-        
--
src/gui/main_window.py-1078-        self.theme_changed.connect(self._propagate_theme_change)
src/gui/main_window.py:1079:        print("‚úÖ DEBUG: MainWindow.theme_changed ‚Üí MainWindow._propagate_theme_change CONNECTED")
src/gui/main_window.py-1080-        
src/gui/main_window.py:1081:        print("üö® ‚úÖ DEBUG: ALL CLEAN signals connected successfully + ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çTVA + V√ÅROS ELEMZ√âS ADATFOLYAM FIX!")
src/gui/main_window.py-1082-    
--
src/gui/main_window.py-1092-        """
src/gui/main_window.py:1093:        print(f"üö® DEBUG: _handle_analytics_view_query called (VISSZA√ÅLL√çTVA): {query_type}, {region_name}")
src/gui/main_window.py-1094-        
--
src/gui/main_window.py-1132-        """
src/gui/main_window.py:1133:        print(f"üéâ DEBUG: _handle_multi_city_weather_request called - COMPLETING MULTI-CITY INTEGRATION + WINDSPEED FIX!")
src/gui/main_window.py:1134:        print(f"üéâ DEBUG: Analysis type: {analysis_type}, Region: '{region_id}', Date range: {start_date} ‚Üí {end_date}")
src/gui/main_window.py:1135:        print(f"üéâ DEBUG: Params: {params}")
src/gui/main_window.py-1136-        
--
src/gui/main_window.py-1144-            
src/gui/main_window.py:1145:            print(f"üîß DEBUG: Query type: {query_type}, Limit: {limit}")
src/gui/main_window.py-1146-            
--
src/gui/main_window.py-1149-                display_parameter = self._map_query_type_to_parameter(query_type)
src/gui/main_window.py:1150:                print(f"üîß DEBUG: 1. L√âP√âS - Setting analytics parameter on map: {display_parameter}")
src/gui/main_window.py-1151-                
--
src/gui/main_window.py-1153-                    self.hungarian_map_tab.set_analytics_parameter(display_parameter)
src/gui/main_window.py:1154:                    print(f"‚úÖ DEBUG: Analytics parameter set successfully: {display_parameter}")
src/gui/main_window.py-1155-                else:
src/gui/main_window.py:1156:                    print("‚ö†Ô∏è DEBUG: HungarianMapTab.set_analytics_parameter method not found!")
src/gui/main_window.py-1157-            
src/gui/main_window.py-1158-            # 1. Multi-City Engine p√©ld√°nyos√≠t√°s/haszn√°lat
src/gui/main_window.py:1159:            print("üéâ DEBUG: Importing Multi-City Engine...")
src/gui/main_window.py-1160-            from src.analytics.multi_city_engine import MultiCityEngine
--
src/gui/main_window.py-1162-            engine = MultiCityEngine()
src/gui/main_window.py:1163:            print("‚úÖ DEBUG: Multi-City Engine instance created")
src/gui/main_window.py-1164-            
src/gui/main_window.py:1165:            print(f"üéâ DEBUG: Running multi-city analysis - Query: {query_type}, Limit: {limit}")
src/gui/main_window.py-1166-            
--
src/gui/main_window.py-1176-            if not hasattr(result, 'city_results'):
src/gui/main_window.py:1177:                print(f"‚ùå DEBUG: Multi-city engine returned invalid result type: {type(result)}")
src/gui/main_window.py-1178-                error_msg = f"Multi-city engine hib√°s eredm√©ny t√≠pus: {type(result)}"
--
src/gui/main_window.py-1182-            
src/gui/main_window.py:1183:            print(f"‚úÖ DEBUG: Multi-city analysis completed - {len(result.city_results)} results")
src/gui/main_window.py:1184:            print(f"üîß DEBUG: Result type: {type(result)}, has city_results: {hasattr(result, 'city_results')}")
src/gui/main_window.py-1185-            
src/gui/main_window.py-1186-            # 3. OPCION√ÅLIS: city_results logging c√©lokra (de NEM konverzi√≥!)
src/gui/main_window.py:1187:            print("üéâ DEBUG: Multi-city results summary:")
src/gui/main_window.py-1188-            for i, city_result in enumerate(result.city_results[:5]):  # Els≈ë 5 a loghoz
--
src/gui/main_window.py-1192-            if self.hungarian_map_tab and hasattr(self.hungarian_map_tab, 'set_analytics_result'):
src/gui/main_window.py:1193:                print(f"üîß DEBUG: 2. L√âP√âS - Setting analytics result on map...")
src/gui/main_window.py-1194-                self.hungarian_map_tab.set_analytics_result(result)
src/gui/main_window.py:1195:                print("‚úÖ DEBUG: Analytics result set successfully on HungarianMapTab")
src/gui/main_window.py-1196-            else:
src/gui/main_window.py:1197:                print("‚ö†Ô∏è DEBUG: HungarianMapTab.set_analytics_result method not found!")
src/gui/main_window.py-1198-            
src/gui/main_window.py-1199-            # 4. üî• KRITIKUS JAV√çT√ÅS: EREDM√âNY SZ√âTOSZT√ÅSA MINDEN RELEV√ÅNS N√âZETRE + QUERY TYPE INFORM√ÅCI√ì
src/gui/main_window.py:1200:            print("üî• DEBUG: Distributing AnalyticsResult to all relevant views...")
src/gui/main_window.py-1201-            self._on_multi_city_result_ready_for_views(result, query_type)
--
src/gui/main_window.py-1211-            if params.get("auto_switch_to_map", True):
src/gui/main_window.py:1212:                print("üéâ DEBUG: Auto-switching to map view...")
src/gui/main_window.py-1213-                self._switch_view("map_view")
src/gui/main_window.py-1214-            
src/gui/main_window.py:1215:            print(f"üîß ‚úÖ DEBUG: WINDSPEED METRIC JAV√çT√ÅS BEFEJEZVE - {query_type} ‚Üí {self._map_query_type_to_parameter(query_type)}")
src/gui/main_window.py-1216-            
src/gui/main_window.py-1217-        except ImportError as e:
src/gui/main_window.py:1218:            print(f"‚ùå DEBUG: Multi-City Engine import error: {e}")
src/gui/main_window.py-1219-            error_msg = f"Multi-City Engine nem el√©rhet≈ë: {e}"
--
src/gui/main_window.py-1223-        except Exception as e:
src/gui/main_window.py:1224:            print(f"‚ùå DEBUG: Multi-city request error: {e}")
src/gui/main_window.py-1225-            import traceback
--
src/gui/main_window.py-1231-        
src/gui/main_window.py:1232:        print("üéâ DEBUG: _handle_multi_city_weather_request completed - MULTI-CITY INTEGRATION + WINDSPEED FIX FINISHED!")
src/gui/main_window.py-1233-
--
src/gui/main_window.py-1242-        """
src/gui/main_window.py:1243:        print(f"üî• DEBUG: _on_multi_city_result_ready_for_views called - sz√©toszt√°s a n√©zeteknek (query_type: {query_type})...")
src/gui/main_window.py-1244-        
--
src/gui/main_window.py-1249-                analytics_parameter = self._map_query_type_to_parameter(query_type)
src/gui/main_window.py:1250:                print(f"üîß DEBUG: Mapped query_type '{query_type}' to parameter '{analytics_parameter}'")
src/gui/main_window.py-1251-                
--
src/gui/main_window.py-1254-                    self.hungarian_map_tab.set_analytics_parameter(analytics_parameter)
src/gui/main_window.py:1255:                    print(f"‚úÖ DEBUG: Analytics parameter set on HungarianMapTab: {analytics_parameter}")
src/gui/main_window.py-1256-                
--
src/gui/main_window.py-1265-                
src/gui/main_window.py:1266:            print("‚úÖ DEBUG: Multi-city result distribution completed (with query type)")
src/gui/main_window.py-1267-            
src/gui/main_window.py-1268-        except Exception as e:
src/gui/main_window.py:1269:            print(f"‚ùå DEBUG: Multi-city result distribution error: {e}")
src/gui/main_window.py-1270-            self._show_error(f"Multi-city eredm√©ny sz√©toszt√°si hiba: {e}")
--
src/gui/main_window.py-1282-        mapped_param = self.QUERY_TYPE_TO_PARAMETER.get(query_type, "H≈ëm√©rs√©klet")
src/gui/main_window.py:1283:        print(f"üîß DEBUG: Query type mapping: {query_type} ‚Üí {mapped_param}")
src/gui/main_window.py-1284-        return mapped_param
--
src/gui/main_window.py-1294-        """
src/gui/main_window.py:1295:        print(f"üöÄ DEBUG: _on_analysis_started called: {analysis_type}")
src/gui/main_window.py-1296-        
--
src/gui/main_window.py-1312-        
src/gui/main_window.py:1313:        print(f"‚úÖ DEBUG: Analysis start handled: {analysis_type}")
src/gui/main_window.py-1314-    
--
src/gui/main_window.py-1323-        """
src/gui/main_window.py:1324:        print(f"üéØ KRITIKUS DEBUG: _on_analysis_completed_with_city_fix called - V√ÅROS ELEMZ√âS ADATFOLYAM FIX!")
src/gui/main_window.py:1325:        print(f"üéØ DEBUG: Result keys: {list(result_data.keys()) if result_data else 'NO RESULT'}")
src/gui/main_window.py-1326-        
--
src/gui/main_window.py-1329-            analysis_type = result_data.get('analysis_type', 'unknown')
src/gui/main_window.py:1330:            print(f"üéØ DEBUG: Analysis type detected: {analysis_type}")
src/gui/main_window.py-1331-            
--
src/gui/main_window.py-1350-                
src/gui/main_window.py:1351:                print(f"üéØ DEBUG: City: {city_name}")
src/gui/main_window.py:1352:                print(f"üéØ DEBUG: Weather data keys: {list(weather_data.keys()) if weather_data else 'NO WEATHER DATA'}")
src/gui/main_window.py:1353:                print(f"üéØ DEBUG: Location data: {location_data}")
src/gui/main_window.py-1354-                
--
src/gui/main_window.py-1391-                    if self.hungarian_map_tab:
src/gui/main_window.py:1392:                        print("üó∫Ô∏è DEBUG: Updating HungarianMapTab with multi-city result...")
src/gui/main_window.py-1393-                        # Query type alap√∫ param√©ter be√°ll√≠t√°sa
--
src/gui/main_window.py-1403-                    if self.analytics_panel:
src/gui/main_window.py:1404:                        print("üìä DEBUG: Updating AnalyticsView with multi-city result...")
src/gui/main_window.py-1405-                        if hasattr(self.analytics_panel, 'update_with_multi_city_result'):
--
src/gui/main_window.py-1410-                if self.trend_analytics_tab:
src/gui/main_window.py:1411:                    print("üìà DEBUG: Trend analysis result available for TrendAnalyticsTab...")
src/gui/main_window.py-1412-                    # A TrendAnalyticsTab saj√°t maga kezeli az eredm√©nyeket
src/gui/main_window.py-1413-            
src/gui/main_window.py:1414:            print(f"‚úÖ DEBUG: Analysis completion handled: {analysis_type}")
src/gui/main_window.py-1415-            
src/gui/main_window.py-1416-        except Exception as e:
src/gui/main_window.py:1417:            print(f"‚ö†Ô∏è DEBUG: Analysis completion handling error: {e}")
src/gui/main_window.py-1418-            import traceback
--
src/gui/main_window.py-1428-        """
src/gui/main_window.py:1429:        print(f"‚ùå DEBUG: _on_analysis_failed called: {error_message}")
src/gui/main_window.py-1430-        
--
src/gui/main_window.py-1440-        
src/gui/main_window.py:1441:        print(f"‚úÖ DEBUG: Analysis failure handled: {error_message}")
src/gui/main_window.py-1442-    
--
src/gui/main_window.py-1446-        """
src/gui/main_window.py:1447:        print("üõë DEBUG: _on_analysis_cancelled called")
src/gui/main_window.py-1448-        
--
src/gui/main_window.py-1455-        
src/gui/main_window.py:1456:        print("‚úÖ DEBUG: Analysis cancellation handled")
src/gui/main_window.py-1457-    
--
src/gui/main_window.py-1470-        
src/gui/main_window.py:1471:        print(f"üìä DEBUG: Progress updated: {progress}% - {message}")
src/gui/main_window.py-1472-    
--
src/gui/main_window.py-1481-        """
src/gui/main_window.py:1482:        print(f"üåç DEBUG: _on_provider_selected called: {provider_name}")
src/gui/main_window.py-1483-        
--
src/gui/main_window.py-1492-        
src/gui/main_window.py:1493:        print(f"‚úÖ DEBUG: Provider selection handled: {provider_name}")
src/gui/main_window.py-1494-    
--
src/gui/main_window.py-1501-        """
src/gui/main_window.py:1502:        print(f"üåç DEBUG: _on_provider_usage_updated called: {len(usage_stats)} providers")
src/gui/main_window.py-1503-        
--
src/gui/main_window.py-1514-        
src/gui/main_window.py:1515:        print(f"‚úÖ DEBUG: Provider usage updated")
src/gui/main_window.py-1516-    
--
src/gui/main_window.py-1524-        """
src/gui/main_window.py:1525:        print(f"üåç DEBUG: _on_provider_warning called: {provider_name} {usage_percent}%")
src/gui/main_window.py-1526-        
--
src/gui/main_window.py-1546-        
src/gui/main_window.py:1547:        print(f"‚úÖ DEBUG: Provider warning handled: {provider_name} {usage_percent}%")
src/gui/main_window.py-1548-    
--
src/gui/main_window.py-1556-        """
src/gui/main_window.py:1557:        print(f"üåç DEBUG: _on_provider_fallback called: {from_provider} ‚Üí {to_provider}")
src/gui/main_window.py-1558-        
--
src/gui/main_window.py-1575-        
src/gui/main_window.py:1576:        print(f"‚úÖ DEBUG: Provider fallback handled: {from_provider} ‚Üí {to_provider}")
src/gui/main_window.py-1577-    
--
src/gui/main_window.py-1734-        """
src/gui/main_window.py:1735:        print(f"üé® DEBUG: Applying theme through ThemeManager: {theme_type.value}")
src/gui/main_window.py-1736-        
--
src/gui/main_window.py-1746-            
src/gui/main_window.py:1747:            print(f"‚úÖ DEBUG: Theme applied and saved through ThemeManager: {theme_type.value}")
src/gui/main_window.py-1748-        else:
src/gui/main_window.py:1749:            print(f"‚ùå DEBUG: Theme application failed: {theme_type.value}")
src/gui/main_window.py-1750-    
--
src/gui/main_window.py-1757-        """
src/gui/main_window.py:1758:        print("‚ö†Ô∏è DEBUG: _apply_theme_internal() DEPRECATED - using ThemeManager instead")
src/gui/main_window.py-1759-        
--
src/gui/main_window.py-1769-        """
src/gui/main_window.py:1770:        print("‚ö†Ô∏è DEBUG: _propagate_theme_change() DEPRECATED - ThemeManager handles automatically")
src/gui/main_window.py-1771-        
--
src/gui/main_window.py-1776-        
src/gui/main_window.py:1777:        print(f"‚úÖ DEBUG: Theme propagation complete via ThemeManager: {theme_name}")
src/gui/main_window.py-1778-    
--
src/gui/main_window.py-1785-        """
src/gui/main_window.py:1786:        print(f"üîß DEBUG: Updating splitter theme with ThemeManager colors (dark: {dark_theme})")
src/gui/main_window.py-1787-        
--
src/gui/main_window.py-1800-                
src/gui/main_window.py:1801:                print(f"‚úÖ DEBUG: Splitter theme updated with ThemeManager CSS: {'dark' if dark_theme else 'light'}")
src/gui/main_window.py-1802-    
--
src/gui/main_window.py-1822-        self._switch_view("single_city")
src/gui/main_window.py:1823:        print("üßπ DEBUG: Single City set as default view")
src/gui/main_window.py-1824-    
--
src/gui/main_window.py-1838-        try:
src/gui/main_window.py:1839:            print("üõë DEBUG: ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çTVA + MAGYAR MEGY√âK INTEGR√ÅCI√ì + V√ÅROS ELEMZ√âS SIGNAL FIX MainWindow closeEvent called")
src/gui/main_window.py-1840-            
--
src/gui/main_window.py-1842-            if self.analytics_panel:
src/gui/main_window.py:1843:                print("üõë DEBUG: Stopping refactored analytics panel...")
src/gui/main_window.py-1844-                self.analytics_panel.clear_data()
--
src/gui/main_window.py-1847-            if self.trend_analytics_tab:
src/gui/main_window.py:1848:                print("üõë DEBUG: Stopping trend analytics tab...")
src/gui/main_window.py-1849-                self.trend_analytics_tab.clear_data()
--
src/gui/main_window.py-1852-            if self.hungarian_map_tab:
src/gui/main_window.py:1853:                print("üõë DEBUG: Stopping hungarian map tab...")
src/gui/main_window.py-1854-                # Ha a HungarianMapTab-nak lenne cleanup met√≥dusa, itt h√≠vn√°nk meg
--
src/gui/main_window.py-1857-            if self.map_view:
src/gui/main_window.py:1858:                print("üõë DEBUG: Stopping map view component...")
src/gui/main_window.py-1859-                # Ha a MapView-nak lenne cleanup met√≥dusa, itt h√≠vn√°nk meg
--
src/gui/main_window.py-1864-            # Controller le√°ll√≠t√°sa
src/gui/main_window.py:1865:            print("üõë DEBUG: Shutting down controller...")
src/gui/main_window.py-1866-            self.controller.shutdown()
--
src/gui/main_window.py-1870-            
src/gui/main_window.py:1871:            print("‚úÖ DEBUG: ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çTVA + MAGYAR MEGY√âK INTEGR√ÅCI√ì + V√ÅROS ELEMZ√âS SIGNAL FIX MainWindow bez√°rva")
src/gui/main_window.py-1872-            
src/gui/main_window.py-1873-        except Exception as e:
src/gui/main_window.py:1874:            print(f"‚ö†Ô∏è DEBUG: Bez√°r√°si hiba: {e}")
src/gui/main_window.py-1875-            import traceback
--
src/gui/data_widgets.py-410-        """Widget-ek regisztr√°l√°sa ThemeManager-ben."""
src/gui/data_widgets.py:411:        print("üé® DEBUG: Registering WeatherDataTable widgets for theming...")
src/gui/data_widgets.py-412-        
--
src/gui/data_widgets.py-429-        
src/gui/data_widgets.py:430:        print("‚úÖ DEBUG: WeatherDataTable widgets registered for theming")
src/gui/data_widgets.py-431-    
--
src/gui/data_widgets.py-939-        """
src/gui/data_widgets.py:940:        print(f"üé® DEBUG: WeatherDataTable applying theme via ThemeManager: {'dark' if dark_theme else 'light'}")
src/gui/data_widgets.py-941-        
--
src/gui/data_widgets.py-972-        
src/gui/data_widgets.py:973:        print(f"‚úÖ DEBUG: WeatherDataTable theme applied via ThemeManager: {'dark' if dark_theme else 'light'}")
src/gui/data_widgets.py-974-    
--
src/gui/main_windowold.py-110-        
src/gui/main_windowold.py:111:        print("üö® DEBUG: ANALYTICS ‚Üí MAP SYNC FIX BEFEJEZVE + ANALYTICS VIEW REFAKTOR√ÅL√ÅS BEFEJEZVE + HIB√ÅS JELZ√âSEK ELT√ÅVOL√çTVA MainWindow __init__ started")
src/gui/main_windowold.py-112-        
--
src/gui/main_windowold.py-127-        
src/gui/main_windowold.py:128:        print("üéØ DEBUG: Creating CLEAN AppController with DUAL-API...")
src/gui/main_windowold.py-129-        # Controller (Model + business logic)
src/gui/main_windowold.py-130-        self.controller = AppController()
src/gui/main_windowold.py:131:        print("‚úÖ DEBUG: CLEAN AppController created with DUAL-API support")
src/gui/main_windowold.py-132-        
--
src/gui/main_windowold.py-171-        
src/gui/main_windowold.py:172:        print("üñºÔ∏è DEBUG: Setting up UI...")
src/gui/main_windowold.py-173-        self._setup_window()
--
src/gui/main_windowold.py-177-        self._init_status_bar_with_provider_display()
src/gui/main_windowold.py:178:        print("‚úÖ DEBUG: UI setup complete")
src/gui/main_windowold.py-179-        
--
src/gui/main_windowold.py-181-        
src/gui/main_windowold.py:182:        print("üîó DEBUG: Connecting CLEAN signals...")
src/gui/main_windowold.py-183-        self._connect_mvc_signals()
src/gui/main_windowold.py:184:        print("‚úÖ DEBUG: CLEAN SIGNAL CHAIN CONNECTED")
src/gui/main_windowold.py-185-        
--
src/gui/main_windowold.py-187-        
src/gui/main_windowold.py:188:        print("üö® DEBUG: Setting up ANALYTICS ‚Üí MAP SYNC signal connections...")
src/gui/main_windowold.py-189-        self._setup_control_panel_connections()
src/gui/main_windowold.py:190:        print("‚úÖ DEBUG: ANALYTICS ‚Üí MAP SYNC SIGNAL CONNECTIONS CONNECTED")
src/gui/main_windowold.py-191-        
--
src/gui/main_windowold.py-193-        
src/gui/main_windowold.py:194:        print("üé® DEBUG: Setting up ThemeManager integration...")
src/gui/main_windowold.py-195-        self._setup_theme_integration()
src/gui/main_windowold.py:196:        print("‚úÖ DEBUG: ThemeManager integration complete")
src/gui/main_windowold.py-197-        
--
src/gui/main_windowold.py-201-        
src/gui/main_windowold.py:202:        print("‚úÖ DEBUG: ANALYTICS ‚Üí MAP SYNC FIX BEFEJEZVE + ANALYTICS VIEW REFAKTOR√ÅL√ÅS BEFEJEZVE + HIB√ÅS JELZ√âSEK ELT√ÅVOL√çTVA MainWindow initialized")
src/gui/main_windowold.py-203-    
--
src/gui/main_windowold.py-225-        
src/gui/main_windowold.py:226:        print("üîß DEBUG: Window setup complete")
src/gui/main_windowold.py-227-    
--
src/gui/main_windowold.py-231-        """
src/gui/main_windowold.py:232:        print("üé® DEBUG: Setting up ThemeManager integration...")
src/gui/main_windowold.py-233-        
--
src/gui/main_windowold.py-239-        
src/gui/main_windowold.py:240:        print("‚úÖ DEBUG: ThemeManager integration setup complete")
src/gui/main_windowold.py-241-    
--
src/gui/main_windowold.py-248-        """
src/gui/main_windowold.py:249:        print(f"üé® DEBUG: MainWindow received ThemeManager theme change: {theme_name}")
src/gui/main_windowold.py-250-        
--
src/gui/main_windowold.py-262-        
src/gui/main_windowold.py:263:        print(f"‚úÖ DEBUG: MainWindow theme change handled: {theme_name}")
src/gui/main_windowold.py-264-    
--
src/gui/main_windowold.py-268-        """
src/gui/main_windowold.py:269:        print("üß≠ DEBUG: Creating navigation toolbar...")
src/gui/main_windowold.py-270-        
--
src/gui/main_windowold.py-331-        
src/gui/main_windowold.py:332:        print("‚úÖ DEBUG: Navigation toolbar created")
src/gui/main_windowold.py-333-    
--
src/gui/main_windowold.py-337-        """
src/gui/main_windowold.py:338:        print("üìö DEBUG: Creating stacked views...")
src/gui/main_windowold.py-339-        
--
src/gui/main_windowold.py-382-        
src/gui/main_windowold.py:383:        print("‚úÖ DEBUG: Stacked views created")
src/gui/main_windowold.py-384-    
--
src/gui/main_windowold.py-388-        """
src/gui/main_windowold.py:389:        print("üîß DEBUG: Creating SPLITTER CONSTRAINTS OPTIMALIZ√ÅLT Single City View...")
src/gui/main_windowold.py-390-        
--
src/gui/main_windowold.py-401-        
src/gui/main_windowold.py:402:        print("üîß DEBUG: Configuring OPTIMALIZ√ÅLT splitter...")
src/gui/main_windowold.py-403-        
--
src/gui/main_windowold.py-413-        
src/gui/main_windowold.py:414:        print("üéõÔ∏è DEBUG: Creating ControlPanel with FINAL OPTIMALIZ√ÅLT size constraints...")
src/gui/main_windowold.py-415-        self.control_panel = ControlPanel(self.worker_manager)
--
src/gui/main_windowold.py-427-        main_splitter.addWidget(self.control_panel)
src/gui/main_windowold.py:428:        print(f"‚úÖ DEBUG: ControlPanel added with FINAL OPTIMALIZ√ÅLT constraints: {320}-{520}px")
src/gui/main_windowold.py-429-        
--
src/gui/main_windowold.py-431-        
src/gui/main_windowold.py:432:        print("üìä DEBUG: Creating ResultsPanel with OPTIMALIZ√ÅLT expand capability...")
src/gui/main_windowold.py-433-        self.results_panel = ResultsPanel()
--
src/gui/main_windowold.py-445-        main_splitter.addWidget(self.results_panel)
src/gui/main_windowold.py:446:        print("‚úÖ DEBUG: ResultsPanel added with OPTIMALIZ√ÅLT expand capability")
src/gui/main_windowold.py-447-        
--
src/gui/main_windowold.py-449-        
src/gui/main_windowold.py:450:        print("üîß DEBUG: Setting OPTIMALIZ√ÅLT stretch factors...")
src/gui/main_windowold.py-451-        
--
src/gui/main_windowold.py-457-        
src/gui/main_windowold.py:458:        print("‚úÖ DEBUG: OPTIMALIZ√ÅLT stretch factors set")
src/gui/main_windowold.py-459-        
--
src/gui/main_windowold.py-468-        
src/gui/main_windowold.py:469:        print(f"‚úÖ DEBUG: OPTIMALIZ√ÅLT initial sizes set - Control: {control_width}px, Results: {results_width}px")
src/gui/main_windowold.py-470-        
--
src/gui/main_windowold.py-474-        
src/gui/main_windowold.py:475:        print("üîß DEBUG: SPLITTER CONSTRAINTS OPTIMALIZ√ÅLT Single City View created")
src/gui/main_windowold.py-476-        
--
src/gui/main_windowold.py-482-        """
src/gui/main_windowold.py:483:        print("üìä DEBUG: Creating REFAKTOR√ÅLT AnalyticsView with ThemeManager + Signal Integration...")
src/gui/main_windowold.py-484-        
--
src/gui/main_windowold.py-490-        
src/gui/main_windowold.py:491:        print("‚úÖ DEBUG: REFAKTOR√ÅLT AnalyticsView created with ThemeManager + Signal Integration")
src/gui/main_windowold.py-492-        return self.analytics_panel
--
src/gui/main_windowold.py-497-        """
src/gui/main_windowold.py:498:        print("üìà DEBUG: Creating real TrendAnalyticsTab component with ThemeManager...")
src/gui/main_windowold.py-499-        
--
src/gui/main_windowold.py-505-        
src/gui/main_windowold.py:506:        print("‚úÖ DEBUG: Real TrendAnalyticsTab component created with ThemeManager")
src/gui/main_windowold.py-507-        return self.trend_analytics_tab
--
src/gui/main_windowold.py-512-        """
src/gui/main_windowold.py:513:        print("üå§Ô∏è DEBUG: Creating real HungarianMapTab component with ThemeManager + Weather Integration...")
src/gui/main_windowold.py-514-        
--
src/gui/main_windowold.py-520-        
src/gui/main_windowold.py:521:        print("‚úÖ DEBUG: Real HungarianMapTab component created with ThemeManager + Weather Integration")
src/gui/main_windowold.py-522-        return self.hungarian_map_tab
--
src/gui/main_windowold.py-587-        """
src/gui/main_windowold.py:588:        print(f"üîÑ DEBUG: Switching to view: {view_name}")
src/gui/main_windowold.py-589-        
--
src/gui/main_windowold.py-599-        if view_name not in view_indices:
src/gui/main_windowold.py:600:            print(f"‚ö†Ô∏è DEBUG: Unknown view name: {view_name}")
src/gui/main_windowold.py-601-            return
--
src/gui/main_windowold.py-623-        
src/gui/main_windowold.py:624:        print(f"‚úÖ DEBUG: View switched to: {view_name} (index: {view_index})")
src/gui/main_windowold.py-625-    
--
src/gui/main_windowold.py-691-        """
src/gui/main_windowold.py:692:        print("üåç DEBUG: Creating enhanced status bar with provider display...")
src/gui/main_windowold.py-693-        
--
src/gui/main_windowold.py-724-        
src/gui/main_windowold.py:725:        print("‚úÖ DEBUG: Enhanced status bar created with provider display")
src/gui/main_windowold.py-726-    
--
src/gui/main_windowold.py-731-        try:
src/gui/main_windowold.py:732:            print("üåç DEBUG: Initializing provider status...")
src/gui/main_windowold.py-733-            
--
src/gui/main_windowold.py-742-            
src/gui/main_windowold.py:743:            print("‚úÖ DEBUG: Provider status initialized")
src/gui/main_windowold.py-744-            
src/gui/main_windowold.py-745-        except Exception as e:
src/gui/main_windowold.py:746:            print(f"‚ùå DEBUG: Provider status initialization error: {e}")
src/gui/main_windowold.py-747-            # Fallback to default values
--
src/gui/main_windowold.py-790-            
src/gui/main_windowold.py:791:            print(f"‚úÖ DEBUG: Provider status display updated: {self.current_provider}")
src/gui/main_windowold.py-792-            
src/gui/main_windowold.py-793-        except Exception as e:
src/gui/main_windowold.py:794:            print(f"‚ùå DEBUG: Provider status display update error: {e}")
src/gui/main_windowold.py-795-    
--
src/gui/main_windowold.py-826-        """
src/gui/main_windowold.py:827:        print("üö® DEBUG: Setting up ANALYTICS ‚Üí MAP SYNC signal connections...")
src/gui/main_windowold.py-828-        
src/gui/main_windowold.py-829-        if not self.control_panel:
src/gui/main_windowold.py:830:            print("‚ùå DEBUG: ControlPanel is None - cannot setup signal connections!")
src/gui/main_windowold.py-831-            return
--
src/gui/main_windowold.py-833-        if not self.hungarian_map_tab:
src/gui/main_windowold.py:834:            print("‚ùå DEBUG: HungarianMapTab is None - cannot setup signal connections!")
src/gui/main_windowold.py-835-            return
--
src/gui/main_windowold.py-839-        def debug_analytics_params_changed(params: Dict[str, Any]):
src/gui/main_windowold.py:840:            print(f"üö® DEBUG [CONTROL‚ÜíMAP]: analysis_parameters_changed signal received")
src/gui/main_windowold.py:841:            print(f"üö® DEBUG: Analytics params: {params}")
src/gui/main_windowold.py-842-        
src/gui/main_windowold.py-843-        def debug_weather_params_changed(params: Dict[str, Any]):
src/gui/main_windowold.py:844:            print(f"üö® DEBUG [CONTROL‚ÜíMAP]: weather_parameters_changed signal received") 
src/gui/main_windowold.py:845:            print(f"üö® DEBUG: Weather params: {params}")
src/gui/main_windowold.py-846-        
src/gui/main_windowold.py-847-        def debug_date_range_changed(start_date: str, end_date: str):
src/gui/main_windowold.py:848:            print(f"üö® DEBUG [CONTROL‚ÜíMAP]: date_range_changed signal received")
src/gui/main_windowold.py:849:            print(f"üö® DEBUG: Date range: {start_date} ‚Üí {end_date}")
src/gui/main_windowold.py-850-        
src/gui/main_windowold.py-851-        def debug_bundle_changed(bundle: Dict[str, Any]):
src/gui/main_windowold.py:852:            print(f"üö® DEBUG [CONTROL‚ÜíMAP]: parameters_bundle_changed signal received")
src/gui/main_windowold.py:853:            print(f"üö® DEBUG: Bundle keys: {list(bundle.keys()) if bundle else 'NO BUNDLE'}")
src/gui/main_windowold.py-854-        
--
src/gui/main_windowold.py-865-                )
src/gui/main_windowold.py:866:                print("‚úÖ DEBUG: ControlPanel.analysis_parameters_changed ‚Üí HungarianMapTab.update_analysis_parameters CONNECTED")
src/gui/main_windowold.py-867-            else:
src/gui/main_windowold.py:868:                print("‚ö†Ô∏è DEBUG: HungarianMapTab.update_analysis_parameters method NOT FOUND!")
src/gui/main_windowold.py-869-        else:
src/gui/main_windowold.py:870:            print("‚ö†Ô∏è DEBUG: ControlPanel.analysis_parameters_changed signal NOT FOUND!")
src/gui/main_windowold.py-871-        
--
src/gui/main_windowold.py-880-                )
src/gui/main_windowold.py:881:                print("‚úÖ DEBUG: ControlPanel.weather_parameters_changed ‚Üí HungarianMapTab.update_weather_parameters CONNECTED")
src/gui/main_windowold.py-882-            else:
src/gui/main_windowold.py:883:                print("‚ö†Ô∏è DEBUG: HungarianMapTab.update_weather_parameters method NOT FOUND!")
src/gui/main_windowold.py-884-        else:
src/gui/main_windowold.py:885:            print("‚ö†Ô∏è DEBUG: ControlPanel.weather_parameters_changed signal NOT FOUND!")
src/gui/main_windowold.py-886-        
--
src/gui/main_windowold.py-895-                )
src/gui/main_windowold.py:896:                print("‚úÖ DEBUG: ControlPanel.date_range_changed ‚Üí HungarianMapTab.update_date_range CONNECTED")
src/gui/main_windowold.py-897-            else:
src/gui/main_windowold.py:898:                print("‚ö†Ô∏è DEBUG: HungarianMapTab.update_date_range method NOT FOUND!")
src/gui/main_windowold.py-899-        else:
src/gui/main_windowold.py:900:            print("‚ö†Ô∏è DEBUG: ControlPanel.date_range_changed signal NOT FOUND!")
src/gui/main_windowold.py-901-        
--
src/gui/main_windowold.py-910-                )
src/gui/main_windowold.py:911:                print("‚úÖ DEBUG: ControlPanel.parameters_bundle_changed ‚Üí HungarianMapTab.refresh_with_new_parameters CONNECTED")
src/gui/main_windowold.py-912-            else:
src/gui/main_windowold.py:913:                print("‚ö†Ô∏è DEBUG: HungarianMapTab.refresh_with_new_parameters method NOT FOUND!")
src/gui/main_windowold.py-914-        else:
src/gui/main_windowold.py:915:            print("‚ö†Ô∏è DEBUG: ControlPanel.parameters_bundle_changed signal NOT FOUND!")
src/gui/main_windowold.py-916-        
--
src/gui/main_windowold.py-921-            def debug_force_sync():
src/gui/main_windowold.py:922:                print("üö® DEBUG [CONTROL‚ÜíMAP]: force_map_sync triggered")
src/gui/main_windowold.py-923-            
--
src/gui/main_windowold.py-931-            self.control_panel._manual_map_sync = trigger_force_sync
src/gui/main_windowold.py:932:            print("‚úÖ DEBUG: Manual force_map_sync API setup complete")
src/gui/main_windowold.py-933-        
src/gui/main_windowold.py:934:        print("üö® ‚úÖ DEBUG: ANALYTICS ‚Üí MAP SYNC signal connections COMPLETED!")
src/gui/main_windowold.py-935-        
--
src/gui/main_windowold.py-939-        if hasattr(self.control_panel, 'emit_parameter_change_signals'):
src/gui/main_windowold.py:940:            print("üö® DEBUG: Triggering initial parameter sync for testing...")
src/gui/main_windowold.py-941-            try:
src/gui/main_windowold.py-942-                self.control_panel.emit_parameter_change_signals()
src/gui/main_windowold.py:943:                print("‚úÖ DEBUG: Initial parameter sync triggered successfully")
src/gui/main_windowold.py-944-            except Exception as e:
src/gui/main_windowold.py:945:                print(f"‚ö†Ô∏è DEBUG: Initial parameter sync error: {e}")
src/gui/main_windowold.py-946-    
--
src/gui/main_windowold.py-951-        
src/gui/main_windowold.py:952:        print("üîó DEBUG: Starting CLEAN signals with MULTI-CITY R√âGI√ì/MEGYE T√âRK√âP INTEGR√ÅCI√ì 100% BEFEJEZ√âSE + ANALYTICS VIEW REFAKTOR√ÅL√ÅS + HIB√ÅS JELZ√âSEK ELT√ÅVOL√çTVA...")
src/gui/main_windowold.py-953-        
--
src/gui/main_windowold.py-955-        
src/gui/main_windowold.py:956:        print("üåç DEBUG: Connecting Provider Status signals...")
src/gui/main_windowold.py-957-        
--
src/gui/main_windowold.py-959-        def debug_provider_selected(provider_name: str):
src/gui/main_windowold.py:960:            print(f"üåç DEBUG [CONTROLLER‚ÜíMAIN_WINDOW]: provider_selected: {provider_name}")
src/gui/main_windowold.py-961-        
--
src/gui/main_windowold.py-963-        self.controller.provider_selected.connect(self._on_provider_selected)
src/gui/main_windowold.py:964:        print("‚úÖ DEBUG: Controller.provider_selected ‚Üí MainWindow._on_provider_selected CONNECTED")
src/gui/main_windowold.py-965-        
--
src/gui/main_windowold.py-967-        def debug_provider_usage_updated(usage_stats: dict):
src/gui/main_windowold.py:968:            print(f"üåç DEBUG [CONTROLLER‚ÜíMAIN_WINDOW]: provider_usage_updated: {len(usage_stats)} providers")
src/gui/main_windowold.py-969-        
--
src/gui/main_windowold.py-971-        self.controller.provider_usage_updated.connect(self._on_provider_usage_updated)
src/gui/main_windowold.py:972:        print("‚úÖ DEBUG: Controller.provider_usage_updated ‚Üí MainWindow._on_provider_usage_updated CONNECTED")
src/gui/main_windowold.py-973-        
--
src/gui/main_windowold.py-975-        def debug_provider_warning(provider_name: str, usage_percent: int):
src/gui/main_windowold.py:976:            print(f"üåç DEBUG [CONTROLLER‚ÜíMAIN_WINDOW]: provider_warning: {provider_name} {usage_percent}%")
src/gui/main_windowold.py-977-        
--
src/gui/main_windowold.py-979-        self.controller.provider_warning.connect(self._on_provider_warning)
src/gui/main_windowold.py:980:        print("‚úÖ DEBUG: Controller.provider_warning ‚Üí MainWindow._on_provider_warning CONNECTED")
src/gui/main_windowold.py-981-        
--
src/gui/main_windowold.py-983-        def debug_provider_fallback(from_provider: str, to_provider: str):
src/gui/main_windowold.py:984:            print(f"üåç DEBUG [CONTROLLER‚ÜíMAIN_WINDOW]: provider_fallback: {from_provider} ‚Üí {to_provider}")
src/gui/main_windowold.py-985-        
--
src/gui/main_windowold.py-987-        self.controller.provider_fallback.connect(self._on_provider_fallback)
src/gui/main_windowold.py:988:        print("‚úÖ DEBUG: Controller.provider_fallback ‚Üí MainWindow._on_provider_fallback CONNECTED")
src/gui/main_windowold.py-989-        
--
src/gui/main_windowold.py-991-        
src/gui/main_windowold.py:992:        print("üéõÔ∏è DEBUG: Connecting ControlPanel ‚Üí Controller signals...")
src/gui/main_windowold.py-993-        
--
src/gui/main_windowold.py-997-                def debug_control_panel_provider_changed(provider_name: str):
src/gui/main_windowold.py:998:                    print(f"üåç DEBUG [CONTROL_PANEL‚ÜíCONTROLLER]: provider_changed: {provider_name}")
src/gui/main_windowold.py-999-                
--
src/gui/main_windowold.py-1003-                )
src/gui/main_windowold.py:1004:                print("‚úÖ DEBUG: ControlPanel provider_changed ‚Üí Controller.handle_provider_change CONNECTED")
src/gui/main_windowold.py-1005-            
--
src/gui/main_windowold.py-1007-            def debug_control_panel_search_requested(query: str):
src/gui/main_windowold.py:1008:                print(f"üîç DEBUG [CONTROL_PANEL‚ÜíCONTROLLER]: search_requested: '{query}' (DUAL-API)")
src/gui/main_windowold.py-1009-            
--
src/gui/main_windowold.py-1013-            )
src/gui/main_windowold.py:1014:            print("‚úÖ DEBUG: ControlPanel search_requested ‚Üí Controller.handle_search_request CONNECTED (DUAL-API)")
src/gui/main_windowold.py-1015-            
--
src/gui/main_windowold.py-1018-                source = data.get('preferred_source', 'unknown')
src/gui/main_windowold.py:1019:                print(f"üìç DEBUG [CONTROL_PANEL‚ÜíCONTROLLER]: city_selected: {name} ({lat:.4f}, {lon:.4f}) source: {source}")
src/gui/main_windowold.py-1020-            
--
src/gui/main_windowold.py-1024-            )
src/gui/main_windowold.py:1025:            print("‚úÖ DEBUG: ControlPanel city_selected ‚Üí Controller.handle_city_selection CONNECTED (DUAL-API)")
src/gui/main_windowold.py-1026-            
--
src/gui/main_windowold.py-1030-                optimal_source = get_optimal_data_source(use_case)
src/gui/main_windowold.py:1031:                print(f"üå§Ô∏è DEBUG [CONTROL_PANEL‚ÜíCONTROLLER]: weather_data_requested ({lat:.4f}, {lon:.4f}) ‚Üí {optimal_source}")
src/gui/main_windowold.py-1032-            
--
src/gui/main_windowold.py-1036-            )
src/gui/main_windowold.py:1037:            print("‚úÖ DEBUG: ControlPanel weather_data_requested ‚Üí Controller.handle_weather_data_request CONNECTED (DUAL-API)")
src/gui/main_windowold.py-1038-            
--
src/gui/main_windowold.py-1040-            def debug_control_panel_multi_city_requested(analysis_type: str, region_id: str, start_date: str, end_date: str, params: dict):
src/gui/main_windowold.py:1041:                print(f"üéâ DEBUG [CONTROL_PANEL‚ÜíMAIN_WINDOW]: multi_city_weather_requested: {analysis_type} '{region_id}' ({start_date} ‚Üí {end_date})")
src/gui/main_windowold.py:1042:                print(f"üéâ DEBUG: Multi-city params: {params}")
src/gui/main_windowold.py-1043-            
--
src/gui/main_windowold.py-1050-            else:
src/gui/main_windowold.py:1051:                print("‚ùå DEBUG: ControlPanel.multi_city_weather_requested signal NOT FOUND!")
src/gui/main_windowold.py-1052-            
src/gui/main_windowold.py-1053-        else:
src/gui/main_windowold.py:1054:            print("‚ùå DEBUG: ControlPanel is None!")
src/gui/main_windowold.py-1055-        
--
src/gui/main_windowold.py-1058-        if self.analytics_panel and self.control_panel:
src/gui/main_windowold.py:1059:            print("üî• DEBUG: Connecting REFAKTOR√ÅLT Analytics Panel signals + HIB√ÅS JELZ√âSEK ELT√ÅVOL√çTVA...")
src/gui/main_windowold.py-1060-            
--
src/gui/main_windowold.py-1062-            def debug_control_panel_location_changed(location):
src/gui/main_windowold.py:1063:                print(f"üîó DEBUG [CONTROL_PANEL‚ÜíANALYTICS]: location_changed: {location}")
src/gui/main_windowold.py-1064-            
--
src/gui/main_windowold.py-1069-                )
src/gui/main_windowold.py:1070:                print("‚úÖ DEBUG: ControlPanel.location_changed ‚Üí AnalyticsView.on_location_changed CONNECTED")
src/gui/main_windowold.py-1071-            
--
src/gui/main_windowold.py-1073-            def debug_control_panel_city_to_analytics(name: str, lat: float, lon: float, data: dict):
src/gui/main_windowold.py:1074:                print(f"üîó DEBUG [CONTROL_PANEL‚ÜíANALYTICS]: city_selected‚Üílocation_changed: {name}")
src/gui/main_windowold.py-1075-                # Dictionary objektum l√©trehoz√°sa az AnalyticsView sz√°m√°ra
--
src/gui/main_windowold.py-1084-            self.control_panel.city_selected.connect(debug_control_panel_city_to_analytics)
src/gui/main_windowold.py:1085:            print("‚úÖ DEBUG: ControlPanel.city_selected ‚Üí AnalyticsView.on_location_changed COMPATIBILITY CONNECTED")
src/gui/main_windowold.py-1086-            
--
src/gui/main_windowold.py-1090-            def debug_analytics_multi_city_query_requested(query_type: str, region_name: str):
src/gui/main_windowold.py:1091:                print(f"üî• DEBUG [ANALYTICS‚ÜíMAIN_WINDOW]: multi_city_query_requested: {query_type}, {region_name}")
src/gui/main_windowold.py-1092-            
--
src/gui/main_windowold.py-1099-            else:
src/gui/main_windowold.py:1100:                print("‚ùå DEBUG: AnalyticsView.multi_city_query_requested signal NOT FOUND!")
src/gui/main_windowold.py-1101-            
--
src/gui/main_windowold.py-1103-            def debug_analytics_analysis_started():
src/gui/main_windowold.py:1104:                print("üî• DEBUG [ANALYTICS‚ÜíMAIN_WINDOW]: analysis_started (refaktor√°lt)")
src/gui/main_windowold.py-1105-            
--
src/gui/main_windowold.py-1109-            )
src/gui/main_windowold.py:1110:            print("‚úÖ DEBUG: AnalyticsView.analysis_started ‚Üí MainWindow status update CONNECTED")
src/gui/main_windowold.py-1111-            
src/gui/main_windowold.py-1112-            # üîß HIB√ÅS JELZ√âS ELT√ÅVOL√çTVA: analytics_completed signal connection T√ñR√ñLVE!
src/gui/main_windowold.py:1113:            print("üîß DEBUG: analytics_completed signal connection ELT√ÅVOL√çTVA (hib√°s jelz√©s)")
src/gui/main_windowold.py-1114-            
--
src/gui/main_windowold.py-1116-            def debug_analytics_error_occurred(error_msg: str):
src/gui/main_windowold.py:1117:                print(f"‚ùå DEBUG [ANALYTICS‚ÜíMAIN_WINDOW]: error_occurred: {error_msg}")
src/gui/main_windowold.py-1118-            
--
src/gui/main_windowold.py-1122-            )
src/gui/main_windowold.py:1123:            print("‚úÖ DEBUG: AnalyticsView.error_occurred ‚Üí MainWindow status update CONNECTED")
src/gui/main_windowold.py-1124-            
src/gui/main_windowold.py-1125-        else:
src/gui/main_windowold.py:1126:            print("‚ö†Ô∏è DEBUG: Analytics panel or Control panel is None - signalok nem kapcsol√≥dnak")
src/gui/main_windowold.py-1127-        
--
src/gui/main_windowold.py-1129-        
src/gui/main_windowold.py:1130:        print("üîß DEBUG: HIB√ÅS ANALYTICS ‚Üí MAP INTEGRATION signals ELT√ÅVOL√çTVA (analytics_completed hib√°s bek√∂t√©s)")
src/gui/main_windowold.py:1131:        print("‚úÖ DEBUG: Most m√°r csak a TISZTA, k√∂zponti adatkezel√©s marad (_on_multi_city_result_ready_for_views)")
src/gui/main_windowold.py-1132-        
--
src/gui/main_windowold.py-1135-        if self.trend_analytics_tab and self.control_panel:
src/gui/main_windowold.py:1136:            print("üìà DEBUG: Connecting TREND ANALYTICS TAB signals...")
src/gui/main_windowold.py-1137-            
--
src/gui/main_windowold.py-1139-            def debug_control_panel_city_to_trend(name: str, lat: float, lon: float, data: dict):
src/gui/main_windowold.py:1140:                print(f"üîó DEBUG [CONTROL_PANEL‚ÜíTREND_ANALYTICS]: city_selected‚Üíset_location: {name} ({lat:.4f}, {lon:.4f})")
src/gui/main_windowold.py-1141-                self.trend_analytics_tab.set_location(name, lat, lon)
--
src/gui/main_windowold.py-1143-            self.control_panel.city_selected.connect(debug_control_panel_city_to_trend)
src/gui/main_windowold.py:1144:            print("‚úÖ DEBUG: ControlPanel.city_selected ‚Üí TrendAnalyticsTab.set_location CONNECTED")
src/gui/main_windowold.py-1145-            
--
src/gui/main_windowold.py-1147-            def debug_trend_analysis_started():
src/gui/main_windowold.py:1148:                print("üìà DEBUG [TREND_ANALYTICS‚ÜíMAIN_WINDOW]: analysis_started")
src/gui/main_windowold.py-1149-            
--
src/gui/main_windowold.py-1153-            )
src/gui/main_windowold.py:1154:            print("‚úÖ DEBUG: TrendAnalyticsTab.analysis_started ‚Üí MainWindow status update CONNECTED")
src/gui/main_windowold.py-1155-            
--
src/gui/main_windowold.py-1158-                city_name = results.get('city_name', 'Unknown')
src/gui/main_windowold.py:1159:                print(f"üìà DEBUG [TREND_ANALYTICS‚ÜíMAIN_WINDOW]: analysis_completed: {city_name}")
src/gui/main_windowold.py-1160-            
--
src/gui/main_windowold.py-1162-            self.trend_analytics_tab.analysis_completed.connect(self._on_trend_analysis_completed)
src/gui/main_windowold.py:1163:            print("‚úÖ DEBUG: TrendAnalyticsTab.analysis_completed ‚Üí MainWindow._on_trend_analysis_completed CONNECTED")
src/gui/main_windowold.py-1164-            
--
src/gui/main_windowold.py-1166-            def debug_trend_error_occurred(error_msg: str):
src/gui/main_windowold.py:1167:                print(f"‚ùå DEBUG [TREND_ANALYTICS‚ÜíMAIN_WINDOW]: error_occurred: {error_msg}")
src/gui/main_windowold.py-1168-            
--
src/gui/main_windowold.py-1170-            self.trend_analytics_tab.error_occurred.connect(self._on_trend_analysis_error)
src/gui/main_windowold.py:1171:            print("‚úÖ DEBUG: TrendAnalyticsTab.error_occurred ‚Üí MainWindow._on_trend_analysis_error CONNECTED")
src/gui/main_windowold.py-1172-            
--
src/gui/main_windowold.py-1174-            def debug_trend_location_selected(name: str, lat: float, lon: float):
src/gui/main_windowold.py:1175:                print(f"üìç DEBUG [TREND_ANALYTICS‚ÜíMAIN_WINDOW]: location_selected: {name} ({lat:.4f}, {lon:.4f})")
src/gui/main_windowold.py-1176-            
src/gui/main_windowold.py-1177-            self.trend_analytics_tab.location_selected.connect(debug_trend_location_selected)
src/gui/main_windowold.py:1178:            print("‚úÖ DEBUG: TrendAnalyticsTab.location_selected signal CONNECTED")
src/gui/main_windowold.py-1179-            
src/gui/main_windowold.py-1180-        else:
src/gui/main_windowold.py:1181:            print("‚ö†Ô∏è DEBUG: Trend Analytics tab or Control panel is None - signalok nem kapcsol√≥dnak")
src/gui/main_windowold.py-1182-        
--
src/gui/main_windowold.py-1184-        
src/gui/main_windowold.py:1185:        print("üì° DEBUG: Connecting Controller ‚Üí GUI response signals...")
src/gui/main_windowold.py-1186-        
--
src/gui/main_windowold.py-1188-        def debug_controller_geocoding_results(results: list):
src/gui/main_windowold.py:1189:            print(f"üìç DEBUG [CONTROLLER‚ÜíGUI]: geocoding_results_ready: {len(results)} results (DUAL-API)")
src/gui/main_windowold.py-1190-        
--
src/gui/main_windowold.py-1196-            )
src/gui/main_windowold.py:1197:            print("‚úÖ DEBUG: Controller.geocoding_results_ready ‚Üí ControlPanel._on_geocoding_completed CONNECTED")
src/gui/main_windowold.py-1198-        
--
src/gui/main_windowold.py-1206-            source_type = data.get("source_type", "unknown")
src/gui/main_windowold.py:1207:            print(f"üìä DEBUG [CONTROLLER‚ÜíMAIN_WINDOW]: weather_data_ready: {record_count} records from {data_source} (type: {source_type})")
src/gui/main_windowold.py-1208-        
--
src/gui/main_windowold.py-1212-        )
src/gui/main_windowold.py:1213:        print("‚úÖ DEBUG: Controller.weather_data_ready ‚Üí MainWindow._on_weather_data_received CONNECTED (DUAL-API)")
src/gui/main_windowold.py-1214-        
--
src/gui/main_windowold.py-1217-            def debug_controller_weather_data_to_analytics(data: dict):
src/gui/main_windowold.py:1218:                print("üîó DEBUG [CONTROLLER‚ÜíANALYTICS]: weather_data_ready ‚Üí update_data")
src/gui/main_windowold.py-1219-            
--
src/gui/main_windowold.py-1223-            )
src/gui/main_windowold.py:1224:            print("‚úÖ DEBUG: Controller.weather_data_ready ‚Üí AnalyticsView.update_data CONNECTED")
src/gui/main_windowold.py-1225-        
--
src/gui/main_windowold.py-1229-        def debug_controller_error_occurred(message: str):
src/gui/main_windowold.py:1230:            print(f"‚ùå DEBUG [CONTROLLER‚ÜíMAIN_WINDOW]: error_occurred: '{message}'")
src/gui/main_windowold.py-1231-        
--
src/gui/main_windowold.py-1233-        self.controller.error_occurred.connect(self._show_error)
src/gui/main_windowold.py:1234:        print("‚úÖ DEBUG: Controller.error_occurred ‚Üí MainWindow._show_error CONNECTED")
src/gui/main_windowold.py-1235-        
--
src/gui/main_windowold.py-1237-        def debug_controller_status_updated(message: str):
src/gui/main_windowold.py:1238:            print(f"üìù DEBUG [CONTROLLER‚ÜíMAIN_WINDOW]: status_updated: '{message}'")
src/gui/main_windowold.py-1239-        
--
src/gui/main_windowold.py-1241-        self.controller.status_updated.connect(self._update_status)
src/gui/main_windowold.py:1242:        print("‚úÖ DEBUG: Controller.status_updated ‚Üí MainWindow._update_status CONNECTED")
src/gui/main_windowold.py-1243-        
--
src/gui/main_windowold.py-1245-        def debug_controller_progress_updated(worker_type: str, progress: int):
src/gui/main_windowold.py:1246:            print(f"‚è≥ DEBUG [CONTROLLER‚ÜíMAIN_WINDOW]: progress_updated: {worker_type} {progress}%")
src/gui/main_windowold.py-1247-        
--
src/gui/main_windowold.py-1249-        self.controller.progress_updated.connect(self._update_progress)
src/gui/main_windowold.py:1250:        print("‚úÖ DEBUG: Controller.progress_updated ‚Üí MainWindow._update_progress CONNECTED")
src/gui/main_windowold.py-1251-        
--
src/gui/main_windowold.py-1269-            )
src/gui/main_windowold.py:1270:            print("‚úÖ DEBUG: Controller ‚Üí ControlPanel additional signals CONNECTED")
src/gui/main_windowold.py-1271-        
--
src/gui/main_windowold.py-1276-            def debug_results_panel_export_requested(format: str):
src/gui/main_windowold.py:1277:                print(f"üìä DEBUG [RESULTS_PANEL‚ÜíMAIN_WINDOW]: export_requested: {format}")
src/gui/main_windowold.py-1278-            
--
src/gui/main_windowold.py-1280-            self.results_panel.export_requested.connect(self._handle_export_request)
src/gui/main_windowold.py:1281:            print("‚úÖ DEBUG: ResultsPanel.export_requested ‚Üí MainWindow._handle_export_request CONNECTED")
src/gui/main_windowold.py-1282-            
--
src/gui/main_windowold.py-1284-            def debug_results_panel_extreme_weather_requested():
src/gui/main_windowold.py:1285:                print("‚ö° DEBUG [RESULTS_PANEL‚ÜíMAIN_WINDOW]: extreme_weather_requested")
src/gui/main_windowold.py-1286-            
--
src/gui/main_windowold.py-1288-            self.results_panel.extreme_weather_requested.connect(self._show_extreme_weather)
src/gui/main_windowold.py:1289:            print("‚úÖ DEBUG: ResultsPanel.extreme_weather_requested ‚Üí MainWindow._show_extreme_weather CONNECTED")
src/gui/main_windowold.py-1290-        
--
src/gui/main_windowold.py-1300-            def debug_charts_exported(filepath: str, success: bool):
src/gui/main_windowold.py:1301:                print(f"üìà DEBUG [CHARTS‚ÜíMAIN_WINDOW]: chart_exported: {filepath} - {'success' if success else 'failed'}")
src/gui/main_windowold.py-1302-            
--
src/gui/main_windowold.py-1304-            charts_container.chart_exported.connect(self._on_chart_exported)
src/gui/main_windowold.py:1305:            print("‚úÖ DEBUG: ChartsContainer.chart_exported ‚Üí MainWindow._on_chart_exported CONNECTED")
src/gui/main_windowold.py-1306-        
--
src/gui/main_windowold.py-1314-            def debug_table_export_completed(filepath: str, success: bool):
src/gui/main_windowold.py:1315:                print(f"üìã DEBUG [DATA_TABLE‚ÜíMAIN_WINDOW]: export_completed: {filepath} - {'success' if success else 'failed'}")
src/gui/main_windowold.py-1316-            
--
src/gui/main_windowold.py-1318-            data_table.export_completed.connect(self._on_table_exported)
src/gui/main_windowold.py:1319:            print("‚úÖ DEBUG: DataTable.export_completed ‚Üí MainWindow._on_table_exported CONNECTED")
src/gui/main_windowold.py-1320-            
--
src/gui/main_windowold.py-1322-            def debug_table_row_selected(row_index: int):
src/gui/main_windowold.py:1323:                print(f"üìã DEBUG [DATA_TABLE‚ÜíMAIN_WINDOW]: row_selected: row {row_index}")
src/gui/main_windowold.py-1324-            
--
src/gui/main_windowold.py-1326-            data_table.row_selected.connect(self._on_table_row_selected)
src/gui/main_windowold.py:1327:            print("‚úÖ DEBUG: DataTable.row_selected ‚Üí MainWindow._on_table_row_selected CONNECTED")
src/gui/main_windowold.py-1328-        
--
src/gui/main_windowold.py-1331-        def debug_theme_changed(theme_name: str):
src/gui/main_windowold.py:1332:            print(f"üé® DEBUG [MAIN_WINDOW]: theme_changed: {theme_name}")
src/gui/main_windowold.py-1333-        
--
src/gui/main_windowold.py-1335-        self.theme_changed.connect(self._propagate_theme_change)
src/gui/main_windowold.py:1336:        print("‚úÖ DEBUG: MainWindow.theme_changed ‚Üí MainWindow._propagate_theme_change CONNECTED")
src/gui/main_windowold.py-1337-        
src/gui/main_windowold.py-1338-        def debug_view_changed(view_name: str):
src/gui/main_windowold.py:1339:            print(f"üîÑ DEBUG [MAIN_WINDOW]: view_changed: {view_name}")
src/gui/main_windowold.py-1340-        
src/gui/main_windowold.py-1341-        self.view_changed.connect(debug_view_changed)
src/gui/main_windowold.py:1342:        print("‚úÖ DEBUG: MainWindow.view_changed signal CONNECTED")
src/gui/main_windowold.py-1343-        
src/gui/main_windowold.py:1344:        print("üéâ ‚úÖ DEBUG: ALL CLEAN signals connected successfully with MULTI-CITY R√âGI√ì/MEGYE T√âRK√âP INTEGR√ÅCI√ì 100% BEFEJEZVE + ANALYTICS VIEW REFAKTOR√ÅL√ÅS BEFEJEZVE + TISZTA ANALYTICS ‚Üí T√âRK√âP INTEGRATION + TREND ANALYTICS INTEGR√ÅCI√ì BEFEJEZVE + DASHBOARD CLEANUP BEFEJEZVE + Analytics Refaktor√°lt + DUAL-API + PROVIDER STATUS + HIB√ÅS JELZ√âSEK ELT√ÅVOL√çTVA!")
src/gui/main_windowold.py-1345-    
--
src/gui/main_windowold.py-1355-        """
src/gui/main_windowold.py:1356:        print(f"üî• DEBUG: _handle_analytics_view_query called: {query_type}, {region_name}")
src/gui/main_windowold.py-1357-        
--
src/gui/main_windowold.py-1385-        """
src/gui/main_windowold.py:1386:        print(f"üî• DEBUG: _on_multi_city_result_ready_for_views called - sz√©toszt√°s a n√©zeteknek (query_type: {query_type})...")
src/gui/main_windowold.py-1387-        
--
src/gui/main_windowold.py-1392-                analytics_parameter = self._map_query_type_to_parameter(query_type)
src/gui/main_windowold.py:1393:                print(f"üîß DEBUG: Mapped query_type '{query_type}' to parameter '{analytics_parameter}'")
src/gui/main_windowold.py-1394-                
--
src/gui/main_windowold.py-1397-                    self.hungarian_map_tab.set_analytics_parameter(analytics_parameter)
src/gui/main_windowold.py:1398:                    print(f"‚úÖ DEBUG: Analytics parameter set on HungarianMapTab: {analytics_parameter}")
src/gui/main_windowold.py-1399-                
--
src/gui/main_windowold.py-1408-                
src/gui/main_windowold.py:1409:            print("‚úÖ DEBUG: Multi-city result distribution completed (with query type)")
src/gui/main_windowold.py-1410-            
src/gui/main_windowold.py-1411-        except Exception as e:
src/gui/main_windowold.py:1412:            print(f"‚ùå DEBUG: Multi-city result distribution error: {e}")
src/gui/main_windowold.py-1413-            self._show_error(f"Multi-city eredm√©ny sz√©toszt√°si hiba: {e}")
--
src/gui/main_windowold.py-1425-        mapped_param = self.QUERY_TYPE_TO_PARAMETER.get(query_type, "H≈ëm√©rs√©klet")
src/gui/main_windowold.py:1426:        print(f"üîß DEBUG: Query type mapping: {query_type} ‚Üí {mapped_param}")
src/gui/main_windowold.py-1427-        return mapped_param
--
src/gui/main_windowold.py-1449-        """
src/gui/main_windowold.py:1450:        print(f"üéâ DEBUG: _handle_multi_city_weather_request called - COMPLETING MULTI-CITY INTEGRATION + WINDSPEED FIX!")
src/gui/main_windowold.py:1451:        print(f"üéâ DEBUG: Analysis type: {analysis_type}, Region: '{region_id}', Date range: {start_date} ‚Üí {end_date}")
src/gui/main_windowold.py:1452:        print(f"üéâ DEBUG: Params: {params}")
src/gui/main_windowold.py-1453-        
--
src/gui/main_windowold.py-1461-            
src/gui/main_windowold.py:1462:            print(f"üîß DEBUG: Query type: {query_type}, Limit: {limit}")
src/gui/main_windowold.py-1463-            
--
src/gui/main_windowold.py-1466-                display_parameter = self._map_query_type_to_parameter(query_type)
src/gui/main_windowold.py:1467:                print(f"üîß DEBUG: 1. L√âP√âS - Setting analytics parameter on map: {display_parameter}")
src/gui/main_windowold.py-1468-                
--
src/gui/main_windowold.py-1470-                    self.hungarian_map_tab.set_analytics_parameter(display_parameter)
src/gui/main_windowold.py:1471:                    print(f"‚úÖ DEBUG: Analytics parameter set successfully: {display_parameter}")
src/gui/main_windowold.py-1472-                else:
src/gui/main_windowold.py:1473:                    print("‚ö†Ô∏è DEBUG: HungarianMapTab.set_analytics_parameter method not found!")
src/gui/main_windowold.py-1474-            
src/gui/main_windowold.py-1475-            # 1. Multi-City Engine p√©ld√°nyos√≠t√°s/haszn√°lat
src/gui/main_windowold.py:1476:            print("üéâ DEBUG: Importing Multi-City Engine...")
src/gui/main_windowold.py-1477-            from src.analytics.multi_city_engine import MultiCityEngine
--
src/gui/main_windowold.py-1479-            engine = MultiCityEngine()
src/gui/main_windowold.py:1480:            print("‚úÖ DEBUG: Multi-City Engine instance created")
src/gui/main_windowold.py-1481-            
src/gui/main_windowold.py:1482:            print(f"üéâ DEBUG: Running multi-city analysis - Query: {query_type}, Limit: {limit}")
src/gui/main_windowold.py-1483-            
--
src/gui/main_windowold.py-1493-            if not hasattr(result, 'city_results'):
src/gui/main_windowold.py:1494:                print(f"‚ùå DEBUG: Multi-city engine returned invalid result type: {type(result)}")
src/gui/main_windowold.py-1495-                error_msg = f"Multi-city engine hib√°s eredm√©ny t√≠pus: {type(result)}"
--
src/gui/main_windowold.py-1499-            
src/gui/main_windowold.py:1500:            print(f"‚úÖ DEBUG: Multi-city analysis completed - {len(result.city_results)} results")
src/gui/main_windowold.py:1501:            print(f"üîß DEBUG: Result type: {type(result)}, has city_results: {hasattr(result, 'city_results')}")
src/gui/main_windowold.py-1502-            
src/gui/main_windowold.py-1503-            # 3. OPCION√ÅLIS: city_results logging c√©lokra (de NEM konverzi√≥!)
src/gui/main_windowold.py:1504:            print("üéâ DEBUG: Multi-city results summary:")
src/gui/main_windowold.py-1505-            for i, city_result in enumerate(result.city_results[:5]):  # Els≈ë 5 a loghoz
--
src/gui/main_windowold.py-1509-            if self.hungarian_map_tab and hasattr(self.hungarian_map_tab, 'set_analytics_result'):
src/gui/main_windowold.py:1510:                print(f"üîß DEBUG: 2. L√âP√âS - Setting analytics result on map...")
src/gui/main_windowold.py-1511-                self.hungarian_map_tab.set_analytics_result(result)
src/gui/main_windowold.py:1512:                print("‚úÖ DEBUG: Analytics result set successfully on HungarianMapTab")
src/gui/main_windowold.py-1513-            else:
src/gui/main_windowold.py:1514:                print("‚ö†Ô∏è DEBUG: HungarianMapTab.set_analytics_result method not found!")
src/gui/main_windowold.py-1515-            
src/gui/main_windowold.py-1516-            # 4. üî• KRITIKUS JAV√çT√ÅS: EREDM√âNY SZ√âTOSZT√ÅSA MINDEN RELEV√ÅNS N√âZETRE + QUERY TYPE INFORM√ÅCI√ì
src/gui/main_windowold.py:1517:            print("üî• DEBUG: Distributing AnalyticsResult to all relevant views...")
src/gui/main_windowold.py-1518-            self._on_multi_city_result_ready_for_views(result, query_type)
--
src/gui/main_windowold.py-1528-            if params.get("auto_switch_to_map", True):
src/gui/main_windowold.py:1529:                print("üéâ DEBUG: Auto-switching to map view...")
src/gui/main_windowold.py-1530-                self._switch_view("map_view")
src/gui/main_windowold.py-1531-            
src/gui/main_windowold.py:1532:            print(f"üîß ‚úÖ DEBUG: WINDSPEED METRIC JAV√çT√ÅS BEFEJEZVE - {query_type} ‚Üí {self._map_query_type_to_parameter(query_type)}")
src/gui/main_windowold.py-1533-            
src/gui/main_windowold.py-1534-        except ImportError as e:
src/gui/main_windowold.py:1535:            print(f"‚ùå DEBUG: Multi-City Engine import error: {e}")
src/gui/main_windowold.py-1536-            error_msg = f"Multi-City Engine nem el√©rhet≈ë: {e}"
--
src/gui/main_windowold.py-1540-        except Exception as e:
src/gui/main_windowold.py:1541:            print(f"‚ùå DEBUG: Multi-city request error: {e}")
src/gui/main_windowold.py-1542-            import traceback
--
src/gui/main_windowold.py-1548-        
src/gui/main_windowold.py:1549:        print("üéâ DEBUG: _handle_multi_city_weather_request completed - MULTI-CITY INTEGRATION + WINDSPEED FIX FINISHED!")
src/gui/main_windowold.py-1550-    
--
src/gui/main_windowold.py-1559-        """
src/gui/main_windowold.py:1560:        print(f"üåç DEBUG: _on_provider_selected called: {provider_name}")
src/gui/main_windowold.py-1561-        
--
src/gui/main_windowold.py-1570-        
src/gui/main_windowold.py:1571:        print(f"‚úÖ DEBUG: Provider selection handled: {provider_name}")
src/gui/main_windowold.py-1572-    
--
src/gui/main_windowold.py-1579-        """
src/gui/main_windowold.py:1580:        print(f"üåç DEBUG: _on_provider_usage_updated called: {len(usage_stats)} providers")
src/gui/main_windowold.py-1581-        
--
src/gui/main_windowold.py-1592-        
src/gui/main_windowold.py:1593:        print(f"‚úÖ DEBUG: Provider usage updated")
src/gui/main_windowold.py-1594-    
--
src/gui/main_windowold.py-1602-        """
src/gui/main_windowold.py:1603:        print(f"üåç DEBUG: _on_provider_warning called: {provider_name} {usage_percent}%")
src/gui/main_windowold.py-1604-        
--
src/gui/main_windowold.py-1624-        
src/gui/main_windowold.py:1625:        print(f"‚úÖ DEBUG: Provider warning handled: {provider_name} {usage_percent}%")
src/gui/main_windowold.py-1626-    
--
src/gui/main_windowold.py-1634-        """
src/gui/main_windowold.py:1635:        print(f"üåç DEBUG: _on_provider_fallback called: {from_provider} ‚Üí {to_provider}")
src/gui/main_windowold.py-1636-        
--
src/gui/main_windowold.py-1653-        
src/gui/main_windowold.py:1654:        print(f"‚úÖ DEBUG: Provider fallback handled: {from_provider} ‚Üí {to_provider}")
src/gui/main_windowold.py-1655-    
--
src/gui/main_windowold.py-1679-                
src/gui/main_windowold.py:1680:                print(f"üìà DEBUG: Trend analysis completed - R¬≤: {r_squared:.3f}, Direction: {trend_direction}")
src/gui/main_windowold.py-1681-            
src/gui/main_windowold.py:1682:            print(f"‚úÖ DEBUG: Trend analysis completion handled: {city_name}")
src/gui/main_windowold.py-1683-            
src/gui/main_windowold.py-1684-        except Exception as e:
src/gui/main_windowold.py:1685:            print(f"‚ùå DEBUG: Trend analysis completion handling error: {e}")
src/gui/main_windowold.py-1686-            self._show_error(f"Trend elemz√©s eredm√©ny feldolgoz√°si hiba: {e}")
--
src/gui/main_windowold.py-1694-        """
src/gui/main_windowold.py:1695:        print(f"‚ùå DEBUG: _on_trend_analysis_error called: {error_msg}")
src/gui/main_windowold.py-1696-        
--
src/gui/main_windowold.py-1703-        
src/gui/main_windowold.py:1704:        print(f"‚úÖ DEBUG: Trend analysis error handled: {error_msg}")
src/gui/main_windowold.py-1705-    
--
src/gui/main_windowold.py-1714-        """
src/gui/main_windowold.py:1715:        print("üìä DEBUG: _on_weather_data_received called - DASHBOARD CLEANUP BEFEJEZVE + ANALYTICS REFAKTOR√ÅLT INTEGRATION + DUAL-API")
src/gui/main_windowold.py-1716-        
--
src/gui/main_windowold.py-1721-            
src/gui/main_windowold.py:1722:            print(f"üìä DEBUG: Processing weather data from {data_source} (type: {source_type})")
src/gui/main_windowold.py-1723-            
--
src/gui/main_windowold.py-1731-            
src/gui/main_windowold.py:1732:            print(f"üìä DEBUG: Processing weather data for {city_name_with_source}")
src/gui/main_windowold.py-1733-            
--
src/gui/main_windowold.py-1735-            if self.results_panel:
src/gui/main_windowold.py:1736:                print("üìä DEBUG: Updating results panel...")
src/gui/main_windowold.py-1737-                self.results_panel.update_data(data, city_name_with_source)
--
src/gui/main_windowold.py-1741-            # Controller.weather_data_ready signal miatt (_connect_mvc_signals-ben)
src/gui/main_windowold.py:1742:            print("‚úÖ DEBUG: Analytics panel update automatikus (signal-based)")
src/gui/main_windowold.py-1743-            
--
src/gui/main_windowold.py-1747-            
src/gui/main_windowold.py:1748:            print(f"‚úÖ DEBUG: UI komponensek friss√≠tve DASHBOARD CLEANUP BEFEJEZVE + ANALYTICS REFAKTOR√ÅLT INTEGR√ÅCI√ìVAL + DUAL-API: {city_name_with_source}")
src/gui/main_windowold.py-1749-            
src/gui/main_windowold.py-1750-        except Exception as e:
src/gui/main_windowold.py:1751:            print(f"‚ùå DEBUG: UI friss√≠t√©si hiba: {e}")
src/gui/main_windowold.py-1752-            import traceback
--
src/gui/main_windowold.py-1959-        """
src/gui/main_windowold.py:1960:        print(f"üé® DEBUG: Applying theme through ThemeManager: {theme_type.value}")
src/gui/main_windowold.py-1961-        
--
src/gui/main_windowold.py-1971-            
src/gui/main_windowold.py:1972:            print(f"‚úÖ DEBUG: Theme applied and saved through ThemeManager: {theme_type.value}")
src/gui/main_windowold.py-1973-        else:
src/gui/main_windowold.py:1974:            print(f"‚ùå DEBUG: Theme application failed: {theme_type.value}")
src/gui/main_windowold.py-1975-    
--
src/gui/main_windowold.py-1982-        """
src/gui/main_windowold.py:1983:        print("‚ö†Ô∏è DEBUG: _apply_theme_internal() DEPRECATED - using ThemeManager instead")
src/gui/main_windowold.py-1984-        
--
src/gui/main_windowold.py-1994-        """
src/gui/main_windowold.py:1995:        print("‚ö†Ô∏è DEBUG: _propagate_theme_change() DEPRECATED - ThemeManager handles automatically")
src/gui/main_windowold.py-1996-        
--
src/gui/main_windowold.py-2001-        
src/gui/main_windowold.py:2002:        print(f"‚úÖ DEBUG: Theme propagation complete via ThemeManager: {theme_name}")
src/gui/main_windowold.py-2003-    
--
src/gui/main_windowold.py-2010-        """
src/gui/main_windowold.py:2011:        print(f"üîß DEBUG: Updating splitter theme with ThemeManager colors (dark: {dark_theme})")
src/gui/main_windowold.py-2012-        
--
src/gui/main_windowold.py-2025-                
src/gui/main_windowold.py:2026:                print(f"‚úÖ DEBUG: Splitter theme updated with ThemeManager CSS: {'dark' if dark_theme else 'light'}")
src/gui/main_windowold.py-2027-    
--
src/gui/main_windowold.py-2047-        self._switch_view("single_city")
src/gui/main_windowold.py:2048:        print("üßπ DEBUG: Single City set as default view (Dashboard cleanup befejezve)")
src/gui/main_windowold.py-2049-    
--
src/gui/main_windowold.py-2063-        try:
src/gui/main_windowold.py:2064:            print("üõë DEBUG: ANALYTICS ‚Üí MAP SYNC FIX BEFEJEZVE + ANALYTICS VIEW REFAKTOR√ÅL√ÅS BEFEJEZVE + HIB√ÅS JELZ√âSEK ELT√ÅVOL√çTVA + WINDSPEED METRIC TELJES JAV√çT√ÅS MainWindow closeEvent called")
src/gui/main_windowold.py-2065-            
--
src/gui/main_windowold.py-2067-            if self.analytics_panel:
src/gui/main_windowold.py:2068:                print("üõë DEBUG: Stopping refactored analytics panel...")
src/gui/main_windowold.py-2069-                self.analytics_panel.clear_data()
--
src/gui/main_windowold.py-2072-            if self.trend_analytics_tab:
src/gui/main_windowold.py:2073:                print("üõë DEBUG: Stopping trend analytics tab...")
src/gui/main_windowold.py-2074-                self.trend_analytics_tab.clear_data()
--
src/gui/main_windowold.py-2077-            if self.hungarian_map_tab:
src/gui/main_windowold.py:2078:                print("üõë DEBUG: Stopping hungarian map tab...")
src/gui/main_windowold.py-2079-                # Ha a HungarianMapTab-nak lenne cleanup met√≥dusa, itt h√≠vn√°nk meg
--
src/gui/main_windowold.py-2082-            if self.map_view:
src/gui/main_windowold.py:2083:                print("üõë DEBUG: Stopping map view component...")
src/gui/main_windowold.py-2084-                # Ha a MapView-nak lenne cleanup met√≥dusa, itt h√≠vn√°nk meg
--
src/gui/main_windowold.py-2089-            # Controller le√°ll√≠t√°sa
src/gui/main_windowold.py:2090:            print("üõë DEBUG: Shutting down controller...")
src/gui/main_windowold.py-2091-            self.controller.shutdown()
--
src/gui/main_windowold.py-2095-            
src/gui/main_windowold.py:2096:            print("‚úÖ DEBUG: ANALYTICS ‚Üí MAP SYNC FIX BEFEJEZVE + ANALYTICS VIEW REFAKTOR√ÅL√ÅS BEFEJEZVE + HIB√ÅS JELZ√âSEK ELT√ÅVOL√çTVA + WINDSPEED METRIC TELJES JAV√çT√ÅS MainWindow bez√°rva")
src/gui/main_windowold.py-2097-            
src/gui/main_windowold.py-2098-        except Exception as e:
src/gui/main_windowold.py:2099:            print(f"‚ö†Ô∏è DEBUG: Bez√°r√°si hiba: {e}")
src/gui/main_windowold.py-2100-            import traceback

üéÆ 12. CONTROLLER CONNECTION keres√©se...
148-        
149-        # Worker Manager (a Controller haszn√°lja, de referencia kell a UI-hoz)
150:        self.worker_manager = self.controller.worker_manager
151-        
152-        # === VIEW KOMPONENSEK ===
--
852-            
853-            # Provider info lek√©rdez√©se a Controller-t≈ël
854:            provider_info = self.controller.get_provider_info()
855-            
856-            self.current_provider = provider_info.get('current_provider', 'auto')
--
964-            if hasattr(self.control_panel, 'analysis_requested'):
965-                self.control_panel.analysis_requested.connect(
966:                    self.controller.handle_analysis_request
967-                )
968-                print("‚úÖ CLEAN: ControlPanel.analysis_requested ‚Üí AppController.handle_analysis_request CONNECTED")
--
973-            if hasattr(self.control_panel, 'cancel_requested'):
974-                self.control_panel.cancel_requested.connect(
975:                    self.controller.stop_current_analysis
976-                )
977-                print("‚úÖ CLEAN: ControlPanel.cancel_requested ‚Üí AppController.stop_current_analysis CONNECTED")
--
987-        # Elemz√©s indul√°sa
988-        if hasattr(self.controller, 'analysis_started'):
989:            self.controller.analysis_started.connect(self._on_analysis_started)
990-            print("‚úÖ CLEAN: AppController.analysis_started ‚Üí MainWindow._on_analysis_started CONNECTED")
991-        
992-        # üéØ KRITIKUS: Elemz√©s befejez√©se (SIKER) - V√ÅROS ELEMZ√âS FIX!
993-        if hasattr(self.controller, 'analysis_completed'):
994:            self.controller.analysis_completed.connect(self._on_analysis_completed_with_city_fix)
995-            print("üéØ ‚úÖ KRITIKUS: AppController.analysis_completed ‚Üí MainWindow._on_analysis_completed_with_city_fix CONNECTED (V√ÅROS ELEMZ√âS FIX)!")
996-        
997-        # Elemz√©s hiba
998-        if hasattr(self.controller, 'analysis_failed'):
999:            self.controller.analysis_failed.connect(self._on_analysis_failed)
1000-            print("‚úÖ CLEAN: AppController.analysis_failed ‚Üí MainWindow._on_analysis_failed CONNECTED")
1001-        
1002-        # Elemz√©s megszak√≠tva
1003-        if hasattr(self.controller, 'analysis_cancelled'):
1004:            self.controller.analysis_cancelled.connect(self._on_analysis_cancelled)
1005-            print("‚úÖ CLEAN: AppController.analysis_cancelled ‚Üí MainWindow._on_analysis_cancelled CONNECTED")
1006-        
1007-        # Progress friss√≠t√©sek
1008-        if hasattr(self.controller, 'analysis_progress'):
1009:            self.controller.analysis_progress.connect(self._update_progress_clean)
1010-            print("‚úÖ CLEAN: AppController.analysis_progress ‚Üí MainWindow._update_progress_clean CONNECTED")
1011-        
--
1048-        
1049-        # Provider v√°lt√°s
1050:        self.controller.provider_selected.connect(self._on_provider_selected)
1051-        print("‚úÖ DEBUG: Controller.provider_selected ‚Üí MainWindow._on_provider_selected CONNECTED")
1052-        
1053-        # Usage statistics friss√≠t√©se
1054:        self.controller.provider_usage_updated.connect(self._on_provider_usage_updated)
1055-        print("‚úÖ DEBUG: Controller.provider_usage_updated ‚Üí MainWindow._on_provider_usage_updated CONNECTED")
1056-        
1057-        # Warning events
1058:        self.controller.provider_warning.connect(self._on_provider_warning)
1059-        print("‚úÖ DEBUG: Controller.provider_warning ‚Üí MainWindow._on_provider_warning CONNECTED")
1060-        
1061-        # Fallback notifications
1062:        self.controller.provider_fallback.connect(self._on_provider_fallback)
1063-        print("‚úÖ DEBUG: Controller.provider_fallback ‚Üí MainWindow._on_provider_fallback CONNECTED")
1064-        
--
1628-    def _export_data(self) -> None:
1629-        """Adatok export√°l√°sa men√ºb≈ël."""
1630:        weather_data = self.controller.get_current_weather_data()
1631-        if not weather_data:
1632-            self._show_error("Nincsenek export√°lhat√≥ adatok. El≈ësz√∂r k√©rdezzen le adatokat.")
--
1644-    def _show_extreme_weather(self) -> None:
1645-        """Extr√©m id≈ëj√°r√°si esem√©nyek megjelen√≠t√©se."""
1646:        weather_data = self.controller.get_current_weather_data()
1647:        city_data = self.controller.get_current_city()
1648-        
1649-        if not weather_data or not city_data:
--
1863-            
1864-            # Controller le√°ll√≠t√°sa
1865:            print("üõë DEBUG: Shutting down controller...")
1866:            self.controller.shutdown()
1867-            
1868-            # Esem√©ny elfogad√°sa

‚öôÔ∏è 13. WORKER MANAGER keres√©se...
src/gui/workers/data_fetch_worker.py-902-
src/gui/workers/data_fetch_worker.py-903-
src/gui/workers/data_fetch_worker.py:904:def get_worker_manager_provider_summary(manager: WorkerManager) -> Dict[str, Any]:
src/gui/workers/data_fetch_worker.py-905-    """
src/gui/workers/data_fetch_worker.py-906-    üåç WorkerManager provider √∂sszefoglal√≥ lek√©rdez√©se.
--
src/gui/control_panel.py-92-    local_error_occurred = Signal(str)                    # Error handling
src/gui/control_panel.py-93-    
src/gui/control_panel.py:94:    def __init__(self, worker_manager: WorkerManager, parent: Optional[QWidget] = None):
src/gui/control_panel.py-95-        """
src/gui/control_panel.py-96-        Clean ControlPanel inicializ√°l√°sa.
src/gui/control_panel.py-97-        
src/gui/control_panel.py-98-        Args:
src/gui/control_panel.py:99:            worker_manager: Worker manager (kompatibilit√°s)
src/gui/control_panel.py-100-            parent: Sz√ºl≈ë widget
src/gui/control_panel.py-101-        """
--
src/gui/control_panel.py-103-        
src/gui/control_panel.py-104-        # Dependencies
src/gui/control_panel.py:105:        self.worker_manager = worker_manager
src/gui/control_panel.py-106-        self.city_manager = CityManager()
src/gui/control_panel.py-107-        self.theme_manager = get_theme_manager()
--
src/gui/control_panel.py-346-        
src/gui/control_panel.py-347-        # Worker manager stop
src/gui/control_panel.py:348:        if self.worker_manager:
src/gui/control_panel.py:349:            self.worker_manager.stop_all_workers()
src/gui/control_panel.py-350-        
src/gui/control_panel.py-351-        # UI reset
--
src/gui/main_window.py-148-        
src/gui/main_window.py-149-        # Worker Manager (a Controller haszn√°lja, de referencia kell a UI-hoz)
src/gui/main_window.py:150:        self.worker_manager = self.controller.worker_manager
src/gui/main_window.py-151-        
src/gui/main_window.py-152-        # === VIEW KOMPONENSEK ===
--
src/gui/main_window.py-525-        
src/gui/main_window.py-526-        print("üéõÔ∏è DEBUG: Creating ControlPanel with FINAL OPTIMALIZ√ÅLT size constraints...")
src/gui/main_window.py:527:        self.control_panel = ControlPanel(self.worker_manager)
src/gui/main_window.py-528-        
src/gui/main_window.py-529-        # üé® CONTROL PANEL WIDGET REGISZTR√ÅCI√ì
--
src/gui/app_controller.py-110-        
src/gui/app_controller.py-111-        # WorkerManager k√∂zponti haszn√°lata (meg≈ërizve)
src/gui/app_controller.py:112:        self.worker_manager = WorkerManager()
src/gui/app_controller.py-113-        self._logger.info("üåç WorkerManager created with PROVIDER ROUTING support")
src/gui/app_controller.py-114-        
--
src/gui/app_controller.py-683-        
src/gui/app_controller.py-684-        # Geocoding worker signalok
src/gui/app_controller.py:685:        self.worker_manager.geocoding_completed.connect(self._on_geocoding_completed)
src/gui/app_controller.py-686-        self._logger.info("üîó geocoding_completed signal connected")
src/gui/app_controller.py-687-        
src/gui/app_controller.py-688-        # Weather data worker signalok
src/gui/app_controller.py:689:        self.worker_manager.weather_data_completed.connect(self._on_weather_data_completed)
src/gui/app_controller.py-690-        self._logger.info("üîó weather_data_completed signal connected")
src/gui/app_controller.py-691-        
src/gui/app_controller.py-692-        # √Åltal√°nos worker signalok
src/gui/app_controller.py:693:        self.worker_manager.error_occurred.connect(self._on_worker_error)
src/gui/app_controller.py:694:        self.worker_manager.progress_updated.connect(self.progress_updated.emit)
src/gui/app_controller.py-695-        
src/gui/app_controller.py-696-        self._logger.info("‚úÖ Signal kapcsol√°sok k√©sz")
--
src/gui/app_controller.py-882-            # WorkerManager k√∂zponti haszn√°lata
src/gui/app_controller.py-883-            self._logger.info("üöÄ Starting worker via WorkerManager...")
src/gui/app_controller.py:884:            worker_id = self.worker_manager.start_geocoding(worker)
src/gui/app_controller.py-885-            self._logger.info(f"‚úÖ GeocodingWorker started via WorkerManager with ID: {worker_id}")
src/gui/app_controller.py-886-            
--
src/gui/app_controller.py-1505-            
src/gui/app_controller.py-1506-            # WorkerManager k√∂zponti cancel
src/gui/app_controller.py:1507:            self.worker_manager.cancel_all()
src/gui/app_controller.py-1508-            
src/gui/app_controller.py-1509-            self.status_updated.emit("üõë M≈±veletek megszak√≠tva")
--
src/gui/app_controller.py-1525-            
src/gui/app_controller.py-1526-            # WorkerManager k√∂zponti le√°ll√≠t√°s
src/gui/app_controller.py:1527:            self.worker_manager.shutdown()
src/gui/app_controller.py-1528-            
src/gui/app_controller.py-1529-            # User preferences ment√©se
--
src/gui/main_windowold.py-132-        
src/gui/main_windowold.py-133-        # Worker Manager (a Controller haszn√°lja, de referencia kell a UI-hoz)
src/gui/main_windowold.py:134:        self.worker_manager = self.controller.worker_manager
src/gui/main_windowold.py-135-        
src/gui/main_windowold.py-136-        # === VIEW KOMPONENSEK ===
--
src/gui/main_windowold.py-413-        
src/gui/main_windowold.py-414-        print("üéõÔ∏è DEBUG: Creating ControlPanel with FINAL OPTIMALIZ√ÅLT size constraints...")
src/gui/main_windowold.py:415:        self.control_panel = ControlPanel(self.worker_manager)
src/gui/main_windowold.py-416-        
src/gui/main_windowold.py-417-        # üé® CONTROL PANEL WIDGET REGISZTR√ÅCI√ì

üìä 14. ANALYTICS PANEL REFERENCIA keres√©se...
24-üö® ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çTVA:
25-‚úÖ _handle_analytics_view_query() met√≥dus VISSZA√ÅLL√çTVA!
26:‚úÖ analytics_panel.multi_city_query_requested signal connection VISSZA√ÅLL√çTVA!
27-‚úÖ Analytics View ‚Üí MainWindow ‚Üí AppController ‚Üí AnalysisWorker flow HELYRE√ÅLL√çTVA!
28-‚úÖ Signal chain helyre√°ll√≠tva: AnalyticsView ‚Üí MainWindow ‚Üí MultiCityEngine
--
168-        
169-        # üìä ANALYTICS VIEW KOMPONENS - REFAKTOR√ÅLT!
170:        self.analytics_panel: Optional[AnalyticsView] = None
171-        
172-        # üó∫Ô∏è MAP VIEW KOMPONENS
--
596-        
597-        # Refaktor√°lt AnalyticsView l√©trehoz√°sa
598:        self.analytics_panel = AnalyticsView()  # üîß REFAKTOR√ÅLT VERZI√ì
599-        
600-        # üé® WIDGET REGISZTR√ÅCI√ì
601:        register_widget_for_theming(self.analytics_panel, "container")
602-        
603-        print("‚úÖ DEBUG: REFAKTOR√ÅLT AnalyticsView created with ThemeManager + Signal Integration")
604:        return self.analytics_panel
605-    
606-    def _create_trend_analysis_view(self) -> QWidget:
--
1012-        # === üö® KRITIKUS: ANALYTICS VIEW SIGNAL HANDLING VISSZA√ÅLL√çT√ÅSA ===
1013-        
1014:        if self.analytics_panel:
1015-            print("üö® DEBUG: ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çT√ÅSA...")
1016-            
1017-            # üö® KRITIKUS: Analytics View multi_city_query_requested signal
1018:            if hasattr(self.analytics_panel, 'multi_city_query_requested'):
1019-                def debug_analytics_multi_city_query_requested(query_type: str, region_name: str):
1020-                    print(f"üö® DEBUG [ANALYTICS‚ÜíMAIN_WINDOW]: multi_city_query_requested: {query_type}, {region_name}")
1021-                
1022:                self.analytics_panel.multi_city_query_requested.connect(debug_analytics_multi_city_query_requested)
1023:                self.analytics_panel.multi_city_query_requested.connect(
1024-                    self._handle_analytics_view_query
1025-                )
--
1029-            
1030-            # Analytics tov√°bbi signalok
1031:            if hasattr(self.analytics_panel, 'analysis_started'):
1032:                self.analytics_panel.analysis_started.connect(
1033-                    lambda: self.status_bar.showMessage("üìä Analytics elemz√©s folyamatban...")
1034-                )
1035-                print("‚úÖ DEBUG: AnalyticsView.analysis_started signal connected")
1036-            
1037:            if hasattr(self.analytics_panel, 'error_occurred'):
1038:                self.analytics_panel.error_occurred.connect(
1039-                    lambda msg: self.status_bar.showMessage(f"‚ùå Analytics hiba: {msg}")
1040-                )
--
1260-
1261-            # Eredm√©ny k√ºld√©se az Analitika n√©zetnek
1262:            if self.analytics_panel and hasattr(self.analytics_panel, 'update_with_multi_city_result'):
1263:                self.analytics_panel.update_with_multi_city_result(result)
1264-                print("  -> Eredm√©ny elk√ºldve az AnalyticsView-nak.")
1265-                
--
1365-                
1366-                # üéØ KRITIKUS FIX: ANALYTICS PANEL AUTOMATIKUS FRISS√çT√âSE - EZ A HI√ÅNYZ√ì LINK!
1367:                if self.analytics_panel and weather_data:
1368-                    print("üéØ KRITIKUS: Updating AnalyticsView with single city data - EZ A HI√ÅNYZ√ì KAPCSOLAT!")
1369-                    try:
1370-                        # Location inform√°ci√≥ hozz√°ad√°sa ha el√©rhet≈ë
1371-                        if location_data:
1372:                            self.analytics_panel.on_location_changed(location_data)
1373-                        
1374-                        # Weather data friss√≠t√©se - EZ A KULCS!
1375:                        self.analytics_panel.update_data(weather_data)
1376-                        print("‚úÖ KRITIKUS: AnalyticsView updated successfully - V√ÅROS ELEMZ√âS ADATFOLYAM JAV√çTVA!")
1377-                    except Exception as e:
--
1380-                        traceback.print_exc()
1381-                else:
1382:                    print(f"‚ùå KRITIKUS: AnalyticsView update skipped - analytics_panel: {self.analytics_panel is not None}, weather_data: {bool(weather_data)}")
1383-            
1384-            elif analysis_type == "multi_city":
--
1401-                    
1402-                    # Analytics view friss√≠t√©se
1403:                    if self.analytics_panel:
1404-                        print("üìä DEBUG: Updating AnalyticsView with multi-city result...")
1405:                        if hasattr(self.analytics_panel, 'update_with_multi_city_result'):
1406:                            self.analytics_panel.update_with_multi_city_result(analytics_result)
1407-            
1408-            elif analysis_type == "trend_analysis":
--
1671-        <p><i>üö® ANALYTICS SIGNAL HANDLING VISSZA√ÅLL√çTVA!</i></p>
1672-        <p><i>‚úÖ _handle_analytics_view_query() met√≥dus VISSZA√ÅLL√çTVA!</i></p>
1673:        <p><i>‚úÖ analytics_panel.multi_city_query_requested signal connection VISSZA√ÅLL√çTVA!</i></p>
1674-        <p><i>‚úÖ Analytics View ‚Üí MainWindow ‚Üí AppController ‚Üí AnalysisWorker flow HELYRE√ÅLL√çTVA!</i></p>
1675-        <p><i>‚úÖ Signal chain helyre√°ll√≠tva: AnalyticsView ‚Üí MainWindow ‚Üí MultiCityEngine</i></p>
--
1840-            
1841-            # Analytics panel le√°ll√≠t√°sa (REFAKTOR√ÅLT)
1842:            if self.analytics_panel:
1843-                print("üõë DEBUG: Stopping refactored analytics panel...")
1844:                self.analytics_panel.clear_data()
1845-            
1846-            # Trend analytics tab le√°ll√≠t√°sa
--
1891-        return ["single_city", "analytics", "trend_analysis", "map_view", "settings"]
1892-    
1893:    def get_analytics_panel(self) -> Optional[AnalyticsView]:
1894-        """
1895-        üìä Analytics panel referencia lek√©rdez√©se - REFAKTOR√ÅLT FUNKCI√ì.
--
1898-            AnalyticsView refaktor√°lt p√©ld√°ny vagy None
1899-        """
1900:        return self.analytics_panel
1901-    
1902:    def focus_analytics_panel(self) -> None:
1903-        """
1904-        üìä Analytics panel f√≥kuszba helyez√©se - REFAKTOR√ÅLT FUNKCI√ì.

üì¶ 15. IMPORT HIB√ÅK keres√©se...
src/gui/workers/analysis_worker.py:36:    from ...analytics.multi_city_engine import MultiCityEngine
src/gui/workers/analysis_worker.py:53:        from src.analytics.multi_city_engine import MultiCityEngine
src/gui/hungarian_map_tab.py:57:from ..analytics.multi_city_engine import MultiCityEngine
src/gui/hungarian_map_tab.py:614:        self._generate_weather_overlay_from_analytics(analytics_result)
src/gui/hungarian_map_tab.py:1107:                self._generate_weather_overlay_from_analytics(self.current_analytics_result)
src/gui/hungarian_map_tab.py:1221:                self._generate_weather_overlay_from_analytics(self.current_analytics_result)
src/gui/hungarian_map_tab.py:1462:        self._generate_weather_overlay_from_analytics(self.current_analytics_result)
src/gui/hungarian_map_tab.py:1464:    def _generate_weather_overlay_from_analytics(self, analytics_result: AnalyticsResult):
src/gui/hungarian_map_tab.py:1478:            print(f"üîÑ DEBUG: Generating weather overlay from analytics result...")
src/gui/hungarian_map_tab.py:1544:    def load_weather_data_from_analytics(self, question_type: str, region: str = "HU", limit: int = 50):
src/gui/hungarian_map_tab.py:1843:            self._generate_weather_overlay_from_analytics(self.current_analytics_result)
src/gui/hungarian_map_tab.py:2154:        map_tab.load_weather_data_from_analytics("hottest_today", "HU", 20)
src/gui/hungarian_map_tab.py:2159:        map_tab.load_weather_data_from_analytics("coldest_today", "HU", 20)
src/gui/hungarian_map_tab.py:2164:        map_tab.load_weather_data_from_analytics("wettest_today", "HU", 20)
src/gui/hungarian_map_tab.py:2169:        map_tab.load_weather_data_from_analytics("windiest_today", "HU", 20)
src/gui/weather_data_bridge.py:399:    def create_multiple_overlays_from_analytics(self, analytics_results: List[AnalyticsResult]) -> Dict[str, WeatherOverlayData]:
src/gui/analytics_view.py:57:    from ..analytics.multi_city_engine import MultiCityEngine, MultiCityQuery
src/gui/analytics_view.py:1076:    def _create_fake_single_city_data_from_multi_city(self, analytics_result):
src/gui/analytics_view.py:1157:            fake_records = self._create_fake_records_from_multi_city(analytics_result)
src/gui/analytics_view.py:1166:    def _create_fake_records_from_multi_city(self, analytics_result) -> Dict[str, Dict[str, str]]:
src/gui/main_window.py:67:from .analytics_view import AnalyticsView
src/gui/main_window.py:69:from .trend_analytics_tab import TrendAnalyticsTab
src/gui/main_window.py:74:    from ..analytics.hungarian_counties_integration import HungarianCountiesLoader, integrate_hungarian_counties_to_app
src/gui/main_window.py:1160:            from src.analytics.multi_city_engine import MultiCityEngine
src/gui/main_windowold.py:78:from .analytics_view import AnalyticsView
src/gui/main_windowold.py:80:from .trend_analytics_tab import TrendAnalyticsTab
src/gui/main_windowold.py:1477:            from src.analytics.multi_city_engine import MultiCityEngine


üéØ === K√ñVETKEZ≈ê L√âP√âSEK ===
1. Futtasd le ezeket a grep parancsokat
2. N√©zd meg melyik l√©p√©sn√©l szakad meg a signal chain
3. Ellen≈ërizd hogy a signal connection √©s emit parancsok helyesek-e
4. Keress hi√°nyz√≥ import-okat vagy met√≥dus defin√≠ci√≥kat

üîç === EXTRA DEBUG PARANCSOK ===
üéÆ APP CONTROLLER Analysis keres√©se...
27-from ..config import DATA_DIR, APIConfig, ProviderConfig, UserPreferences, UsageTracker
28-from .workers.data_fetch_worker import WorkerManager, GeocodingWorker, WeatherDataWorker
29-from .workers.analysis_worker import AnalysisWorker
30-
31-
32:class AppController(QObject):
33-    """
34-    üéØ CLEAN ARCHITECTURE CONTROLLER - K√∂zponti logikai agy
35-    
36-    FELEL≈êSS√âGEK:
37-    - Analysis request routing (single/multi-city/county)
38-    - Worker lifecycle management (create/start/stop/cleanup)
39-    - Provider selection √©s fallback strategies
40-    - Signal orchestration (UI ‚Üî Controller ‚Üî Analytics)
41-    - State management (current selections, active workers)
42-    
43-    üåç PROVIDER ROUTING FUNKCI√ìK:
44-    ‚úÖ Smart provider selection (Open-Meteo vs Meteostat)
45-    ‚úÖ User preference override support
46-    ‚úÖ Usage tracking √©s cost monitoring
47-    ‚úÖ Provider fallback strategies
48-    ‚úÖ Wind gusts t√°mogat√°s minden providern√©l
49-    
50-    üîß KOORDIN√ÅTA KULCSOK KOMPATIBILIT√ÅS:
51-    ‚úÖ 'lat'/'lon' √âS 'latitude'/'longitude' kulcsok t√°mogat√°sa
52-    ‚úÖ ControlPanel ‚Üî AppController kompatibilit√°s jav√≠tva

‚öôÔ∏è ANALYSIS WORKER oszt√°ly keres√©se...
src/gui/workers/analysis_worker.py:67:class AnalysisWorker(QThread):
src/gui/workers/analysis_worker.py-68-    """
src/gui/workers/analysis_worker.py-69-    H√ÅTT√âRSZ√ÅL WORKER - UI Thread Felszabad√≠t√°sa
src/gui/workers/analysis_worker.py-70-    
src/gui/workers/analysis_worker.py-71-    JELZ√âSEK:
src/gui/workers/analysis_worker.py-72-    - progress_updated(str, int): Progress sz√∂veg + sz√°zal√©k
src/gui/workers/analysis_worker.py-73-    - analysis_completed(dict): Sikeres elemz√©s eredm√©nye
src/gui/workers/analysis_worker.py-74-    - analysis_failed(str): Hiba √ºzenet
src/gui/workers/analysis_worker.py-75-    - analysis_cancelled(): Megszak√≠t√°s meger≈ës√≠t√©se
src/gui/workers/analysis_worker.py-76-    
src/gui/workers/analysis_worker.py-77-    INTERRUPT T√ÅMOGAT√ÅS:
--
src/gui/workers/analysis_worker.py:496:    class WorkerTestWindow(QMainWindow):
src/gui/workers/analysis_worker.py-497-        def __init__(self):
src/gui/workers/analysis_worker.py-498-            super().__init__()
src/gui/workers/analysis_worker.py-499-            self.setWindowTitle("AnalysisWorker Test (ABSOLUTE PATH FIX v4.6.1)")
src/gui/workers/analysis_worker.py-500-            self.setGeometry(100, 100, 600, 400)
src/gui/workers/analysis_worker.py-501-            
src/gui/workers/analysis_worker.py-502-            # UI Setup
src/gui/workers/analysis_worker.py-503-            central_widget = QWidget()
src/gui/workers/analysis_worker.py-504-            self.setCentralWidget(central_widget)
src/gui/workers/analysis_worker.py-505-            layout = QVBoxLayout(central_widget)
src/gui/workers/analysis_worker.py-506-            
--
src/gui/workers/data_fetch_worker.py:39:class BaseWorkerThread(QThread):
src/gui/workers/data_fetch_worker.py-40-    """
src/gui/workers/data_fetch_worker.py-41-    Base worker thread class k√∂z√∂s hibakezel√©ssel √©s signalokkal.
src/gui/workers/data_fetch_worker.py-42-    Professzion√°lis thread lifecycle management.
src/gui/workers/data_fetch_worker.py-43-    """
src/gui/workers/data_fetch_worker.py-44-    
src/gui/workers/data_fetch_worker.py-45-    # K√∂z√∂s signalok minden worker sz√°m√°ra
src/gui/workers/data_fetch_worker.py-46-    finished = Signal()
src/gui/workers/data_fetch_worker.py-47-    error_occurred = Signal(str)
src/gui/workers/data_fetch_worker.py-48-    progress_updated = Signal(int)  # 0-100 sz√°zal√©k
src/gui/workers/data_fetch_worker.py-49-    
--
src/gui/workers/data_fetch_worker.py:79:class GeocodingWorker(BaseWorkerThread):
src/gui/workers/data_fetch_worker.py-80-    """
src/gui/workers/data_fetch_worker.py-81-    Geocoding API lek√©rdez√©st v√©gz≈ë worker.
src/gui/workers/data_fetch_worker.py-82-    Telep√ºl√©sek keres√©se koordin√°t√°k lek√©rdez√©s√©hez.
src/gui/workers/data_fetch_worker.py-83-    Professzion√°lis hibakezel√©s √©s timeout management.
src/gui/workers/data_fetch_worker.py-84-    """
src/gui/workers/data_fetch_worker.py-85-    
src/gui/workers/data_fetch_worker.py-86-    # Specifikus signalok
src/gui/workers/data_fetch_worker.py-87-    geocoding_completed = Signal(list)  # List[Dict] - tal√°latok
src/gui/workers/data_fetch_worker.py-88-    
src/gui/workers/data_fetch_worker.py-89-    def __init__(self, search_query: str, parent: Optional[QObject] = None):
--
src/gui/workers/data_fetch_worker.py:145:class WeatherDataWorker(BaseWorkerThread):
src/gui/workers/data_fetch_worker.py-146-    """
src/gui/workers/data_fetch_worker.py-147-    üåç PROVIDER ROUTING + üå™Ô∏è WIND GUSTS: Open-Meteo id≈ëj√°r√°si adatok lek√©rdez√©s 
src/gui/workers/data_fetch_worker.py-148-    provider routing t√°mogat√°ssal √©s wind gusts funkcionalit√°ssal.
src/gui/workers/data_fetch_worker.py-149-    
src/gui/workers/data_fetch_worker.py-150-    √öJ PROVIDER FUNKCI√ìK:
src/gui/workers/data_fetch_worker.py-151-    ‚úÖ Provider parameter t√°mogat√°s
src/gui/workers/data_fetch_worker.py-152-    ‚úÖ Provider validation & fallback logic
src/gui/workers/data_fetch_worker.py-153-    ‚úÖ Provider change signal emission
src/gui/workers/data_fetch_worker.py-154-    ‚úÖ API endpoint dinamikus v√°laszt√°s
src/gui/workers/data_fetch_worker.py-155-    
--
src/gui/workers/data_fetch_worker.py:440:class SQLQueryWorker(BaseWorkerThread):
src/gui/workers/data_fetch_worker.py-441-    """
src/gui/workers/data_fetch_worker.py-442-    SQL lek√©rdez√©seket v√©gz≈ë worker thread SQLite adatb√°zishoz.
src/gui/workers/data_fetch_worker.py-443-    SQL injection v√©delem √©s professzion√°lis adatb√°zis kezel√©s.
src/gui/workers/data_fetch_worker.py-444-    """
src/gui/workers/data_fetch_worker.py-445-    
src/gui/workers/data_fetch_worker.py-446-    # Specifikus signalok
src/gui/workers/data_fetch_worker.py-447-    query_completed = Signal(object)  # pandas DataFrame vagy list
src/gui/workers/data_fetch_worker.py-448-    
src/gui/workers/data_fetch_worker.py-449-    def __init__(self, query: str, db_path: Union[str, Path], 
src/gui/workers/data_fetch_worker.py-450-                 parent: Optional[QObject] = None):
--
src/gui/workers/data_fetch_worker.py:521:class WorkerManager(QObject):
src/gui/workers/data_fetch_worker.py-522-    """
src/gui/workers/data_fetch_worker.py-523-    üåç PROVIDER ROUTING + üå™Ô∏è WIND GUSTS: Worker threadek k√∂zponti kezel≈ëje 
src/gui/workers/data_fetch_worker.py-524-    provider routing t√°mogat√°ssal √©s wind gusts funkcionalit√°ssal.
src/gui/workers/data_fetch_worker.py-525-    
src/gui/workers/data_fetch_worker.py-526-    √öJ PROVIDER FUNKCI√ìK:
src/gui/workers/data_fetch_worker.py-527-    ‚úÖ Provider state tracking
src/gui/workers/data_fetch_worker.py-528-    ‚úÖ Provider fallback coordination
src/gui/workers/data_fetch_worker.py-529-    ‚úÖ Signal routing app_controller-hez
src/gui/workers/data_fetch_worker.py-530-    ‚úÖ Provider usage monitoring
src/gui/workers/data_fetch_worker.py-531-    """

üì° SIGNAL DEFINITION keres√©se...
src/gui/map_visualizer.py-125-    # Signalok
src/gui/map_visualizer.py:126:    server_ready = Signal(str, int)  # host, port
src/gui/map_visualizer.py:127:    server_error = Signal(str)       # error message
src/gui/map_visualizer.py-128-    
--
src/gui/map_visualizer.py-189-    # Signalok JavaScript esem√©nyekhez
src/gui/map_visualizer.py:190:    county_clicked = Signal(str)              # county_name
src/gui/map_visualizer.py:191:    coordinates_clicked = Signal(float, float) # lat, lon
src/gui/map_visualizer.py:192:    map_moved = Signal(float, float, int)     # lat, lon, zoom
src/gui/map_visualizer.py:193:    county_hovered = Signal(str)              # county_name
src/gui/map_visualizer.py:194:    county_unhovered = Signal()               # hover v√©ge
src/gui/map_visualizer.py-195-    
--
src/gui/map_visualizer.py-237-    # Signalok
src/gui/map_visualizer.py:238:    progress_updated = Signal(int)         # progress (0-100)
src/gui/map_visualizer.py:239:    map_generated = Signal(str)           # HTML FILE PATH (nem content!)
src/gui/map_visualizer.py:240:    error_occurred = Signal(str)          # error message
src/gui/map_visualizer.py:241:    status_updated = Signal(str)          # status message
src/gui/map_visualizer.py-242-    
--
src/gui/map_visualizer.py-1048-    # Signalok
src/gui/map_visualizer.py:1049:    map_ready = Signal()                           # t√©rk√©p k√©sz
src/gui/map_visualizer.py:1050:    county_clicked = Signal(str)                   # megye n√©v
src/gui/map_visualizer.py:1051:    coordinates_clicked = Signal(float, float)     # lat, lon
src/gui/map_visualizer.py:1052:    map_moved = Signal(float, float, int)          # lat, lon, zoom
src/gui/map_visualizer.py:1053:    county_hovered = Signal(str)                   # megye hover
src/gui/map_visualizer.py:1054:    export_completed = Signal(str)                 # f√°jl √∫tvonal
src/gui/map_visualizer.py:1055:    error_occurred = Signal(str)                   # hiba √ºzenet
src/gui/map_visualizer.py:1056:    bounds_changed = Signal(object)                # t√©rk√©p hat√°r v√°ltoz√°s
src/gui/map_visualizer.py-1057-    
--
src/gui/workers/analysis_worker.py-83-    # === WORKER SIGNALS ===
src/gui/workers/analysis_worker.py:84:    progress_updated = Signal(str, int)    # (sz√∂veg, sz√°zal√©k)
src/gui/workers/analysis_worker.py:85:    analysis_completed = Signal(dict)      # Eredm√©ny dictionary
src/gui/workers/analysis_worker.py:86:    analysis_failed = Signal(str)          # Hiba √ºzenet
src/gui/workers/analysis_worker.py:87:    analysis_cancelled = Signal()          # Megszak√≠t√°s meger≈ës√≠t√©se
src/gui/workers/analysis_worker.py-88-    
--
src/gui/workers/data_fetch_worker.py-45-    # K√∂z√∂s signalok minden worker sz√°m√°ra
src/gui/workers/data_fetch_worker.py:46:    finished = Signal()
src/gui/workers/data_fetch_worker.py:47:    error_occurred = Signal(str)
src/gui/workers/data_fetch_worker.py:48:    progress_updated = Signal(int)  # 0-100 sz√°zal√©k
src/gui/workers/data_fetch_worker.py-49-    
--
src/gui/workers/data_fetch_worker.py-86-    # Specifikus signalok
src/gui/workers/data_fetch_worker.py:87:    geocoding_completed = Signal(list)  # List[Dict] - tal√°latok
src/gui/workers/data_fetch_worker.py-88-    
--
src/gui/workers/data_fetch_worker.py-163-    # Specifikus signalok
src/gui/workers/data_fetch_worker.py:164:    weather_data_completed = Signal(dict)  # API v√°lasz dictionary
src/gui/workers/data_fetch_worker.py-165-    
src/gui/workers/data_fetch_worker.py-166-    # üåç √öJ: Provider routing signalok
src/gui/workers/data_fetch_worker.py:167:    provider_changed = Signal(str)  # √öj provider n√©v
src/gui/workers/data_fetch_worker.py:168:    provider_fallback_occurred = Signal(str, str)  # eredeti, fallback provider
src/gui/workers/data_fetch_worker.py:169:    provider_validation_failed = Signal(str, str)  # provider, error message
src/gui/workers/data_fetch_worker.py-170-    
--
src/gui/workers/data_fetch_worker.py-446-    # Specifikus signalok
src/gui/workers/data_fetch_worker.py:447:    query_completed = Signal(object)  # pandas DataFrame vagy list
src/gui/workers/data_fetch_worker.py-448-    
--
src/gui/workers/data_fetch_worker.py-533-    # K√∂zponti signalok
src/gui/workers/data_fetch_worker.py:534:    error_occurred = Signal(str)
src/gui/workers/data_fetch_worker.py:535:    progress_updated = Signal(str, int)  # worker_type, progress
src/gui/workers/data_fetch_worker.py:536:    worker_started = Signal(str)         # worker_type
src/gui/workers/data_fetch_worker.py:537:    worker_finished = Signal(str)        # worker_type
src/gui/workers/data_fetch_worker.py-538-    
src/gui/workers/data_fetch_worker.py-539-    # Specifikus worker signalok
src/gui/workers/data_fetch_worker.py:540:    geocoding_completed = Signal(list)
src/gui/workers/data_fetch_worker.py:541:    weather_data_completed = Signal(dict)  # üå™Ô∏è Wind gusts data t√°mogat√°s
src/gui/workers/data_fetch_worker.py:542:    sql_query_completed = Signal(object)
src/gui/workers/data_fetch_worker.py-543-    
src/gui/workers/data_fetch_worker.py-544-    # üåç √öJ: Provider routing signalok
src/gui/workers/data_fetch_worker.py:545:    provider_changed = Signal(str)  # √öj provider n√©v
src/gui/workers/data_fetch_worker.py:546:    provider_fallback_occurred = Signal(str, str)  # eredeti, fallback provider
src/gui/workers/data_fetch_worker.py:547:    provider_validation_failed = Signal(str, str)  # provider, error message
src/gui/workers/data_fetch_worker.py:548:    provider_usage_tracked = Signal(str, bool)  # provider, success
src/gui/workers/data_fetch_worker.py-549-    
--
src/gui/universal_location_selector.py-118-    # Signalok
src/gui/universal_location_selector.py:119:    search_requested = Signal(str)
src/gui/universal_location_selector.py:120:    city_selected = Signal(str, float, float, dict)
src/gui/universal_location_selector.py:121:    location_changed = Signal(object)
src/gui/universal_location_selector.py-122-    
--
src/gui/map_view.py-50-    # Forwarded signalok a HungarianMapTab-b√≥l (Folium verzi√≥)
src/gui/map_view.py:51:    location_selected = Signal(object)        # Location data
src/gui/map_view.py:52:    county_clicked_on_map = Signal(str)       # Folium county click
src/gui/map_view.py:53:    map_interaction = Signal(str, object)     # interaction_type, data
src/gui/map_view.py:54:    export_completed = Signal(str)           # file_path
src/gui/map_view.py:55:    error_occurred = Signal(str)             # error_message
src/gui/map_view.py:56:    data_loading_completed = Signal()        # adatok bet√∂ltve
src/gui/map_view.py:57:    folium_ready = Signal()                  # Folium t√©rk√©p k√©sz
src/gui/map_view.py-58-    
--
src/gui/chart_container.py-74-    # Signalok
src/gui/chart_container.py:75:    chart_exported = Signal(str, bool)  # filepath, success
src/gui/chart_container.py:76:    chart_settings_changed = Signal(dict)  # settings dict
src/gui/chart_container.py-77-    
--
src/gui/trend_analytics_tab.py-101-    # Signals for communication
src/gui/trend_analytics_tab.py:102:    progress_updated = Signal(int)  # Progress percentage
src/gui/trend_analytics_tab.py:103:    data_received = Signal(dict)    # Processed trend data
src/gui/trend_analytics_tab.py:104:    error_occurred = Signal(str)    # Error message
src/gui/trend_analytics_tab.py-105-    
--
src/gui/trend_analytics_tab.py-1055-    # Signals
src/gui/trend_analytics_tab.py:1056:    progress_updated = Signal(int)
src/gui/trend_analytics_tab.py:1057:    data_received = Signal(dict)
src/gui/trend_analytics_tab.py:1058:    error_occurred = Signal(str)
src/gui/trend_analytics_tab.py:1059:    finished = Signal()
src/gui/trend_analytics_tab.py-1060-    
--
src/gui/trend_analytics_tab.py-1124-    # Signals for main window communication
src/gui/trend_analytics_tab.py:1125:    analysis_started = Signal()
src/gui/trend_analytics_tab.py:1126:    analysis_completed = Signal(dict)
src/gui/trend_analytics_tab.py:1127:    error_occurred = Signal(str)
src/gui/trend_analytics_tab.py:1128:    location_selected = Signal(str, float, float)  # name, lat, lon
src/gui/trend_analytics_tab.py-1129-    
--
src/gui/hungarian_location_selector.py-78-    # Signalok
src/gui/hungarian_location_selector.py:79:    progress_updated = Signal(int)           # progress (0-100)
src/gui/hungarian_location_selector.py:80:    counties_loaded = Signal(object)        # GeoDataFrame
src/gui/hungarian_location_selector.py:81:    postal_codes_loaded = Signal(object)    # GeoDataFrame  
src/gui/hungarian_location_selector.py:82:    error_occurred = Signal(str)            # error message
src/gui/hungarian_location_selector.py:83:    completed = Signal()                    # √∂sszes adat bet√∂ltve
src/gui/hungarian_location_selector.py-84-    
--
src/gui/hungarian_location_selector.py-156-    # Signalok
src/gui/hungarian_location_selector.py:157:    region_selected = Signal(object)        # HungarianRegionData
src/gui/hungarian_location_selector.py:158:    county_selected = Signal(str, object)   # county_name, geometry
src/gui/hungarian_location_selector.py:159:    location_selected = Signal(object)     # Location object
src/gui/hungarian_location_selector.py:160:    selection_changed = Signal()           # √°ltal√°nos v√°ltoz√°s
src/gui/hungarian_location_selector.py:161:    map_update_requested = Signal(object)  # map bounds/center
src/gui/hungarian_location_selector.py-162-    
--
src/gui/hungarian_map_tab.py-105-    # Signalok
src/gui/hungarian_map_tab.py:106:    location_selected = Signal(object)        # Location data kiv√°lasztva
src/gui/hungarian_map_tab.py:107:    county_clicked_on_map = Signal(str)       # Megye kattintva Folium t√©rk√©pen
src/gui/hungarian_map_tab.py:108:    map_interaction = Signal(str, object)     # T√©rk√©p interakci√≥ (type, data)
src/gui/hungarian_map_tab.py:109:    export_completed = Signal(str)           # Export f√°jl √∫tvonal
src/gui/hungarian_map_tab.py:110:    error_occurred = Signal(str)             # Hiba √ºzenet
src/gui/hungarian_map_tab.py:111:    data_loading_started = Signal()          # Adatok bet√∂lt√©se kezd≈ëd√∂tt
src/gui/hungarian_map_tab.py:112:    data_loading_completed = Signal()        # Adatok bet√∂lt√©se befejezve
src/gui/hungarian_map_tab.py:113:    folium_ready = Signal()                  # Folium t√©rk√©p bet√∂ltve
src/gui/hungarian_map_tab.py:114:    weather_data_updated = Signal(object)    # üå§Ô∏è Weather overlay friss√≠tve
src/gui/hungarian_map_tab.py:115:    analytics_sync_completed = Signal(str)   # üöÄ √öJ: Analytics sync befejezve
src/gui/hungarian_map_tab.py-116-    
--
src/gui/results_panel/results_panel.py-57-    # === KIMEN≈ê SIGNALOK ===
src/gui/results_panel/results_panel.py:58:    extreme_weather_requested = Signal()
src/gui/results_panel/results_panel.py:59:    export_requested = Signal(str)
src/gui/results_panel/results_panel.py:60:    chart_type_changed = Signal(str)
src/gui/results_panel/results_panel.py-61-    
--
src/gui/results_panel/extreme_events_tab.py-55-    
src/gui/results_panel/extreme_events_tab.py:56:    extreme_weather_requested = Signal()
src/gui/results_panel/extreme_events_tab.py-57-    
--
src/gui/hungarian_city_selector.py-178-    # Signalok
src/gui/hungarian_city_selector.py:179:    city_selected = Signal(str, float, float, dict)      # name, lat, lon, metadata
src/gui/hungarian_city_selector.py:180:    region_selected = Signal(str, list)                  # region_name, cities
src/gui/hungarian_city_selector.py:181:    search_completed = Signal(int)                       # results_count
src/gui/hungarian_city_selector.py:182:    data_loaded = Signal(int)                           # cities_count
src/gui/hungarian_city_selector.py:183:    error_occurred = Signal(str)                        # error_message
src/gui/hungarian_city_selector.py-184-    
--
src/gui/analytics_view.py-676-    # Signalok
src/gui/analytics_view.py:677:    analysis_started = Signal()
src/gui/analytics_view.py:678:    analysis_completed = Signal()
src/gui/analytics_view.py:679:    error_occurred = Signal(str)
src/gui/analytics_view.py-680-    
src/gui/analytics_view.py-681-    # üöÄ √öJ: Signal a lek√©rdez√©s ind√≠t√°s√°hoz a MainWindow fel√©
src/gui/analytics_view.py:682:    multi_city_query_requested = Signal(str, str)  # query_type, region_name
src/gui/analytics_view.py-683-    
--
src/gui/panel_widgets/query_control_widget.py-33-    # === CLEAN INTERFACE SIGNALS ===
src/gui/panel_widgets/query_control_widget.py:34:    fetch_requested = Signal()     # Egyszer≈± jelz√©s: "Ind√≠tsuk el!"
src/gui/panel_widgets/query_control_widget.py:35:    cancel_requested = Signal()    # Egyszer≈± jelz√©s: "√Åll√≠tsuk le!"
src/gui/panel_widgets/query_control_widget.py-36-    
--
src/gui/panel_widgets/provider_widget.py-49-    # Signals
src/gui/panel_widgets/provider_widget.py:50:    provider_changed = Signal(str)  # provider_name
src/gui/panel_widgets/provider_widget.py:51:    usage_warning = Signal(str, int)  # provider_name, usage_percent
src/gui/panel_widgets/provider_widget.py:52:    cost_warning = Signal(str, float)  # provider_name, estimated_cost
src/gui/panel_widgets/provider_widget.py-53-    
--
src/gui/panel_widgets/date_range_widget.py-38-    Interface:
src/gui/panel_widgets/date_range_widget.py:39:    - date_range_changed = Signal(str, str) - start_date, end_date
src/gui/panel_widgets/date_range_widget.py:40:    - date_mode_changed = Signal(str) - "time_range" vagy "manual_dates"
src/gui/panel_widgets/date_range_widget.py-41-    - get_state() -> dict - aktu√°lis √°llapot
--
src/gui/panel_widgets/date_range_widget.py-46-    # === KIMEN≈ê SIGNALOK ===
src/gui/panel_widgets/date_range_widget.py:47:    date_range_changed = Signal(str, str)  # start_date, end_date (ISO format)
src/gui/panel_widgets/date_range_widget.py:48:    date_mode_changed = Signal(str)  # "time_range" vagy "manual_dates"
src/gui/panel_widgets/date_range_widget.py-49-    
--
src/gui/panel_widgets/api_settings_widget.py-35-    Interface:
src/gui/panel_widgets/api_settings_widget.py:36:    - api_settings_changed = Signal(dict) - settings v√°ltoz√°s
src/gui/panel_widgets/api_settings_widget.py-37-    - get_state() -> dict - aktu√°lis √°llapot
--
src/gui/panel_widgets/api_settings_widget.py-42-    # === KIMEN≈ê SIGNALOK ===
src/gui/panel_widgets/api_settings_widget.py:43:    api_settings_changed = Signal(dict)  # settings dict
src/gui/panel_widgets/api_settings_widget.py-44-    
--
src/gui/panel_widgets/multi_city_widget.py-38-    Interface:
src/gui/panel_widgets/multi_city_widget.py:39:    - selection_changed = Signal(dict) - kiv√°laszt√°s v√°ltoz√°s
src/gui/panel_widgets/multi_city_widget.py-40-    - get_state() -> dict - aktu√°lis √°llapot
--
src/gui/panel_widgets/multi_city_widget.py-46-    # === KIMEN≈ê SIGNAL ===
src/gui/panel_widgets/multi_city_widget.py:47:    selection_changed = Signal(dict)  # {"mode": "region", "selected": "K√∂z√©p-Magyarorsz√°g", "is_valid": True}
src/gui/panel_widgets/multi_city_widget.py-48-    
--
src/gui/panel_widgets/location_widget.py-39-    Interface:
src/gui/panel_widgets/location_widget.py:40:    - search_requested = Signal(str) - keres√©si k√©r√©s
src/gui/panel_widgets/location_widget.py:41:    - location_changed = Signal(object) - UniversalLocation v√°ltoz√°s
src/gui/panel_widgets/location_widget.py:42:    - city_selected = Signal(str, float, float, dict) - compatibility signal
src/gui/panel_widgets/location_widget.py-43-    - get_state() -> dict - aktu√°lis √°llapot
--
src/gui/panel_widgets/location_widget.py-48-    # === KIMEN≈ê SIGNALOK ===
src/gui/panel_widgets/location_widget.py:49:    search_requested = Signal(str)  # search_query
src/gui/panel_widgets/location_widget.py:50:    location_changed = Signal(object)  # UniversalLocation object
src/gui/panel_widgets/location_widget.py:51:    city_selected = Signal(str, float, float, dict)  # name, lat, lon, metadata (compatibility)
src/gui/panel_widgets/location_widget.py-52-    
--
src/gui/panel_widgets/analysis_type_widget.py-33-    Interface:
src/gui/panel_widgets/analysis_type_widget.py:34:    - analysis_type_changed = Signal(str) - kimen≈ë signal
src/gui/panel_widgets/analysis_type_widget.py-35-    - get_state() -> dict - aktu√°lis √°llapot lek√©rdez√©se  
--
src/gui/panel_widgets/analysis_type_widget.py-40-    # === KIMEN≈ê SIGNAL ===
src/gui/panel_widgets/analysis_type_widget.py:41:    analysis_type_changed = Signal(str)  # "single_location", "region", "county"
src/gui/panel_widgets/analysis_type_widget.py-42-    
--
src/gui/control_panel.py-9-- Single Responsibility: Widget aggreg√°ci√≥ √©s egyetlen signal routing
src/gui/control_panel.py:10:- Signal Aggregation: CSAK analysis_requested = Signal(dict) - F≈êCSATORNA  
src/gui/control_panel.py-11-- Widget Composition: 7 specializ√°lt widget komponens (+ MultiCityWidget)
--
src/gui/control_panel.py-86-    # === CLEAN ARCHITECTURE - EGYETLEN KIMEN≈ê SIGNAL ===
src/gui/control_panel.py:87:    analysis_requested = Signal(dict)  # Comprehensive analysis request
src/gui/control_panel.py-88-    
src/gui/control_panel.py-89-    # === MINIM√ÅLIS KOMPATIBILIT√ÅSI SIGNALOK ===
src/gui/control_panel.py:90:    search_requested = Signal(str)                        # LocationWidget geocoding
src/gui/control_panel.py:91:    city_selected = Signal(str, float, float, dict)       # LocationWidget selection  
src/gui/control_panel.py:92:    local_error_occurred = Signal(str)                    # Error handling
src/gui/control_panel.py-93-    
--
src/gui/charts/base_chart.py-41-    # Signalok
src/gui/charts/base_chart.py:42:    chart_clicked = Signal(float, float)  # x, y koordin√°t√°k
src/gui/charts/base_chart.py:43:    export_requested = Signal(str)  # format (png, pdf, svg)
src/gui/charts/base_chart.py-44-    
--
src/gui/theme_manager.py-63-    # Professional Signals
src/gui/theme_manager.py:64:    theme_changed = Signal(str)  # theme_name: "light" | "dark"
src/gui/theme_manager.py:65:    color_scheme_updated = Signal(object)  # ColorPalette instance
src/gui/theme_manager.py-66-    
--
src/gui/map_visualizer (1).py-132-    # Signalok JavaScript esem√©nyekhez
src/gui/map_visualizer (1).py:133:    county_clicked = Signal(str)              # county_name
src/gui/map_visualizer (1).py:134:    coordinates_clicked = Signal(float, float) # lat, lon
src/gui/map_visualizer (1).py:135:    map_moved = Signal(float, float, int)     # lat, lon, zoom
src/gui/map_visualizer (1).py:136:    county_hovered = Signal(str)              # county_name
src/gui/map_visualizer (1).py:137:    county_unhovered = Signal()               # hover v√©ge
src/gui/map_visualizer (1).py-138-
--
src/gui/map_visualizer (1).py-177-    # Signalok
src/gui/map_visualizer (1).py:178:    progress_updated = Signal(int)         # progress (0-100)
src/gui/map_visualizer (1).py:179:    map_generated = Signal(str)           # HTML f√°jl path
src/gui/map_visualizer (1).py:180:    error_occurred = Signal(str)          # error message
src/gui/map_visualizer (1).py:181:    status_updated = Signal(str)          # status message
src/gui/map_visualizer (1).py-182-
--
src/gui/map_visualizer (1).py-1042-    # Signalok
src/gui/map_visualizer (1).py:1043:    map_ready = Signal()                           # t√©rk√©p k√©sz
src/gui/map_visualizer (1).py:1044:    county_clicked = Signal(str)                   # megye n√©v
src/gui/map_visualizer (1).py:1045:    coordinates_clicked = Signal(float, float)     # lat, lon
src/gui/map_visualizer (1).py:1046:    map_moved = Signal(float, float, int)          # lat, lon, zoom
src/gui/map_visualizer (1).py:1047:    county_hovered = Signal(str)                   # megye hover
src/gui/map_visualizer (1).py:1048:    export_completed = Signal(str)                 # f√°jl √∫tvonal
src/gui/map_visualizer (1).py:1049:    error_occurred = Signal(str)                   # hiba √ºzenet
src/gui/map_visualizer (1).py:1050:    bounds_changed = Signal(object)                # t√©rk√©p hat√°r v√°ltoz√°s
src/gui/map_visualizer (1).py-1051-
--
src/gui/main_window.py-112-    # Signalok a t√©ma kezel√©s√©hez
src/gui/main_window.py:113:    theme_changed = Signal(str)  # theme name
src/gui/main_window.py:114:    view_changed = Signal(str)   # view name
src/gui/main_window.py-115-    
src/gui/main_window.py-116-    # üåç Provider signalok
src/gui/main_window.py:117:    provider_status_updated = Signal(str)  # provider status message
src/gui/main_window.py-118-    
--
src/gui/app_controller.py-57-    # Analysis lifecycle signalok
src/gui/app_controller.py:58:    analysis_started = Signal(str)              # analysis_type
src/gui/app_controller.py:59:    analysis_progress = Signal(str, int)        # message, percentage
src/gui/app_controller.py:60:    analysis_completed = Signal(dict)           # result_data
src/gui/app_controller.py:61:    analysis_failed = Signal(str)               # error_message
src/gui/app_controller.py:62:    analysis_cancelled = Signal()               # megszak√≠t√°s meger≈ës√≠t√©se
src/gui/app_controller.py-63-    
src/gui/app_controller.py-64-    # Eredeti signalok meg≈ërz√©se (backwards compatibility)
src/gui/app_controller.py:65:    geocoding_results_ready = Signal(list)      # List[Dict] - telep√ºl√©s tal√°latok
src/gui/app_controller.py:66:    weather_data_ready = Signal(dict)           # Dict - API v√°lasz adatok
src/gui/app_controller.py:67:    error_occurred = Signal(str)                # str - hiba√ºzenet
src/gui/app_controller.py:68:    status_updated = Signal(str)                # str - st√°tusz √ºzenet
src/gui/app_controller.py:69:    progress_updated = Signal(str, int)         # worker_type, progress
src/gui/app_controller.py-70-    
src/gui/app_controller.py-71-    # Adatb√°zis m≈±veletek eredm√©nyei
src/gui/app_controller.py:72:    city_saved_to_db = Signal(dict)             # Dict - elmentett telep√ºl√©s adatok
src/gui/app_controller.py:73:    weather_saved_to_db = Signal(bool)          # bool - sikeres ment√©s
src/gui/app_controller.py-74-    
src/gui/app_controller.py-75-    # üåç PROVIDER ROUTING SIGNALOK
src/gui/app_controller.py:76:    provider_selected = Signal(str)             # str - v√°lasztott provider neve
src/gui/app_controller.py:77:    provider_usage_updated = Signal(dict)       # Dict - usage statistics
src/gui/app_controller.py:78:    provider_warning = Signal(str, int)         # provider_name, usage_percent
src/gui/app_controller.py:79:    provider_fallback = Signal(str, str)        # from_provider, to_provider
src/gui/app_controller.py-80-    
--
src/gui/data_widgets.py-226-    # Signalok
src/gui/data_widgets.py:227:    row_selected = Signal(int)           # kiv√°lasztott sor index
src/gui/data_widgets.py:228:    data_filtered = Signal(int)          # sz≈±rt sorok sz√°ma
src/gui/data_widgets.py:229:    export_completed = Signal(str, bool) # filepath, success
src/gui/data_widgets.py:230:    sorting_changed = Signal(int, str)   # column, order (asc/desc)
src/gui/data_widgets.py-231-    
--
src/gui/main_windowold.py-100-    # Signalok a t√©ma kezel√©shez
src/gui/main_windowold.py:101:    theme_changed = Signal(str)  # theme name
src/gui/main_windowold.py:102:    view_changed = Signal(str)   # view name
src/gui/main_windowold.py-103-    
src/gui/main_windowold.py-104-    # üåç Provider signalok
src/gui/main_windowold.py:105:    provider_status_updated = Signal(str)  # provider status message
src/gui/main_windowold.py-106-    

üé∞ SLOT DECORATOR keres√©se...
src/gui/app_controller.py-138-    
src/gui/app_controller.py:139:    @Slot(dict)
src/gui/app_controller.py-140-    def handle_analysis_request(self, request_data: Dict[str, Any]) -> None:
--
src/gui/app_controller.py-399-    
src/gui/app_controller.py:400:    @Slot(str, int)
src/gui/app_controller.py-401-    def _on_analysis_progress(self, message: str, percentage: int):
--
src/gui/app_controller.py-407-    
src/gui/app_controller.py:408:    @Slot(dict)
src/gui/app_controller.py-409-    def _on_analysis_completed(self, result_data: dict):
--
src/gui/app_controller.py-439-    
src/gui/app_controller.py:440:    @Slot(str)
src/gui/app_controller.py-441-    def _on_analysis_failed(self, error_message: str):
--
src/gui/app_controller.py-449-    
src/gui/app_controller.py:450:    @Slot()
src/gui/app_controller.py-451-    def _on_analysis_cancelled(self):
--
src/gui/app_controller.py-814-    
src/gui/app_controller.py:815:    @Slot(str)
src/gui/app_controller.py-816-    def handle_provider_change(self, provider_name: str) -> None:
--
src/gui/app_controller.py-849-    
src/gui/app_controller.py:850:    @Slot(str)
src/gui/app_controller.py-851-    def handle_search_request(self, search_query: str) -> None:
--
src/gui/app_controller.py-896-    
src/gui/app_controller.py:897:    @Slot(list)
src/gui/app_controller.py-898-    def _on_geocoding_completed(self, results: List[Dict[str, Any]]) -> None:
--
src/gui/app_controller.py-1015-    
src/gui/app_controller.py:1016:    @Slot(str, float, float, dict)
src/gui/app_controller.py-1017-    def handle_city_selection(self, city_name: str, latitude: float, longitude: float, metadata: Dict[str, Any]) -> None:
--
src/gui/app_controller.py-1089-    
src/gui/app_controller.py:1090:    @Slot(float, float, str, str, dict)
src/gui/app_controller.py-1091-    def handle_weather_data_request(self, latitude: float, longitude: float, 
--
src/gui/app_controller.py-1121-    
src/gui/app_controller.py:1122:    @Slot(dict)
src/gui/app_controller.py-1123-    def _on_weather_data_completed(self, data: Dict[str, Any]) -> None:
--
src/gui/app_controller.py-1450-    
src/gui/app_controller.py:1451:    @Slot(str)
src/gui/app_controller.py-1452-    def _on_worker_error(self, error_message: str) -> None:


üéØ === SIGNAL CHAIN DIAGRAM ===
ELV√ÅRT M≈∞K√ñD√âS:
1. ControlPanel.analysis_requested ‚Üí 2. AppController.handle_analysis_request
3. AppController ‚Üí 4. AnalysisWorker.run_analysis
5. AnalysisWorker.analysis_completed.emit() ‚Üí 6. MainWindow._on_analysis_completed_with_city_fix()
7. MainWindow ‚Üí 8. AnalyticsView.update_data(weather_data)

GREP-pel keress r√° hogy melyik l√©p√©s hi√°nyzik! üïµÔ∏è
